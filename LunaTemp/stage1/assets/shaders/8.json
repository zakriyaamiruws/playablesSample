{"id":8,"assetBundleId":-2,"data":[[],"Hidden\/Internal-ScreenSpaceShadows",null,["SHADOWS_SINGLE_CASCADE","SHADOWS_SPLIT_SPHERES","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO"],[[0,0,"",0,"",0,[8,null],[0,null],[0,null],[[1,null],[0,null],[0,null]],[[1,null],[0,null],[0,null]],[15,null],[0,null],[0,null],[0,null],[255,null],[255,null],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["ShadowmapFilter","HardShadow"]],["SHADOWS_SINGLE_CASCADE","SHADOWS_SPLIT_SPHERES","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO"],[[[],0],[["SHADOWS_SPLIT_SPHERES"],0],[["SHADOWS_SINGLE_CASCADE"],0],[["SHADOWS_SPLIT_SPHERES","SHADOWS_SINGLE_CASCADE"],0]],[[0,0,[],"\n#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 _LightSplitsNear;\nuniform \tvec4 _LightSplitsFar;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform \tmediump vec4 _LightShadowData;\nuniform highp sampler2D _CameraDepthTexture;\nuniform highp sampler2D _ShadowMapTexture;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nbvec4 u_xlatb1;\nvec4 u_xlat2;\nbvec4 u_xlatb2;\nvec3 u_xlat3;\nmediump float u_xlat16_4;\nfloat u_xlat5;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0.x = texture2D(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat5 = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n    u_xlat5 = float(1.0) \/ u_xlat5;\n    u_xlat10 = (-u_xlat5) + u_xlat0.x;\n    u_xlat5 = unity_OrthoParams.w * u_xlat10 + u_xlat5;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n    u_xlat0.xzw = u_xlat0.xxx * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw = (-vs_TEXCOORD1.xyz) * vec3(u_xlat5) + u_xlat0.xzw;\n    u_xlat1.xyz = vec3(u_xlat5) * vs_TEXCOORD1.xyz;\n    u_xlat0.xyz = unity_OrthoParams.www * u_xlat0.xzw + u_xlat1.xyz;\n    u_xlatb1 = greaterThanEqual(u_xlat0.zzzz, _LightSplitsNear);\n    u_xlat1.x = u_xlatb1.x ? float(1.0) : 0.0;\n    u_xlat1.y = u_xlatb1.y ? float(1.0) : 0.0;\n    u_xlat1.z = u_xlatb1.z ? float(1.0) : 0.0;\n    u_xlat1.w = u_xlatb1.w ? float(1.0) : 0.0;\n;\n    u_xlatb2 = lessThan(u_xlat0.zzzz, _LightSplitsFar);\n    u_xlat2.x = u_xlatb2.x ? float(1.0) : 0.0;\n    u_xlat2.y = u_xlatb2.y ? float(1.0) : 0.0;\n    u_xlat2.z = u_xlatb2.z ? float(1.0) : 0.0;\n    u_xlat2.w = u_xlatb2.w ? float(1.0) : 0.0;\n;\n    u_xlat16_1 = u_xlat1 * u_xlat2;\n    u_xlat2 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat2 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat2;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat2;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[5].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[4].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[6].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[7].xyz * u_xlat0.www + u_xlat2.xyz;\n    u_xlat2.xyz = u_xlat16_1.yyy * u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz * u_xlat0.www + u_xlat3.xyz;\n    u_xlat2.xyz = u_xlat3.xyz * u_xlat16_1.xxx + u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[9].xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[8].xyz * u_xlat0.xxx + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[10].xyz * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[11].xyz * u_xlat0.www + u_xlat3.xyz;\n    u_xlat2.xyz = u_xlat3.xyz * u_xlat16_1.zzz + u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[13].xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[12].xyz * u_xlat0.xxx + u_xlat3.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[14].xyz * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[15].xyz * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.www + u_xlat2.xyz;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n    u_xlatb0 = u_xlat0.x<u_xlat0.z;\n    u_xlat16_4 = (-_LightShadowData.x) + 1.0;\n    u_xlat16_4 = (u_xlatb0) ? 0.0 : u_xlat16_4;\n    SV_Target0 = vec4(u_xlat16_4) + _LightShadowData.xxxx;\n    return;\n}\n\n",0,1],[0,0,[],"\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin highp vec4 in_POSITION0;\nin highp vec2 in_TEXCOORD0;\nin highp vec3 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n","\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 _LightSplitsNear;\nuniform \tvec4 _LightSplitsFar;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform \tmediump vec4 _LightShadowData;\nUNITY_LOCATION(0) uniform highp sampler2D _CameraDepthTexture;\nUNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;\nUNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;\nin highp vec4 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD1;\nin highp vec3 vs_TEXCOORD2;\nin highp vec3 vs_TEXCOORD3;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nbvec4 u_xlatb1;\nvec4 u_xlat2;\nbvec4 u_xlatb2;\nvec3 u_xlat3;\nmediump float u_xlat16_4;\nfloat u_xlat5;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0.x = texture(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat5 = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n    u_xlat5 = float(1.0) \/ u_xlat5;\n    u_xlat10 = (-u_xlat5) + u_xlat0.x;\n    u_xlat5 = unity_OrthoParams.w * u_xlat10 + u_xlat5;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n    u_xlat0.xzw = u_xlat0.xxx * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw = (-vs_TEXCOORD1.xyz) * vec3(u_xlat5) + u_xlat0.xzw;\n    u_xlat1.xyz = vec3(u_xlat5) * vs_TEXCOORD1.xyz;\n    u_xlat0.xyz = unity_OrthoParams.www * u_xlat0.xzw + u_xlat1.xyz;\n    u_xlatb1 = greaterThanEqual(u_xlat0.zzzz, _LightSplitsNear);\n    u_xlat1.x = u_xlatb1.x ? float(1.0) : 0.0;\n    u_xlat1.y = u_xlatb1.y ? float(1.0) : 0.0;\n    u_xlat1.z = u_xlatb1.z ? float(1.0) : 0.0;\n    u_xlat1.w = u_xlatb1.w ? float(1.0) : 0.0;\n;\n    u_xlatb2 = lessThan(u_xlat0.zzzz, _LightSplitsFar);\n    u_xlat2.x = u_xlatb2.x ? float(1.0) : 0.0;\n    u_xlat2.y = u_xlatb2.y ? float(1.0) : 0.0;\n    u_xlat2.z = u_xlatb2.z ? float(1.0) : 0.0;\n    u_xlat2.w = u_xlatb2.w ? float(1.0) : 0.0;\n;\n    u_xlat16_1 = u_xlat1 * u_xlat2;\n    u_xlat2 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat2 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat2;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat2;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[5].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[4].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[6].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[7].xyz * u_xlat0.www + u_xlat2.xyz;\n    u_xlat2.xyz = u_xlat16_1.yyy * u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz * u_xlat0.www + u_xlat3.xyz;\n    u_xlat2.xyz = u_xlat3.xyz * u_xlat16_1.xxx + u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[9].xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[8].xyz * u_xlat0.xxx + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[10].xyz * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[11].xyz * u_xlat0.www + u_xlat3.xyz;\n    u_xlat2.xyz = u_xlat3.xyz * u_xlat16_1.zzz + u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[13].xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[12].xyz * u_xlat0.xxx + u_xlat3.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[14].xyz * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[15].xyz * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.www + u_xlat2.xyz;\n    vec3 txVec0 = vec3(u_xlat0.xy,u_xlat0.z);\n    u_xlat0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);\n    u_xlat16_4 = (-_LightShadowData.x) + 1.0;\n    SV_Target0 = u_xlat0.xxxx * vec4(u_xlat16_4) + _LightShadowData.xxxx;\n    return;\n}\n\n",1,1],[0,0,["SHADOWS_SPLIT_SPHERES"],"\n#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 unity_ShadowSplitSpheres[4];\nuniform \tvec4 unity_ShadowSplitSqRadii;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform \tmediump vec4 _LightShadowData;\nuniform highp sampler2D _CameraDepthTexture;\nuniform highp sampler2D _ShadowMapTexture;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nbvec4 u_xlatb1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat4;\nvec3 u_xlat5;\nfloat u_xlat8;\nvoid main()\n{\n    u_xlat0.x = texture2D(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat4 = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n    u_xlat4 = float(1.0) \/ u_xlat4;\n    u_xlat8 = (-u_xlat4) + u_xlat0.x;\n    u_xlat4 = unity_OrthoParams.w * u_xlat8 + u_xlat4;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n    u_xlat0.xzw = u_xlat0.xxx * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw = (-vs_TEXCOORD1.xyz) * vec3(u_xlat4) + u_xlat0.xzw;\n    u_xlat1.xyz = vec3(u_xlat4) * vs_TEXCOORD1.xyz;\n    u_xlat0.xyz = unity_OrthoParams.www * u_xlat0.xzw + u_xlat1.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat1.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[0].xyz);\n    u_xlat1.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat2.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[1].xyz);\n    u_xlat1.y = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[2].xyz);\n    u_xlat1.z = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[3].xyz);\n    u_xlat1.w = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlatb1 = lessThan(u_xlat1, unity_ShadowSplitSqRadii);\n    u_xlat16_3.x = (u_xlatb1.x) ? float(-1.0) : float(-0.0);\n    u_xlat16_3.y = (u_xlatb1.y) ? float(-1.0) : float(-0.0);\n    u_xlat16_3.z = (u_xlatb1.z) ? float(-1.0) : float(-0.0);\n    u_xlat1.x = u_xlatb1.x ? float(1.0) : 0.0;\n    u_xlat1.y = u_xlatb1.y ? float(1.0) : 0.0;\n    u_xlat1.z = u_xlatb1.z ? float(1.0) : 0.0;\n    u_xlat1.w = u_xlatb1.w ? float(1.0) : 0.0;\n;\n    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat1.yzw;\n    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat5.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[5].xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[4].xyz * u_xlat0.xxx + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[6].xyz * u_xlat0.zzz + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[7].xyz * u_xlat0.www + u_xlat5.xyz;\n    u_xlat5.xyz = u_xlat16_3.xxx * u_xlat5.xyz;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz * u_xlat0.www + u_xlat2.xyz;\n    u_xlat1.xyz = u_xlat2.xyz * u_xlat1.xxx + u_xlat5.xyz;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[9].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[8].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[10].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[11].xyz * u_xlat0.www + u_xlat2.xyz;\n    u_xlat1.xyz = u_xlat2.xyz * u_xlat16_3.yyy + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[13].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[12].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[14].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[15].xyz * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.zzz + u_xlat1.xyz;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n    u_xlatb0 = u_xlat0.x<u_xlat0.z;\n    u_xlat16_3.x = (-_LightShadowData.x) + 1.0;\n    u_xlat16_3.x = (u_xlatb0) ? 0.0 : u_xlat16_3.x;\n    SV_Target0 = u_xlat16_3.xxxx + _LightShadowData.xxxx;\n    return;\n}\n\n",0,1],[0,0,["SHADOWS_SPLIT_SPHERES"],"\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin highp vec4 in_POSITION0;\nin highp vec2 in_TEXCOORD0;\nin highp vec3 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n","\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 unity_ShadowSplitSpheres[4];\nuniform \tvec4 unity_ShadowSplitSqRadii;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform \tmediump vec4 _LightShadowData;\nUNITY_LOCATION(0) uniform highp sampler2D _CameraDepthTexture;\nUNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;\nUNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;\nin highp vec4 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD1;\nin highp vec3 vs_TEXCOORD2;\nin highp vec3 vs_TEXCOORD3;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbvec4 u_xlatb1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat4;\nvec3 u_xlat5;\nfloat u_xlat8;\nvoid main()\n{\n    u_xlat0.x = texture(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat4 = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n    u_xlat4 = float(1.0) \/ u_xlat4;\n    u_xlat8 = (-u_xlat4) + u_xlat0.x;\n    u_xlat4 = unity_OrthoParams.w * u_xlat8 + u_xlat4;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n    u_xlat0.xzw = u_xlat0.xxx * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw = (-vs_TEXCOORD1.xyz) * vec3(u_xlat4) + u_xlat0.xzw;\n    u_xlat1.xyz = vec3(u_xlat4) * vs_TEXCOORD1.xyz;\n    u_xlat0.xyz = unity_OrthoParams.www * u_xlat0.xzw + u_xlat1.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat1.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[0].xyz);\n    u_xlat1.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat2.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[1].xyz);\n    u_xlat1.y = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[2].xyz);\n    u_xlat1.z = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[3].xyz);\n    u_xlat1.w = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlatb1 = lessThan(u_xlat1, unity_ShadowSplitSqRadii);\n    u_xlat16_3.x = (u_xlatb1.x) ? float(-1.0) : float(-0.0);\n    u_xlat16_3.y = (u_xlatb1.y) ? float(-1.0) : float(-0.0);\n    u_xlat16_3.z = (u_xlatb1.z) ? float(-1.0) : float(-0.0);\n    u_xlat1.x = u_xlatb1.x ? float(1.0) : 0.0;\n    u_xlat1.y = u_xlatb1.y ? float(1.0) : 0.0;\n    u_xlat1.z = u_xlatb1.z ? float(1.0) : 0.0;\n    u_xlat1.w = u_xlatb1.w ? float(1.0) : 0.0;\n;\n    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat1.yzw;\n    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat5.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[5].xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[4].xyz * u_xlat0.xxx + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[6].xyz * u_xlat0.zzz + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[7].xyz * u_xlat0.www + u_xlat5.xyz;\n    u_xlat5.xyz = u_xlat16_3.xxx * u_xlat5.xyz;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz * u_xlat0.www + u_xlat2.xyz;\n    u_xlat1.xyz = u_xlat2.xyz * u_xlat1.xxx + u_xlat5.xyz;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[9].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[8].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[10].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[11].xyz * u_xlat0.www + u_xlat2.xyz;\n    u_xlat1.xyz = u_xlat2.xyz * u_xlat16_3.yyy + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[13].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[12].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[14].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[15].xyz * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.zzz + u_xlat1.xyz;\n    vec3 txVec0 = vec3(u_xlat0.xy,u_xlat0.z);\n    u_xlat0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);\n    u_xlat16_3.x = (-_LightShadowData.x) + 1.0;\n    SV_Target0 = u_xlat0.xxxx * u_xlat16_3.xxxx + _LightShadowData.xxxx;\n    return;\n}\n\n",1,1],[0,0,["SHADOWS_SINGLE_CASCADE"],"\n#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform \tmediump vec4 _LightShadowData;\nuniform highp sampler2D _CameraDepthTexture;\nuniform highp sampler2D _ShadowMapTexture;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nfloat u_xlat3;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0.x = texture2D(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat3 = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n    u_xlat3 = float(1.0) \/ u_xlat3;\n    u_xlat6 = (-u_xlat3) + u_xlat0.x;\n    u_xlat3 = unity_OrthoParams.w * u_xlat6 + u_xlat3;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n    u_xlat0.xzw = u_xlat0.xxx * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw = (-vs_TEXCOORD1.xyz) * vec3(u_xlat3) + u_xlat0.xzw;\n    u_xlat1.xyz = vec3(u_xlat3) * vs_TEXCOORD1.xyz;\n    u_xlat0.xyz = unity_OrthoParams.www * u_xlat0.xzw + u_xlat1.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n    u_xlatb0 = u_xlat0.x<u_xlat0.z;\n    u_xlat16_2 = (-_LightShadowData.x) + 1.0;\n    u_xlat16_2 = (u_xlatb0) ? 0.0 : u_xlat16_2;\n    SV_Target0 = vec4(u_xlat16_2) + _LightShadowData.xxxx;\n    return;\n}\n\n",0,1],[0,0,["SHADOWS_SINGLE_CASCADE"],"\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin highp vec4 in_POSITION0;\nin highp vec2 in_TEXCOORD0;\nin highp vec3 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n","\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform \tmediump vec4 _LightShadowData;\nUNITY_LOCATION(0) uniform highp sampler2D _CameraDepthTexture;\nUNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;\nUNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;\nin highp vec4 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD1;\nin highp vec3 vs_TEXCOORD2;\nin highp vec3 vs_TEXCOORD3;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nfloat u_xlat3;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0.x = texture(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat3 = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n    u_xlat3 = float(1.0) \/ u_xlat3;\n    u_xlat6 = (-u_xlat3) + u_xlat0.x;\n    u_xlat3 = unity_OrthoParams.w * u_xlat6 + u_xlat3;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n    u_xlat0.xzw = u_xlat0.xxx * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw = (-vs_TEXCOORD1.xyz) * vec3(u_xlat3) + u_xlat0.xzw;\n    u_xlat1.xyz = vec3(u_xlat3) * vs_TEXCOORD1.xyz;\n    u_xlat0.xyz = unity_OrthoParams.www * u_xlat0.xzw + u_xlat1.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz * u_xlat0.www + u_xlat0.xyz;\n    vec3 txVec0 = vec3(u_xlat0.xy,u_xlat0.z);\n    u_xlat0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);\n    u_xlat16_2 = (-_LightShadowData.x) + 1.0;\n    SV_Target0 = u_xlat0.xxxx * vec4(u_xlat16_2) + _LightShadowData.xxxx;\n    return;\n}\n\n",1,1],[0,0,["SHADOWS_SINGLE_CASCADE","SHADOWS_SPLIT_SPHERES"],"\n#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform \tmediump vec4 _LightShadowData;\nuniform highp sampler2D _CameraDepthTexture;\nuniform highp sampler2D _ShadowMapTexture;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nfloat u_xlat3;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0.x = texture2D(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat3 = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n    u_xlat3 = float(1.0) \/ u_xlat3;\n    u_xlat6 = (-u_xlat3) + u_xlat0.x;\n    u_xlat3 = unity_OrthoParams.w * u_xlat6 + u_xlat3;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n    u_xlat0.xzw = u_xlat0.xxx * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw = (-vs_TEXCOORD1.xyz) * vec3(u_xlat3) + u_xlat0.xzw;\n    u_xlat1.xyz = vec3(u_xlat3) * vs_TEXCOORD1.xyz;\n    u_xlat0.xyz = unity_OrthoParams.www * u_xlat0.xzw + u_xlat1.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n    u_xlatb0 = u_xlat0.x<u_xlat0.z;\n    u_xlat16_2 = (-_LightShadowData.x) + 1.0;\n    u_xlat16_2 = (u_xlatb0) ? 0.0 : u_xlat16_2;\n    SV_Target0 = vec4(u_xlat16_2) + _LightShadowData.xxxx;\n    return;\n}\n\n",0,1],[0,0,["SHADOWS_SINGLE_CASCADE","SHADOWS_SPLIT_SPHERES"],"\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin highp vec4 in_POSITION0;\nin highp vec2 in_TEXCOORD0;\nin highp vec3 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n","\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform \tmediump vec4 _LightShadowData;\nUNITY_LOCATION(0) uniform highp sampler2D _CameraDepthTexture;\nUNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;\nUNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;\nin highp vec4 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD1;\nin highp vec3 vs_TEXCOORD2;\nin highp vec3 vs_TEXCOORD3;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nfloat u_xlat3;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0.x = texture(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat3 = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n    u_xlat3 = float(1.0) \/ u_xlat3;\n    u_xlat6 = (-u_xlat3) + u_xlat0.x;\n    u_xlat3 = unity_OrthoParams.w * u_xlat6 + u_xlat3;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n    u_xlat0.xzw = u_xlat0.xxx * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw = (-vs_TEXCOORD1.xyz) * vec3(u_xlat3) + u_xlat0.xzw;\n    u_xlat1.xyz = vec3(u_xlat3) * vs_TEXCOORD1.xyz;\n    u_xlat0.xyz = unity_OrthoParams.www * u_xlat0.xzw + u_xlat1.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz * u_xlat0.www + u_xlat0.xyz;\n    vec3 txVec0 = vec3(u_xlat0.xy,u_xlat0.z);\n    u_xlat0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);\n    u_xlat16_2 = (-_LightShadowData.x) + 1.0;\n    SV_Target0 = u_xlat0.xxxx * vec4(u_xlat16_2) + _LightShadowData.xxxx;\n    return;\n}\n\n",1,1]],[],1],[0,2,"",0,"",0,[8,null],[0,null],[0,null],[[1,null],[0,null],[0,null]],[[1,null],[0,null],[0,null]],[15,null],[0,null],[0,null],[0,null],[255,null],[255,null],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["ShadowmapFilter","PCF_SOFT"]],["SHADOWS_SINGLE_CASCADE","SHADOWS_SPLIT_SPHERES","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO"],[[[],0],[["SHADOWS_SPLIT_SPHERES"],0],[["SHADOWS_SINGLE_CASCADE"],0],[["SHADOWS_SPLIT_SPHERES","SHADOWS_SINGLE_CASCADE"],0]],[[0,2,[],"\n#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 _LightSplitsNear;\nuniform \tvec4 _LightSplitsFar;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform \tmediump vec4 _LightShadowData;\nuniform \tvec4 _ShadowMapTexture_TexelSize;\nuniform highp sampler2D _CameraDepthTexture;\nuniform highp sampler2D _ShadowMapTexture;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nbvec4 u_xlatb1;\nvec4 u_xlat2;\nbvec4 u_xlatb2;\nvec3 u_xlat3;\nmediump float u_xlat16_4;\nfloat u_xlat5;\nvec2 u_xlat7;\nfloat u_xlat10;\nvec2 u_xlat11;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.x = texture2D(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat5 = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n    u_xlat5 = float(1.0) \/ u_xlat5;\n    u_xlat10 = (-u_xlat5) + u_xlat0.x;\n    u_xlat5 = unity_OrthoParams.w * u_xlat10 + u_xlat5;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n    u_xlat0.xzw = u_xlat0.xxx * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw = (-vs_TEXCOORD1.xyz) * vec3(u_xlat5) + u_xlat0.xzw;\n    u_xlat1.xyz = vec3(u_xlat5) * vs_TEXCOORD1.xyz;\n    u_xlat0.xyz = unity_OrthoParams.www * u_xlat0.xzw + u_xlat1.xyz;\n    u_xlatb1 = greaterThanEqual(u_xlat0.zzzz, _LightSplitsNear);\n    u_xlat1.x = u_xlatb1.x ? float(1.0) : 0.0;\n    u_xlat1.y = u_xlatb1.y ? float(1.0) : 0.0;\n    u_xlat1.z = u_xlatb1.z ? float(1.0) : 0.0;\n    u_xlat1.w = u_xlatb1.w ? float(1.0) : 0.0;\n;\n    u_xlatb2 = lessThan(u_xlat0.zzzz, _LightSplitsFar);\n    u_xlat2.x = u_xlatb2.x ? float(1.0) : 0.0;\n    u_xlat2.y = u_xlatb2.y ? float(1.0) : 0.0;\n    u_xlat2.z = u_xlatb2.z ? float(1.0) : 0.0;\n    u_xlat2.w = u_xlatb2.w ? float(1.0) : 0.0;\n;\n    u_xlat16_1 = u_xlat1 * u_xlat2;\n    u_xlat2 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat2 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat2;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat2;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[5].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[4].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[6].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[7].xyz * u_xlat0.www + u_xlat2.xyz;\n    u_xlat2.xyz = u_xlat16_1.yyy * u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz * u_xlat0.www + u_xlat3.xyz;\n    u_xlat2.xyz = u_xlat3.xyz * u_xlat16_1.xxx + u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[9].xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[8].xyz * u_xlat0.xxx + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[10].xyz * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[11].xyz * u_xlat0.www + u_xlat3.xyz;\n    u_xlat2.xyz = u_xlat3.xyz * u_xlat16_1.zzz + u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[13].xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[12].xyz * u_xlat0.xxx + u_xlat3.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[14].xyz * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[15].xyz * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.www + u_xlat2.xyz;\n    u_xlat1.z = 0.0;\n    u_xlat1.xyw = (-_ShadowMapTexture_TexelSize.xyy);\n    u_xlat2 = u_xlat0.xyxy + u_xlat1.zwxy;\n    u_xlat15 = texture2D(_ShadowMapTexture, u_xlat2.zw).x;\n    u_xlatb15 = u_xlat15<u_xlat0.z;\n    u_xlat15 = (u_xlatb15) ? 0.0 : 1.0;\n    u_xlat2.x = texture2D(_ShadowMapTexture, u_xlat2.xy).x;\n    u_xlatb2.x = u_xlat2.x<u_xlat0.z;\n    u_xlat2.x = (u_xlatb2.x) ? 0.0 : 1.0;\n    u_xlat16_4 = u_xlat15 + u_xlat2.x;\n    u_xlat1 = _ShadowMapTexture_TexelSize.xyxy * vec4(1.0, -1.0, -1.0, 1.0) + u_xlat0.xyxy;\n    u_xlat15 = texture2D(_ShadowMapTexture, u_xlat1.xy).x;\n    u_xlat2.x = texture2D(_ShadowMapTexture, u_xlat1.zw).x;\n    u_xlatb2.x = u_xlat2.x<u_xlat0.z;\n    u_xlat2.x = (u_xlatb2.x) ? 0.0 : 1.0;\n    u_xlatb15 = u_xlat15<u_xlat0.z;\n    u_xlat15 = (u_xlatb15) ? 0.0 : 1.0;\n    u_xlat16_4 = u_xlat15 + u_xlat16_4;\n    u_xlat1.x = (-_ShadowMapTexture_TexelSize.x);\n    u_xlat1.y = float(0.0);\n    u_xlat11.y = float(0.0);\n    u_xlat7.xy = u_xlat0.xy + u_xlat1.xy;\n    u_xlat15 = texture2D(_ShadowMapTexture, u_xlat7.xy).x;\n    u_xlatb15 = u_xlat15<u_xlat0.z;\n    u_xlat15 = (u_xlatb15) ? 0.0 : 1.0;\n    u_xlat16_4 = u_xlat15 + u_xlat16_4;\n    u_xlat15 = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n    u_xlatb15 = u_xlat15<u_xlat0.z;\n    u_xlat15 = (u_xlatb15) ? 0.0 : 1.0;\n    u_xlat16_4 = u_xlat15 + u_xlat16_4;\n    u_xlat11.x = _ShadowMapTexture_TexelSize.x;\n    u_xlat7.xy = u_xlat0.xy + u_xlat11.xy;\n    u_xlat15 = texture2D(_ShadowMapTexture, u_xlat7.xy).x;\n    u_xlatb15 = u_xlat15<u_xlat0.z;\n    u_xlat15 = (u_xlatb15) ? 0.0 : 1.0;\n    u_xlat16_4 = u_xlat15 + u_xlat16_4;\n    u_xlat16_4 = u_xlat2.x + u_xlat16_4;\n    u_xlat2.x = 0.0;\n    u_xlat2.y = _ShadowMapTexture_TexelSize.y;\n    u_xlat2.xy = u_xlat0.xy + u_xlat2.xy;\n    u_xlat15 = texture2D(_ShadowMapTexture, u_xlat2.xy).x;\n    u_xlatb15 = u_xlat15<u_xlat0.z;\n    u_xlat15 = (u_xlatb15) ? 0.0 : 1.0;\n    u_xlat16_4 = u_xlat15 + u_xlat16_4;\n    u_xlat0.xy = u_xlat0.xy + _ShadowMapTexture_TexelSize.xy;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n    u_xlatb0 = u_xlat0.x<u_xlat0.z;\n    u_xlat0.x = (u_xlatb0) ? 0.0 : 1.0;\n    u_xlat16_4 = u_xlat0.x + u_xlat16_4;\n    u_xlat16_4 = u_xlat16_4 * 0.111111112;\n    u_xlat0.x = (-_LightShadowData.x) + 1.0;\n    u_xlat0 = vec4(u_xlat16_4) * u_xlat0.xxxx + _LightShadowData.xxxx;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n",0,1],[0,2,[],"\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin highp vec4 in_POSITION0;\nin highp vec2 in_TEXCOORD0;\nin highp vec3 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n","\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 _LightSplitsNear;\nuniform \tvec4 _LightSplitsFar;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform \tmediump vec4 _LightShadowData;\nuniform \tvec4 _ShadowMapTexture_TexelSize;\nUNITY_LOCATION(0) uniform highp sampler2D _CameraDepthTexture;\nUNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;\nUNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;\nin highp vec4 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD1;\nin highp vec3 vs_TEXCOORD2;\nin highp vec3 vs_TEXCOORD3;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nbvec4 u_xlatb1;\nvec4 u_xlat2;\nbvec4 u_xlatb2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nvec4 u_xlat5;\nvec4 u_xlat6;\nfloat u_xlat7;\nfloat u_xlat9;\nfloat u_xlat14;\nvec2 u_xlat16;\nfloat u_xlat21;\nfloat u_xlat23;\nvoid main()\n{\n    u_xlat0.x = texture(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat7 = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n    u_xlat7 = float(1.0) \/ u_xlat7;\n    u_xlat14 = (-u_xlat7) + u_xlat0.x;\n    u_xlat7 = unity_OrthoParams.w * u_xlat14 + u_xlat7;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n    u_xlat0.xzw = u_xlat0.xxx * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw = (-vs_TEXCOORD1.xyz) * vec3(u_xlat7) + u_xlat0.xzw;\n    u_xlat1.xyz = vec3(u_xlat7) * vs_TEXCOORD1.xyz;\n    u_xlat0.xyz = unity_OrthoParams.www * u_xlat0.xzw + u_xlat1.xyz;\n    u_xlatb1 = greaterThanEqual(u_xlat0.zzzz, _LightSplitsNear);\n    u_xlat1.x = u_xlatb1.x ? float(1.0) : 0.0;\n    u_xlat1.y = u_xlatb1.y ? float(1.0) : 0.0;\n    u_xlat1.z = u_xlatb1.z ? float(1.0) : 0.0;\n    u_xlat1.w = u_xlatb1.w ? float(1.0) : 0.0;\n;\n    u_xlatb2 = lessThan(u_xlat0.zzzz, _LightSplitsFar);\n    u_xlat2.x = u_xlatb2.x ? float(1.0) : 0.0;\n    u_xlat2.y = u_xlatb2.y ? float(1.0) : 0.0;\n    u_xlat2.z = u_xlatb2.z ? float(1.0) : 0.0;\n    u_xlat2.w = u_xlatb2.w ? float(1.0) : 0.0;\n;\n    u_xlat16_1 = u_xlat1 * u_xlat2;\n    u_xlat2 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat2 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat2;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat2;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[5].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[4].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[6].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[7].xyz * u_xlat0.www + u_xlat2.xyz;\n    u_xlat2.xyz = u_xlat16_1.yyy * u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz * u_xlat0.www + u_xlat3.xyz;\n    u_xlat2.xyz = u_xlat3.xyz * u_xlat16_1.xxx + u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[9].xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[8].xyz * u_xlat0.xxx + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[10].xyz * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[11].xyz * u_xlat0.www + u_xlat3.xyz;\n    u_xlat2.xyz = u_xlat3.xyz * u_xlat16_1.zzz + u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[13].xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[12].xyz * u_xlat0.xxx + u_xlat3.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[14].xyz * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[15].xyz * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.www + u_xlat2.xyz;\n    u_xlat2.xy = u_xlat0.xy * _ShadowMapTexture_TexelSize.zw + vec2(0.5, 0.5);\n    u_xlat2.xy = floor(u_xlat2.xy);\n    u_xlat0.xy = u_xlat0.xy * _ShadowMapTexture_TexelSize.zw + (-u_xlat2.xy);\n    u_xlat16.xy = min(u_xlat0.xy, vec2(0.0, 0.0));\n    u_xlat3.xy = (-u_xlat0.xy) + vec2(1.0, 1.0);\n    u_xlat16.xy = (-u_xlat16.xy) * u_xlat16.xy + u_xlat3.xy;\n    u_xlat1.xy = u_xlat3.xy * vec2(0.159999996, 0.159999996);\n    u_xlat16.xy = u_xlat16.xy + vec2(1.0, 1.0);\n    u_xlat3.xy = u_xlat16.xy * vec2(0.159999996, 0.159999996);\n    u_xlat16.xy = max(u_xlat0.xy, vec2(0.0, 0.0));\n    u_xlat4 = u_xlat0.xxyy + vec4(0.5, 1.0, 0.5, 1.0);\n    u_xlat16.xy = (-u_xlat16.xy) * u_xlat16.xy + u_xlat4.yw;\n    u_xlat16.xy = u_xlat16.xy + vec2(1.0, 1.0);\n    u_xlat5.xy = u_xlat16.xy * vec2(0.159999996, 0.159999996);\n    u_xlat6 = u_xlat4.xxzz * u_xlat4.xxzz;\n    u_xlat16.xy = u_xlat4.yw * vec2(0.159999996, 0.159999996);\n    u_xlat0.xy = u_xlat6.xz * vec2(0.5, 0.5) + (-u_xlat0.xy);\n    u_xlat1.zw = u_xlat6.wy * vec2(0.0799999982, 0.0799999982);\n    u_xlat4.xy = u_xlat0.xy * vec2(0.159999996, 0.159999996);\n    u_xlat3.z = u_xlat4.y;\n    u_xlat3.w = u_xlat16.y;\n    u_xlat4.w = u_xlat16.x;\n    u_xlat5.zw = u_xlat1.yz;\n    u_xlat0.xyw = u_xlat3.zyw + u_xlat5.zyw;\n    u_xlat4.z = u_xlat3.x;\n    u_xlat3.xyz = u_xlat5.zyw \/ u_xlat0.xyw;\n    u_xlat1.z = u_xlat5.x;\n    u_xlat3.xyz = u_xlat3.xyz + vec3(-2.5, -0.5, 1.5);\n    u_xlat3.xyz = u_xlat3.xyz * _ShadowMapTexture_TexelSize.yyy;\n    u_xlat5.w = u_xlat3.x;\n    u_xlat4 = u_xlat1.zwxz + u_xlat4.zwxz;\n    u_xlat6.xyz = u_xlat1.xzw \/ u_xlat4.zwy;\n    u_xlat6.xyz = u_xlat6.xyz + vec3(-2.5, -0.5, 1.5);\n    u_xlat5.xyz = u_xlat6.yxz * _ShadowMapTexture_TexelSize.xxx;\n    u_xlat1 = u_xlat2.xyxy * _ShadowMapTexture_TexelSize.xyxy + u_xlat5.ywxw;\n    u_xlat16.xy = u_xlat2.xy * _ShadowMapTexture_TexelSize.xy + u_xlat5.zw;\n    vec3 txVec0 = vec3(u_xlat16.xy,u_xlat0.z);\n    u_xlat16.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);\n    vec3 txVec1 = vec3(u_xlat1.xy,u_xlat0.z);\n    u_xlat23 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec1, 0.0);\n    vec3 txVec2 = vec3(u_xlat1.zw,u_xlat0.z);\n    u_xlat3.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec2, 0.0);\n    u_xlat1 = u_xlat0.xxxy * u_xlat4.zwyz;\n    u_xlat0.x = u_xlat3.x * u_xlat1.y;\n    u_xlat0.x = u_xlat1.x * u_xlat23 + u_xlat0.x;\n    u_xlat0.x = u_xlat1.z * u_xlat16.x + u_xlat0.x;\n    u_xlat3.w = u_xlat5.y;\n    u_xlat6 = u_xlat2.xyxy * _ShadowMapTexture_TexelSize.xyxy + u_xlat3.wywz;\n    u_xlat5.yw = u_xlat3.yz;\n    vec3 txVec3 = vec3(u_xlat6.xy,u_xlat0.z);\n    u_xlat16.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec3, 0.0);\n    vec3 txVec4 = vec3(u_xlat6.zw,u_xlat0.z);\n    u_xlat23 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec4, 0.0);\n    u_xlat0.x = u_xlat1.w * u_xlat16.x + u_xlat0.x;\n    u_xlat1 = u_xlat2.xyxy * _ShadowMapTexture_TexelSize.xyxy + u_xlat5.xyzy;\n    u_xlat3 = u_xlat2.xyxy * _ShadowMapTexture_TexelSize.xyxy + u_xlat5.xwzw;\n    vec3 txVec5 = vec3(u_xlat1.xy,u_xlat0.z);\n    u_xlat2.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec5, 0.0);\n    vec3 txVec6 = vec3(u_xlat1.zw,u_xlat0.z);\n    u_xlat9 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec6, 0.0);\n    u_xlat1 = u_xlat0.yyww * u_xlat4;\n    u_xlat7 = u_xlat0.w * u_xlat4.y;\n    u_xlat0.x = u_xlat1.x * u_xlat2.x + u_xlat0.x;\n    u_xlat0.x = u_xlat1.y * u_xlat9 + u_xlat0.x;\n    u_xlat0.x = u_xlat1.z * u_xlat23 + u_xlat0.x;\n    vec3 txVec7 = vec3(u_xlat3.xy,u_xlat0.z);\n    u_xlat21 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec7, 0.0);\n    vec3 txVec8 = vec3(u_xlat3.zw,u_xlat0.z);\n    u_xlat14 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec8, 0.0);\n    u_xlat0.x = u_xlat1.w * u_xlat21 + u_xlat0.x;\n    u_xlat0.x = u_xlat7 * u_xlat14 + u_xlat0.x;\n    u_xlat7 = (-_LightShadowData.x) + 1.0;\n    u_xlat0 = u_xlat0.xxxx * vec4(u_xlat7) + _LightShadowData.xxxx;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n",1,1],[0,2,["SHADOWS_SPLIT_SPHERES"],"\n#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 unity_ShadowSplitSpheres[4];\nuniform \tvec4 unity_ShadowSplitSqRadii;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform \tmediump vec4 _LightShadowData;\nuniform \tvec4 _ShadowMapTexture_TexelSize;\nuniform highp sampler2D _CameraDepthTexture;\nuniform highp sampler2D _ShadowMapTexture;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nbvec4 u_xlatb1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat4;\nvec3 u_xlat5;\nfloat u_xlat8;\nvec2 u_xlat10;\nfloat u_xlat12;\nbool u_xlatb12;\nvoid main()\n{\n    u_xlat0.x = texture2D(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat4 = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n    u_xlat4 = float(1.0) \/ u_xlat4;\n    u_xlat8 = (-u_xlat4) + u_xlat0.x;\n    u_xlat4 = unity_OrthoParams.w * u_xlat8 + u_xlat4;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n    u_xlat0.xzw = u_xlat0.xxx * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw = (-vs_TEXCOORD1.xyz) * vec3(u_xlat4) + u_xlat0.xzw;\n    u_xlat1.xyz = vec3(u_xlat4) * vs_TEXCOORD1.xyz;\n    u_xlat0.xyz = unity_OrthoParams.www * u_xlat0.xzw + u_xlat1.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat1.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[0].xyz);\n    u_xlat1.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat2.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[1].xyz);\n    u_xlat1.y = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[2].xyz);\n    u_xlat1.z = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[3].xyz);\n    u_xlat1.w = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlatb1 = lessThan(u_xlat1, unity_ShadowSplitSqRadii);\n    u_xlat16_3.x = (u_xlatb1.x) ? float(-1.0) : float(-0.0);\n    u_xlat16_3.y = (u_xlatb1.y) ? float(-1.0) : float(-0.0);\n    u_xlat16_3.z = (u_xlatb1.z) ? float(-1.0) : float(-0.0);\n    u_xlat1.x = u_xlatb1.x ? float(1.0) : 0.0;\n    u_xlat1.y = u_xlatb1.y ? float(1.0) : 0.0;\n    u_xlat1.z = u_xlatb1.z ? float(1.0) : 0.0;\n    u_xlat1.w = u_xlatb1.w ? float(1.0) : 0.0;\n;\n    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat1.yzw;\n    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat5.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[5].xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[4].xyz * u_xlat0.xxx + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[6].xyz * u_xlat0.zzz + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[7].xyz * u_xlat0.www + u_xlat5.xyz;\n    u_xlat5.xyz = u_xlat16_3.xxx * u_xlat5.xyz;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz * u_xlat0.www + u_xlat2.xyz;\n    u_xlat1.xyz = u_xlat2.xyz * u_xlat1.xxx + u_xlat5.xyz;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[9].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[8].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[10].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[11].xyz * u_xlat0.www + u_xlat2.xyz;\n    u_xlat1.xyz = u_xlat2.xyz * u_xlat16_3.yyy + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[13].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[12].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[14].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[15].xyz * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.zzz + u_xlat1.xyz;\n    u_xlat1.z = 0.0;\n    u_xlat1.xyw = (-_ShadowMapTexture_TexelSize.xyy);\n    u_xlat1 = u_xlat0.xyxy + u_xlat1;\n    u_xlat12 = texture2D(_ShadowMapTexture, u_xlat1.xy).x;\n    u_xlatb12 = u_xlat12<u_xlat0.z;\n    u_xlat12 = (u_xlatb12) ? 0.0 : 1.0;\n    u_xlat1.x = texture2D(_ShadowMapTexture, u_xlat1.zw).x;\n    u_xlatb1.x = u_xlat1.x<u_xlat0.z;\n    u_xlat1.x = (u_xlatb1.x) ? 0.0 : 1.0;\n    u_xlat16_3.x = u_xlat12 + u_xlat1.x;\n    u_xlat1 = _ShadowMapTexture_TexelSize.xyxy * vec4(1.0, -1.0, -1.0, 1.0) + u_xlat0.xyxy;\n    u_xlat12 = texture2D(_ShadowMapTexture, u_xlat1.xy).x;\n    u_xlat1.x = texture2D(_ShadowMapTexture, u_xlat1.zw).x;\n    u_xlatb1.x = u_xlat1.x<u_xlat0.z;\n    u_xlat1.x = (u_xlatb1.x) ? 0.0 : 1.0;\n    u_xlatb12 = u_xlat12<u_xlat0.z;\n    u_xlat12 = (u_xlatb12) ? 0.0 : 1.0;\n    u_xlat16_3.x = u_xlat12 + u_xlat16_3.x;\n    u_xlat2.x = (-_ShadowMapTexture_TexelSize.x);\n    u_xlat2.y = float(0.0);\n    u_xlat10.y = float(0.0);\n    u_xlat5.xy = u_xlat0.xy + u_xlat2.xy;\n    u_xlat12 = texture2D(_ShadowMapTexture, u_xlat5.xy).x;\n    u_xlatb12 = u_xlat12<u_xlat0.z;\n    u_xlat12 = (u_xlatb12) ? 0.0 : 1.0;\n    u_xlat16_3.x = u_xlat12 + u_xlat16_3.x;\n    u_xlat12 = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n    u_xlatb12 = u_xlat12<u_xlat0.z;\n    u_xlat12 = (u_xlatb12) ? 0.0 : 1.0;\n    u_xlat16_3.x = u_xlat12 + u_xlat16_3.x;\n    u_xlat10.x = _ShadowMapTexture_TexelSize.x;\n    u_xlat5.xy = u_xlat0.xy + u_xlat10.xy;\n    u_xlat12 = texture2D(_ShadowMapTexture, u_xlat5.xy).x;\n    u_xlatb12 = u_xlat12<u_xlat0.z;\n    u_xlat12 = (u_xlatb12) ? 0.0 : 1.0;\n    u_xlat16_3.x = u_xlat12 + u_xlat16_3.x;\n    u_xlat16_3.x = u_xlat1.x + u_xlat16_3.x;\n    u_xlat1.x = 0.0;\n    u_xlat1.y = _ShadowMapTexture_TexelSize.y;\n    u_xlat1.xy = u_xlat0.xy + u_xlat1.xy;\n    u_xlat12 = texture2D(_ShadowMapTexture, u_xlat1.xy).x;\n    u_xlatb12 = u_xlat12<u_xlat0.z;\n    u_xlat12 = (u_xlatb12) ? 0.0 : 1.0;\n    u_xlat16_3.x = u_xlat12 + u_xlat16_3.x;\n    u_xlat0.xy = u_xlat0.xy + _ShadowMapTexture_TexelSize.xy;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n    u_xlatb0 = u_xlat0.x<u_xlat0.z;\n    u_xlat0.x = (u_xlatb0) ? 0.0 : 1.0;\n    u_xlat16_3.x = u_xlat0.x + u_xlat16_3.x;\n    u_xlat16_3.x = u_xlat16_3.x * 0.111111112;\n    u_xlat0.x = (-_LightShadowData.x) + 1.0;\n    u_xlat0 = u_xlat16_3.xxxx * u_xlat0.xxxx + _LightShadowData.xxxx;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n",0,1],[0,2,["SHADOWS_SPLIT_SPHERES"],"\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin highp vec4 in_POSITION0;\nin highp vec2 in_TEXCOORD0;\nin highp vec3 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n","\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 unity_ShadowSplitSpheres[4];\nuniform \tvec4 unity_ShadowSplitSqRadii;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform \tmediump vec4 _LightShadowData;\nuniform \tvec4 _ShadowMapTexture_TexelSize;\nUNITY_LOCATION(0) uniform highp sampler2D _CameraDepthTexture;\nUNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;\nUNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;\nin highp vec4 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD1;\nin highp vec3 vs_TEXCOORD2;\nin highp vec3 vs_TEXCOORD3;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbvec4 u_xlatb1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec3 u_xlat16_3;\nvec4 u_xlat4;\nvec4 u_xlat5;\nvec4 u_xlat6;\nfloat u_xlat7;\nvec3 u_xlat8;\nfloat u_xlat14;\nvec2 u_xlat15;\nfloat u_xlat21;\nfloat u_xlat22;\nvoid main()\n{\n    u_xlat0.x = texture(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat7 = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n    u_xlat7 = float(1.0) \/ u_xlat7;\n    u_xlat14 = (-u_xlat7) + u_xlat0.x;\n    u_xlat7 = unity_OrthoParams.w * u_xlat14 + u_xlat7;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n    u_xlat0.xzw = u_xlat0.xxx * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw = (-vs_TEXCOORD1.xyz) * vec3(u_xlat7) + u_xlat0.xzw;\n    u_xlat1.xyz = vec3(u_xlat7) * vs_TEXCOORD1.xyz;\n    u_xlat0.xyz = unity_OrthoParams.www * u_xlat0.xzw + u_xlat1.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat1.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[0].xyz);\n    u_xlat1.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat2.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[1].xyz);\n    u_xlat1.y = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[2].xyz);\n    u_xlat1.z = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[3].xyz);\n    u_xlat1.w = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlatb1 = lessThan(u_xlat1, unity_ShadowSplitSqRadii);\n    u_xlat16_3.x = (u_xlatb1.x) ? float(-1.0) : float(-0.0);\n    u_xlat16_3.y = (u_xlatb1.y) ? float(-1.0) : float(-0.0);\n    u_xlat16_3.z = (u_xlatb1.z) ? float(-1.0) : float(-0.0);\n    u_xlat1.x = u_xlatb1.x ? float(1.0) : 0.0;\n    u_xlat1.y = u_xlatb1.y ? float(1.0) : 0.0;\n    u_xlat1.z = u_xlatb1.z ? float(1.0) : 0.0;\n    u_xlat1.w = u_xlatb1.w ? float(1.0) : 0.0;\n;\n    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat1.yzw;\n    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat8.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[5].xyz;\n    u_xlat8.xyz = hlslcc_mtx4x4unity_WorldToShadow[4].xyz * u_xlat0.xxx + u_xlat8.xyz;\n    u_xlat8.xyz = hlslcc_mtx4x4unity_WorldToShadow[6].xyz * u_xlat0.zzz + u_xlat8.xyz;\n    u_xlat8.xyz = hlslcc_mtx4x4unity_WorldToShadow[7].xyz * u_xlat0.www + u_xlat8.xyz;\n    u_xlat8.xyz = u_xlat16_3.xxx * u_xlat8.xyz;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz * u_xlat0.www + u_xlat2.xyz;\n    u_xlat1.xyz = u_xlat2.xyz * u_xlat1.xxx + u_xlat8.xyz;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[9].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[8].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[10].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[11].xyz * u_xlat0.www + u_xlat2.xyz;\n    u_xlat1.xyz = u_xlat2.xyz * u_xlat16_3.yyy + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[13].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[12].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[14].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[15].xyz * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.zzz + u_xlat1.xyz;\n    u_xlat1.xy = u_xlat0.xy * _ShadowMapTexture_TexelSize.zw + vec2(0.5, 0.5);\n    u_xlat1.xy = floor(u_xlat1.xy);\n    u_xlat0.xy = u_xlat0.xy * _ShadowMapTexture_TexelSize.zw + (-u_xlat1.xy);\n    u_xlat15.xy = max(u_xlat0.xy, vec2(0.0, 0.0));\n    u_xlat2 = u_xlat0.xxyy + vec4(0.5, 1.0, 0.5, 1.0);\n    u_xlat15.xy = (-u_xlat15.xy) * u_xlat15.xy + u_xlat2.yw;\n    u_xlat15.xy = u_xlat15.xy + vec2(1.0, 1.0);\n    u_xlat3.xy = u_xlat15.xy * vec2(0.159999996, 0.159999996);\n    u_xlat15.xy = min(u_xlat0.xy, vec2(0.0, 0.0));\n    u_xlat4.xy = (-u_xlat0.xy) + vec2(1.0, 1.0);\n    u_xlat15.xy = (-u_xlat15.xy) * u_xlat15.xy + u_xlat4.xy;\n    u_xlat4.xy = u_xlat4.xy * vec2(0.159999996, 0.159999996);\n    u_xlat15.xy = u_xlat15.xy + vec2(1.0, 1.0);\n    u_xlat5.xy = u_xlat15.xy * vec2(0.159999996, 0.159999996);\n    u_xlat6 = u_xlat2.xxzz * u_xlat2.xxzz;\n    u_xlat15.xy = u_xlat2.yw * vec2(0.159999996, 0.159999996);\n    u_xlat0.xy = u_xlat6.xz * vec2(0.5, 0.5) + (-u_xlat0.xy);\n    u_xlat4.zw = u_xlat6.wy * vec2(0.0799999982, 0.0799999982);\n    u_xlat2.xy = u_xlat0.xy * vec2(0.159999996, 0.159999996);\n    u_xlat5.z = u_xlat2.y;\n    u_xlat5.w = u_xlat15.y;\n    u_xlat2.w = u_xlat15.x;\n    u_xlat3.zw = u_xlat4.yz;\n    u_xlat0.xyw = u_xlat3.zyw + u_xlat5.zyw;\n    u_xlat2.z = u_xlat5.x;\n    u_xlat5.xyz = u_xlat3.zyw \/ u_xlat0.xyw;\n    u_xlat4.z = u_xlat3.x;\n    u_xlat5.xyz = u_xlat5.xyz + vec3(-2.5, -0.5, 1.5);\n    u_xlat3.xyz = u_xlat5.xyz * _ShadowMapTexture_TexelSize.yyy;\n    u_xlat5.w = u_xlat3.x;\n    u_xlat2 = u_xlat2.zwxz + u_xlat4.zwxz;\n    u_xlat4.xyz = u_xlat4.xzw \/ u_xlat2.zwy;\n    u_xlat4.xyz = u_xlat4.xyz + vec3(-2.5, -0.5, 1.5);\n    u_xlat5.xyz = u_xlat4.yxz * _ShadowMapTexture_TexelSize.xxx;\n    u_xlat4 = u_xlat1.xyxy * _ShadowMapTexture_TexelSize.xyxy + u_xlat5.ywxw;\n    u_xlat15.xy = u_xlat1.xy * _ShadowMapTexture_TexelSize.xy + u_xlat5.zw;\n    vec3 txVec0 = vec3(u_xlat15.xy,u_xlat0.z);\n    u_xlat15.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);\n    vec3 txVec1 = vec3(u_xlat4.xy,u_xlat0.z);\n    u_xlat22 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec1, 0.0);\n    vec3 txVec2 = vec3(u_xlat4.zw,u_xlat0.z);\n    u_xlat4.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec2, 0.0);\n    u_xlat6 = u_xlat0.xxxy * u_xlat2.zwyz;\n    u_xlat0.x = u_xlat4.x * u_xlat6.y;\n    u_xlat0.x = u_xlat6.x * u_xlat22 + u_xlat0.x;\n    u_xlat0.x = u_xlat6.z * u_xlat15.x + u_xlat0.x;\n    u_xlat3.w = u_xlat5.y;\n    u_xlat4 = u_xlat1.xyxy * _ShadowMapTexture_TexelSize.xyxy + u_xlat3.wywz;\n    u_xlat5.yw = u_xlat3.yz;\n    vec3 txVec3 = vec3(u_xlat4.xy,u_xlat0.z);\n    u_xlat15.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec3, 0.0);\n    vec3 txVec4 = vec3(u_xlat4.zw,u_xlat0.z);\n    u_xlat22 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec4, 0.0);\n    u_xlat0.x = u_xlat6.w * u_xlat15.x + u_xlat0.x;\n    u_xlat3 = u_xlat1.xyxy * _ShadowMapTexture_TexelSize.xyxy + u_xlat5.xyzy;\n    u_xlat4 = u_xlat1.xyxy * _ShadowMapTexture_TexelSize.xyxy + u_xlat5.xwzw;\n    vec3 txVec5 = vec3(u_xlat3.xy,u_xlat0.z);\n    u_xlat1.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec5, 0.0);\n    vec3 txVec6 = vec3(u_xlat3.zw,u_xlat0.z);\n    u_xlat8.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec6, 0.0);\n    u_xlat3 = u_xlat0.yyww * u_xlat2;\n    u_xlat7 = u_xlat0.w * u_xlat2.y;\n    u_xlat0.x = u_xlat3.x * u_xlat1.x + u_xlat0.x;\n    u_xlat0.x = u_xlat3.y * u_xlat8.x + u_xlat0.x;\n    u_xlat0.x = u_xlat3.z * u_xlat22 + u_xlat0.x;\n    vec3 txVec7 = vec3(u_xlat4.xy,u_xlat0.z);\n    u_xlat21 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec7, 0.0);\n    vec3 txVec8 = vec3(u_xlat4.zw,u_xlat0.z);\n    u_xlat14 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec8, 0.0);\n    u_xlat0.x = u_xlat3.w * u_xlat21 + u_xlat0.x;\n    u_xlat0.x = u_xlat7 * u_xlat14 + u_xlat0.x;\n    u_xlat7 = (-_LightShadowData.x) + 1.0;\n    u_xlat0 = u_xlat0.xxxx * vec4(u_xlat7) + _LightShadowData.xxxx;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n",1,1],[0,2,["SHADOWS_SINGLE_CASCADE"],"\n#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform \tmediump vec4 _LightShadowData;\nuniform \tvec4 _ShadowMapTexture_TexelSize;\nuniform highp sampler2D _CameraDepthTexture;\nuniform highp sampler2D _ShadowMapTexture;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbvec2 u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump float u_xlat16_3;\nfloat u_xlat4;\nbool u_xlatb4;\nfloat u_xlat5;\nfloat u_xlat9;\nvec2 u_xlat10;\nvoid main()\n{\n    u_xlat0.z = 0.0;\n    u_xlat1.x = texture2D(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat5 = _ZBufferParams.x * u_xlat1.x + _ZBufferParams.y;\n    u_xlat5 = float(1.0) \/ u_xlat5;\n    u_xlat9 = (-u_xlat5) + u_xlat1.x;\n    u_xlat5 = unity_OrthoParams.w * u_xlat9 + u_xlat5;\n    u_xlat2.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n    u_xlat1.xzw = u_xlat1.xxx * u_xlat2.xyz + vs_TEXCOORD2.xyz;\n    u_xlat1.xzw = (-vs_TEXCOORD1.xyz) * vec3(u_xlat5) + u_xlat1.xzw;\n    u_xlat2.xyz = vec3(u_xlat5) * vs_TEXCOORD1.xyz;\n    u_xlat1.xyz = unity_OrthoParams.www * u_xlat1.xzw + u_xlat2.xyz;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat2 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat1.zzzz + u_xlat2;\n    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat2.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat1.xxx + u_xlat2.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat1.zzz + u_xlat2.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz * u_xlat1.www + u_xlat1.xyz;\n    u_xlat0.xyw = (-_ShadowMapTexture_TexelSize.xyy);\n    u_xlat0 = u_xlat0 + u_xlat1.xyxy;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat4 = texture2D(_ShadowMapTexture, u_xlat0.zw).x;\n    u_xlatb4 = u_xlat4<u_xlat1.z;\n    u_xlat4 = (u_xlatb4) ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat4 + u_xlat0.x;\n    u_xlat0 = _ShadowMapTexture_TexelSize.xyxy * vec4(1.0, -1.0, -1.0, 1.0) + u_xlat1.xyxy;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n    u_xlat0.y = texture2D(_ShadowMapTexture, u_xlat0.zw).x;\n    u_xlatb0.xy = lessThan(u_xlat0.xyxx, u_xlat1.zzzz).xy;\n    u_xlat0.x = (u_xlatb0.x) ? float(0.0) : float(1.0);\n    u_xlat0.y = (u_xlatb0.y) ? float(0.0) : float(1.0);\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n    u_xlat2.x = (-_ShadowMapTexture_TexelSize.x);\n    u_xlat2.y = float(0.0);\n    u_xlat10.y = float(0.0);\n    u_xlat0.xz = u_xlat1.xy + u_xlat2.xy;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat1.xy).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n    u_xlat10.x = _ShadowMapTexture_TexelSize.x;\n    u_xlat0.xz = u_xlat1.xy + u_xlat10.xy;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n    u_xlat16_3 = u_xlat0.y + u_xlat16_3;\n    u_xlat0.x = 0.0;\n    u_xlat0.y = _ShadowMapTexture_TexelSize.y;\n    u_xlat0.xy = u_xlat0.xy + u_xlat1.xy;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n    u_xlat0.xy = u_xlat1.xy + _ShadowMapTexture_TexelSize.xy;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n    u_xlat16_3 = u_xlat16_3 * 0.111111112;\n    u_xlat0.x = (-_LightShadowData.x) + 1.0;\n    u_xlat0 = vec4(u_xlat16_3) * u_xlat0.xxxx + _LightShadowData.xxxx;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n",0,1],[0,2,["SHADOWS_SINGLE_CASCADE"],"\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin highp vec4 in_POSITION0;\nin highp vec2 in_TEXCOORD0;\nin highp vec3 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n","\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform \tmediump vec4 _LightShadowData;\nuniform \tvec4 _ShadowMapTexture_TexelSize;\nUNITY_LOCATION(0) uniform highp sampler2D _CameraDepthTexture;\nUNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;\nUNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;\nin highp vec4 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD1;\nin highp vec3 vs_TEXCOORD2;\nin highp vec3 vs_TEXCOORD3;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nvec4 u_xlat5;\nvec4 u_xlat6;\nfloat u_xlat7;\nfloat u_xlat8;\nfloat u_xlat14;\nvec2 u_xlat15;\nfloat u_xlat21;\nfloat u_xlat22;\nvoid main()\n{\n    u_xlat0.x = texture(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat7 = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n    u_xlat7 = float(1.0) \/ u_xlat7;\n    u_xlat14 = (-u_xlat7) + u_xlat0.x;\n    u_xlat7 = unity_OrthoParams.w * u_xlat14 + u_xlat7;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n    u_xlat0.xzw = u_xlat0.xxx * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw = (-vs_TEXCOORD1.xyz) * vec3(u_xlat7) + u_xlat0.xzw;\n    u_xlat1.xyz = vec3(u_xlat7) * vs_TEXCOORD1.xyz;\n    u_xlat0.xyz = unity_OrthoParams.www * u_xlat0.xzw + u_xlat1.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz * u_xlat0.www + u_xlat0.xyz;\n    u_xlat1.xy = u_xlat0.xy * _ShadowMapTexture_TexelSize.zw + vec2(0.5, 0.5);\n    u_xlat1.xy = floor(u_xlat1.xy);\n    u_xlat0.xy = u_xlat0.xy * _ShadowMapTexture_TexelSize.zw + (-u_xlat1.xy);\n    u_xlat15.xy = min(u_xlat0.xy, vec2(0.0, 0.0));\n    u_xlat2.xy = (-u_xlat0.xy) + vec2(1.0, 1.0);\n    u_xlat15.xy = (-u_xlat15.xy) * u_xlat15.xy + u_xlat2.xy;\n    u_xlat2.xy = u_xlat2.xy * vec2(0.159999996, 0.159999996);\n    u_xlat15.xy = u_xlat15.xy + vec2(1.0, 1.0);\n    u_xlat3.xy = u_xlat15.xy * vec2(0.159999996, 0.159999996);\n    u_xlat15.xy = max(u_xlat0.xy, vec2(0.0, 0.0));\n    u_xlat4 = u_xlat0.xxyy + vec4(0.5, 1.0, 0.5, 1.0);\n    u_xlat15.xy = (-u_xlat15.xy) * u_xlat15.xy + u_xlat4.yw;\n    u_xlat15.xy = u_xlat15.xy + vec2(1.0, 1.0);\n    u_xlat5.xy = u_xlat15.xy * vec2(0.159999996, 0.159999996);\n    u_xlat6 = u_xlat4.xxzz * u_xlat4.xxzz;\n    u_xlat15.xy = u_xlat4.yw * vec2(0.159999996, 0.159999996);\n    u_xlat0.xy = u_xlat6.xz * vec2(0.5, 0.5) + (-u_xlat0.xy);\n    u_xlat2.zw = u_xlat6.wy * vec2(0.0799999982, 0.0799999982);\n    u_xlat4.xy = u_xlat0.xy * vec2(0.159999996, 0.159999996);\n    u_xlat3.z = u_xlat4.y;\n    u_xlat3.w = u_xlat15.y;\n    u_xlat4.w = u_xlat15.x;\n    u_xlat5.zw = u_xlat2.yz;\n    u_xlat0.xyw = u_xlat3.zyw + u_xlat5.zyw;\n    u_xlat4.z = u_xlat3.x;\n    u_xlat3.xyz = u_xlat5.zyw \/ u_xlat0.xyw;\n    u_xlat2.z = u_xlat5.x;\n    u_xlat3.xyz = u_xlat3.xyz + vec3(-2.5, -0.5, 1.5);\n    u_xlat3.xyz = u_xlat3.xyz * _ShadowMapTexture_TexelSize.yyy;\n    u_xlat5.w = u_xlat3.x;\n    u_xlat4 = u_xlat2.zwxz + u_xlat4.zwxz;\n    u_xlat2.xyz = u_xlat2.xzw \/ u_xlat4.zwy;\n    u_xlat2.xyz = u_xlat2.xyz + vec3(-2.5, -0.5, 1.5);\n    u_xlat5.xyz = u_xlat2.yxz * _ShadowMapTexture_TexelSize.xxx;\n    u_xlat2 = u_xlat1.xyxy * _ShadowMapTexture_TexelSize.xyxy + u_xlat5.ywxw;\n    u_xlat15.xy = u_xlat1.xy * _ShadowMapTexture_TexelSize.xy + u_xlat5.zw;\n    vec3 txVec0 = vec3(u_xlat15.xy,u_xlat0.z);\n    u_xlat15.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);\n    vec3 txVec1 = vec3(u_xlat2.xy,u_xlat0.z);\n    u_xlat22 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec1, 0.0);\n    vec3 txVec2 = vec3(u_xlat2.zw,u_xlat0.z);\n    u_xlat2.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec2, 0.0);\n    u_xlat6 = u_xlat0.xxxy * u_xlat4.zwyz;\n    u_xlat0.x = u_xlat2.x * u_xlat6.y;\n    u_xlat0.x = u_xlat6.x * u_xlat22 + u_xlat0.x;\n    u_xlat0.x = u_xlat6.z * u_xlat15.x + u_xlat0.x;\n    u_xlat3.w = u_xlat5.y;\n    u_xlat2 = u_xlat1.xyxy * _ShadowMapTexture_TexelSize.xyxy + u_xlat3.wywz;\n    u_xlat5.yw = u_xlat3.yz;\n    vec3 txVec3 = vec3(u_xlat2.xy,u_xlat0.z);\n    u_xlat15.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec3, 0.0);\n    vec3 txVec4 = vec3(u_xlat2.zw,u_xlat0.z);\n    u_xlat22 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec4, 0.0);\n    u_xlat0.x = u_xlat6.w * u_xlat15.x + u_xlat0.x;\n    u_xlat2 = u_xlat1.xyxy * _ShadowMapTexture_TexelSize.xyxy + u_xlat5.xyzy;\n    u_xlat3 = u_xlat1.xyxy * _ShadowMapTexture_TexelSize.xyxy + u_xlat5.xwzw;\n    vec3 txVec5 = vec3(u_xlat2.xy,u_xlat0.z);\n    u_xlat1.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec5, 0.0);\n    vec3 txVec6 = vec3(u_xlat2.zw,u_xlat0.z);\n    u_xlat8 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec6, 0.0);\n    u_xlat2 = u_xlat0.yyww * u_xlat4;\n    u_xlat7 = u_xlat0.w * u_xlat4.y;\n    u_xlat0.x = u_xlat2.x * u_xlat1.x + u_xlat0.x;\n    u_xlat0.x = u_xlat2.y * u_xlat8 + u_xlat0.x;\n    u_xlat0.x = u_xlat2.z * u_xlat22 + u_xlat0.x;\n    vec3 txVec7 = vec3(u_xlat3.xy,u_xlat0.z);\n    u_xlat21 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec7, 0.0);\n    vec3 txVec8 = vec3(u_xlat3.zw,u_xlat0.z);\n    u_xlat14 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec8, 0.0);\n    u_xlat0.x = u_xlat2.w * u_xlat21 + u_xlat0.x;\n    u_xlat0.x = u_xlat7 * u_xlat14 + u_xlat0.x;\n    u_xlat7 = (-_LightShadowData.x) + 1.0;\n    u_xlat0 = u_xlat0.xxxx * vec4(u_xlat7) + _LightShadowData.xxxx;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n",1,1],[0,2,["SHADOWS_SINGLE_CASCADE","SHADOWS_SPLIT_SPHERES"],"\n#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform \tmediump vec4 _LightShadowData;\nuniform \tvec4 _ShadowMapTexture_TexelSize;\nuniform highp sampler2D _CameraDepthTexture;\nuniform highp sampler2D _ShadowMapTexture;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbvec2 u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump float u_xlat16_3;\nfloat u_xlat4;\nbool u_xlatb4;\nfloat u_xlat5;\nfloat u_xlat9;\nvec2 u_xlat10;\nvoid main()\n{\n    u_xlat0.z = 0.0;\n    u_xlat1.x = texture2D(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat5 = _ZBufferParams.x * u_xlat1.x + _ZBufferParams.y;\n    u_xlat5 = float(1.0) \/ u_xlat5;\n    u_xlat9 = (-u_xlat5) + u_xlat1.x;\n    u_xlat5 = unity_OrthoParams.w * u_xlat9 + u_xlat5;\n    u_xlat2.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n    u_xlat1.xzw = u_xlat1.xxx * u_xlat2.xyz + vs_TEXCOORD2.xyz;\n    u_xlat1.xzw = (-vs_TEXCOORD1.xyz) * vec3(u_xlat5) + u_xlat1.xzw;\n    u_xlat2.xyz = vec3(u_xlat5) * vs_TEXCOORD1.xyz;\n    u_xlat1.xyz = unity_OrthoParams.www * u_xlat1.xzw + u_xlat2.xyz;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat2 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat1.zzzz + u_xlat2;\n    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat2.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat1.xxx + u_xlat2.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat1.zzz + u_xlat2.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz * u_xlat1.www + u_xlat1.xyz;\n    u_xlat0.xyw = (-_ShadowMapTexture_TexelSize.xyy);\n    u_xlat0 = u_xlat0 + u_xlat1.xyxy;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat4 = texture2D(_ShadowMapTexture, u_xlat0.zw).x;\n    u_xlatb4 = u_xlat4<u_xlat1.z;\n    u_xlat4 = (u_xlatb4) ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat4 + u_xlat0.x;\n    u_xlat0 = _ShadowMapTexture_TexelSize.xyxy * vec4(1.0, -1.0, -1.0, 1.0) + u_xlat1.xyxy;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n    u_xlat0.y = texture2D(_ShadowMapTexture, u_xlat0.zw).x;\n    u_xlatb0.xy = lessThan(u_xlat0.xyxx, u_xlat1.zzzz).xy;\n    u_xlat0.x = (u_xlatb0.x) ? float(0.0) : float(1.0);\n    u_xlat0.y = (u_xlatb0.y) ? float(0.0) : float(1.0);\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n    u_xlat2.x = (-_ShadowMapTexture_TexelSize.x);\n    u_xlat2.y = float(0.0);\n    u_xlat10.y = float(0.0);\n    u_xlat0.xz = u_xlat1.xy + u_xlat2.xy;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat1.xy).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n    u_xlat10.x = _ShadowMapTexture_TexelSize.x;\n    u_xlat0.xz = u_xlat1.xy + u_xlat10.xy;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n    u_xlat16_3 = u_xlat0.y + u_xlat16_3;\n    u_xlat0.x = 0.0;\n    u_xlat0.y = _ShadowMapTexture_TexelSize.y;\n    u_xlat0.xy = u_xlat0.xy + u_xlat1.xy;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n    u_xlat0.xy = u_xlat1.xy + _ShadowMapTexture_TexelSize.xy;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n    u_xlat16_3 = u_xlat16_3 * 0.111111112;\n    u_xlat0.x = (-_LightShadowData.x) + 1.0;\n    u_xlat0 = vec4(u_xlat16_3) * u_xlat0.xxxx + _LightShadowData.xxxx;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n",0,1],[0,2,["SHADOWS_SINGLE_CASCADE","SHADOWS_SPLIT_SPHERES"],"\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin highp vec4 in_POSITION0;\nin highp vec2 in_TEXCOORD0;\nin highp vec3 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n","\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform \tmediump vec4 _LightShadowData;\nuniform \tvec4 _ShadowMapTexture_TexelSize;\nUNITY_LOCATION(0) uniform highp sampler2D _CameraDepthTexture;\nUNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;\nUNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;\nin highp vec4 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD1;\nin highp vec3 vs_TEXCOORD2;\nin highp vec3 vs_TEXCOORD3;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nvec4 u_xlat5;\nvec4 u_xlat6;\nfloat u_xlat7;\nfloat u_xlat8;\nfloat u_xlat14;\nvec2 u_xlat15;\nfloat u_xlat21;\nfloat u_xlat22;\nvoid main()\n{\n    u_xlat0.x = texture(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat7 = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n    u_xlat7 = float(1.0) \/ u_xlat7;\n    u_xlat14 = (-u_xlat7) + u_xlat0.x;\n    u_xlat7 = unity_OrthoParams.w * u_xlat14 + u_xlat7;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n    u_xlat0.xzw = u_xlat0.xxx * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw = (-vs_TEXCOORD1.xyz) * vec3(u_xlat7) + u_xlat0.xzw;\n    u_xlat1.xyz = vec3(u_xlat7) * vs_TEXCOORD1.xyz;\n    u_xlat0.xyz = unity_OrthoParams.www * u_xlat0.xzw + u_xlat1.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz * u_xlat0.www + u_xlat0.xyz;\n    u_xlat1.xy = u_xlat0.xy * _ShadowMapTexture_TexelSize.zw + vec2(0.5, 0.5);\n    u_xlat1.xy = floor(u_xlat1.xy);\n    u_xlat0.xy = u_xlat0.xy * _ShadowMapTexture_TexelSize.zw + (-u_xlat1.xy);\n    u_xlat15.xy = min(u_xlat0.xy, vec2(0.0, 0.0));\n    u_xlat2.xy = (-u_xlat0.xy) + vec2(1.0, 1.0);\n    u_xlat15.xy = (-u_xlat15.xy) * u_xlat15.xy + u_xlat2.xy;\n    u_xlat2.xy = u_xlat2.xy * vec2(0.159999996, 0.159999996);\n    u_xlat15.xy = u_xlat15.xy + vec2(1.0, 1.0);\n    u_xlat3.xy = u_xlat15.xy * vec2(0.159999996, 0.159999996);\n    u_xlat15.xy = max(u_xlat0.xy, vec2(0.0, 0.0));\n    u_xlat4 = u_xlat0.xxyy + vec4(0.5, 1.0, 0.5, 1.0);\n    u_xlat15.xy = (-u_xlat15.xy) * u_xlat15.xy + u_xlat4.yw;\n    u_xlat15.xy = u_xlat15.xy + vec2(1.0, 1.0);\n    u_xlat5.xy = u_xlat15.xy * vec2(0.159999996, 0.159999996);\n    u_xlat6 = u_xlat4.xxzz * u_xlat4.xxzz;\n    u_xlat15.xy = u_xlat4.yw * vec2(0.159999996, 0.159999996);\n    u_xlat0.xy = u_xlat6.xz * vec2(0.5, 0.5) + (-u_xlat0.xy);\n    u_xlat2.zw = u_xlat6.wy * vec2(0.0799999982, 0.0799999982);\n    u_xlat4.xy = u_xlat0.xy * vec2(0.159999996, 0.159999996);\n    u_xlat3.z = u_xlat4.y;\n    u_xlat3.w = u_xlat15.y;\n    u_xlat4.w = u_xlat15.x;\n    u_xlat5.zw = u_xlat2.yz;\n    u_xlat0.xyw = u_xlat3.zyw + u_xlat5.zyw;\n    u_xlat4.z = u_xlat3.x;\n    u_xlat3.xyz = u_xlat5.zyw \/ u_xlat0.xyw;\n    u_xlat2.z = u_xlat5.x;\n    u_xlat3.xyz = u_xlat3.xyz + vec3(-2.5, -0.5, 1.5);\n    u_xlat3.xyz = u_xlat3.xyz * _ShadowMapTexture_TexelSize.yyy;\n    u_xlat5.w = u_xlat3.x;\n    u_xlat4 = u_xlat2.zwxz + u_xlat4.zwxz;\n    u_xlat2.xyz = u_xlat2.xzw \/ u_xlat4.zwy;\n    u_xlat2.xyz = u_xlat2.xyz + vec3(-2.5, -0.5, 1.5);\n    u_xlat5.xyz = u_xlat2.yxz * _ShadowMapTexture_TexelSize.xxx;\n    u_xlat2 = u_xlat1.xyxy * _ShadowMapTexture_TexelSize.xyxy + u_xlat5.ywxw;\n    u_xlat15.xy = u_xlat1.xy * _ShadowMapTexture_TexelSize.xy + u_xlat5.zw;\n    vec3 txVec0 = vec3(u_xlat15.xy,u_xlat0.z);\n    u_xlat15.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);\n    vec3 txVec1 = vec3(u_xlat2.xy,u_xlat0.z);\n    u_xlat22 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec1, 0.0);\n    vec3 txVec2 = vec3(u_xlat2.zw,u_xlat0.z);\n    u_xlat2.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec2, 0.0);\n    u_xlat6 = u_xlat0.xxxy * u_xlat4.zwyz;\n    u_xlat0.x = u_xlat2.x * u_xlat6.y;\n    u_xlat0.x = u_xlat6.x * u_xlat22 + u_xlat0.x;\n    u_xlat0.x = u_xlat6.z * u_xlat15.x + u_xlat0.x;\n    u_xlat3.w = u_xlat5.y;\n    u_xlat2 = u_xlat1.xyxy * _ShadowMapTexture_TexelSize.xyxy + u_xlat3.wywz;\n    u_xlat5.yw = u_xlat3.yz;\n    vec3 txVec3 = vec3(u_xlat2.xy,u_xlat0.z);\n    u_xlat15.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec3, 0.0);\n    vec3 txVec4 = vec3(u_xlat2.zw,u_xlat0.z);\n    u_xlat22 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec4, 0.0);\n    u_xlat0.x = u_xlat6.w * u_xlat15.x + u_xlat0.x;\n    u_xlat2 = u_xlat1.xyxy * _ShadowMapTexture_TexelSize.xyxy + u_xlat5.xyzy;\n    u_xlat3 = u_xlat1.xyxy * _ShadowMapTexture_TexelSize.xyxy + u_xlat5.xwzw;\n    vec3 txVec5 = vec3(u_xlat2.xy,u_xlat0.z);\n    u_xlat1.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec5, 0.0);\n    vec3 txVec6 = vec3(u_xlat2.zw,u_xlat0.z);\n    u_xlat8 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec6, 0.0);\n    u_xlat2 = u_xlat0.yyww * u_xlat4;\n    u_xlat7 = u_xlat0.w * u_xlat4.y;\n    u_xlat0.x = u_xlat2.x * u_xlat1.x + u_xlat0.x;\n    u_xlat0.x = u_xlat2.y * u_xlat8 + u_xlat0.x;\n    u_xlat0.x = u_xlat2.z * u_xlat22 + u_xlat0.x;\n    vec3 txVec7 = vec3(u_xlat3.xy,u_xlat0.z);\n    u_xlat21 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec7, 0.0);\n    vec3 txVec8 = vec3(u_xlat3.zw,u_xlat0.z);\n    u_xlat14 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec8, 0.0);\n    u_xlat0.x = u_xlat2.w * u_xlat21 + u_xlat0.x;\n    u_xlat0.x = u_xlat7 * u_xlat14 + u_xlat0.x;\n    u_xlat7 = (-_LightShadowData.x) + 1.0;\n    u_xlat0 = u_xlat0.xxxx * vec4(u_xlat7) + _LightShadowData.xxxx;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n",1,1]],[],1]],[],[["_ShadowMapTexture",4,0,0,0,0,"",0],["_ODSWorldTexture",4,0,0,0,0,"",0]],null,null,1,0,0]}