{"id":64,"assetBundleId":-2,"data":[[],"Standard",null,["DIRECTIONAL","DIRLIGHTMAP_COMBINED","FOG_EXP","FOG_EXP2","FOG_LINEAR","LIGHTMAP_ON","LIGHTPROBE_SH","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","VERTEXLIGHT_ON","_ALPHABLEND_ON","_ALPHAPREMULTIPLY_ON","_ALPHATEST_ON","_EMISSION","_GLOSSYREFLECTIONS_OFF","_METALLICGLOSSMAP","_NORMALMAP","_PARALLAXMAP","_SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A","_SPECULARHIGHLIGHTS_OFF","DIRECTIONAL_COOKIE","POINT","POINT_COOKIE","SHADOWS_DEPTH","SPOT","DYNAMICLIGHTMAP_ON","INSTANCING_ON","LIGHTMAP_SHADOW_MIXING","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_DETAIL_MULX2","__","_","SHADOWS_CUBE","SHADOWS_SOFT"],[[0,0,"FORWARD",4,"",0,[4,null],[0,"_ZWrite"],[2,null],[[0,"_SrcBlend"],[0,"_DstBlend"],[0,null]],[[0,"_SrcBlend"],[0,"_DstBlend"],[0,null]],[15,null],[0,null],[0,null],[0,null],[255,null],[255,null],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["LIGHTMODE","FORWARDBASE"],["PerformanceChecks","False"],["RenderType","Opaque"],["SHADOWSUPPORT","true"]],["DIRECTIONAL","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON","FOG_EXP","FOG_EXP2","FOG_LINEAR","INSTANCING_ON","LIGHTMAP_ON","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","VERTEXLIGHT_ON","_ALPHABLEND_ON","_ALPHAPREMULTIPLY_ON","_ALPHATEST_ON","_DETAIL_MULX2","_EMISSION","_GLOSSYREFLECTIONS_OFF","_METALLICGLOSSMAP","_NORMALMAP","_PARALLAXMAP","_SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A","_SPECULARHIGHLIGHTS_OFF","__","_"],[],[[0,0,["DIRECTIONAL","FOG_LINEAR","LIGHTPROBE_SH","SHADOWS_SCREEN","_EMISSION"],"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 unity_FogParams;\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nbool u_xlatb1;\nmediump float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat16;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1.w = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    vs_TEXCOORD1.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat1.xyz;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat16 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat1.xyz = vec3(u_xlat16) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat1.y * u_xlat1.y;\n    u_xlat16_2 = u_xlat1.x * u_xlat1.x + (-u_xlat16_2);\n    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2) + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat4.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat0.zw;\n    vs_TEXCOORD7.xy = u_xlat4.zz + u_xlat4.xw;\n    return;\n}\n\n","\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 _LightShadowData;\nuniform \tvec4 unity_ShadowFadeCenterAndType;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tmediump vec4 unity_FogColor;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform lowp sampler2D _OcclusionMap;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nuniform lowp samplerCube unity_SpecCube1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec3 u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nlowp float u_xlat10_4;\nvec3 u_xlat5;\nlowp vec4 u_xlat10_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nvec3 u_xlat8;\nmediump vec3 u_xlat16_8;\nvec3 u_xlat9;\nlowp vec4 u_xlat10_9;\nvec3 u_xlat10;\nvec3 u_xlat11;\nbvec3 u_xlatb11;\nbvec3 u_xlatb12;\nvec3 u_xlat13;\nvec3 u_xlat14;\nvec3 u_xlat17;\nlowp float u_xlat10_17;\nmediump vec3 u_xlat16_19;\nmediump vec3 u_xlat16_21;\nfloat u_xlat26;\nfloat u_xlat27;\nfloat u_xlat39;\nbool u_xlatb39;\nfloat u_xlat40;\nmediump float u_xlat16_41;\nmediump float u_xlat16_42;\nmediump float u_xlat16_46;\nvoid main()\n{\n    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz * u_xlat10_0.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_41);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat14.xyz = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n    u_xlat4.xyz = (-vs_TEXCOORD8.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat5.x = hlslcc_mtx4x4unity_MatrixV[0].z;\n    u_xlat5.y = hlslcc_mtx4x4unity_MatrixV[1].z;\n    u_xlat5.z = hlslcc_mtx4x4unity_MatrixV[2].z;\n    u_xlat4.x = dot(u_xlat4.xyz, u_xlat5.xyz);\n    u_xlat17.xyz = vs_TEXCOORD8.xyz + (-unity_ShadowFadeCenterAndType.xyz);\n    u_xlat17.x = dot(u_xlat17.xyz, u_xlat17.xyz);\n    u_xlat17.x = sqrt(u_xlat17.x);\n    u_xlat17.x = (-u_xlat4.x) + u_xlat17.x;\n    u_xlat4.x = unity_ShadowFadeCenterAndType.w * u_xlat17.x + u_xlat4.x;\n    u_xlat4.x = u_xlat4.x * _LightShadowData.z + _LightShadowData.w;\n    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);\n    u_xlat17.xy = vs_TEXCOORD7.xy \/ vs_TEXCOORD7.ww;\n    u_xlat10_17 = texture2D(_ShadowMapTexture, u_xlat17.xy).x;\n    u_xlat16_42 = (-u_xlat10_17) + 1.0;\n    u_xlat16_42 = u_xlat4.x * u_xlat16_42 + u_xlat10_17;\n    u_xlat10_4 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_6.x = (-_OcclusionStrength) + 1.0;\n    u_xlat16_6.x = u_xlat10_4 * _OcclusionStrength + u_xlat16_6.x;\n    u_xlat4.x = (-_Glossiness) + 1.0;\n    u_xlat16_19.x = dot(u_xlat14.xyz, u_xlat0.xyz);\n    u_xlat16_19.x = u_xlat16_19.x + u_xlat16_19.x;\n    u_xlat16_19.xyz = u_xlat0.xyz * (-u_xlat16_19.xxx) + u_xlat14.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat16_42) * _LightColor0.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_8.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_8.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_8.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_8.xyz = u_xlat16_8.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_8.xyz = max(u_xlat16_8.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat17.xyz = log2(u_xlat16_8.xyz);\n    u_xlat17.xyz = u_xlat17.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat17.xyz = exp2(u_xlat17.xyz);\n    u_xlat17.xyz = u_xlat17.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat17.xyz = max(u_xlat17.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb39 = 0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb39){\n        u_xlat39 = dot(u_xlat16_19.xyz, u_xlat16_19.xyz);\n        u_xlat39 = inversesqrt(u_xlat39);\n        u_xlat5.xyz = vec3(u_xlat39) * u_xlat16_19.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n        u_xlat9.xyz = u_xlat9.xyz \/ u_xlat5.xyz;\n        u_xlat10.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMin.xyz;\n        u_xlat10.xyz = u_xlat10.xyz \/ u_xlat5.xyz;\n        u_xlatb11.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n        {\n            vec3 hlslcc_movcTemp = u_xlat9;\n            hlslcc_movcTemp.x = (u_xlatb11.x) ? u_xlat9.x : u_xlat10.x;\n            hlslcc_movcTemp.y = (u_xlatb11.y) ? u_xlat9.y : u_xlat10.y;\n            hlslcc_movcTemp.z = (u_xlatb11.z) ? u_xlat9.z : u_xlat10.z;\n            u_xlat9 = hlslcc_movcTemp;\n        }\n        u_xlat39 = min(u_xlat9.y, u_xlat9.x);\n        u_xlat39 = min(u_xlat9.z, u_xlat39);\n        u_xlat9.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n        u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat39) + u_xlat9.xyz;\n    } else {\n        u_xlat5.xyz = u_xlat16_19.xyz;\n    }\n    u_xlat16_42 = (-u_xlat4.x) * 0.699999988 + 1.70000005;\n    u_xlat16_42 = u_xlat16_42 * u_xlat4.x;\n    u_xlat16_42 = u_xlat16_42 * 6.0;\n    u_xlat10_5 = textureCubeLodEXT(unity_SpecCube0, u_xlat5.xyz, u_xlat16_42);\n    u_xlat16_46 = u_xlat10_5.w + -1.0;\n    u_xlat16_46 = unity_SpecCube0_HDR.w * u_xlat16_46 + 1.0;\n    u_xlat16_46 = u_xlat16_46 * unity_SpecCube0_HDR.x;\n    u_xlat16_8.xyz = u_xlat10_5.xyz * vec3(u_xlat16_46);\n    u_xlatb39 = unity_SpecCube0_BoxMin.w<0.999989986;\n    if(u_xlatb39){\n        u_xlatb39 = 0.0<unity_SpecCube1_ProbePosition.w;\n        if(u_xlatb39){\n            u_xlat39 = dot(u_xlat16_19.xyz, u_xlat16_19.xyz);\n            u_xlat39 = inversesqrt(u_xlat39);\n            u_xlat9.xyz = vec3(u_xlat39) * u_xlat16_19.xyz;\n            u_xlat10.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n            u_xlat10.xyz = u_xlat10.xyz \/ u_xlat9.xyz;\n            u_xlat11.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMin.xyz;\n            u_xlat11.xyz = u_xlat11.xyz \/ u_xlat9.xyz;\n            u_xlatb12.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat9.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp = u_xlat10;\n                hlslcc_movcTemp.x = (u_xlatb12.x) ? u_xlat10.x : u_xlat11.x;\n                hlslcc_movcTemp.y = (u_xlatb12.y) ? u_xlat10.y : u_xlat11.y;\n                hlslcc_movcTemp.z = (u_xlatb12.z) ? u_xlat10.z : u_xlat11.z;\n                u_xlat10 = hlslcc_movcTemp;\n            }\n            u_xlat39 = min(u_xlat10.y, u_xlat10.x);\n            u_xlat39 = min(u_xlat10.z, u_xlat39);\n            u_xlat10.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat9.xyz = u_xlat9.xyz * vec3(u_xlat39) + u_xlat10.xyz;\n        } else {\n            u_xlat9.xyz = u_xlat16_19.xyz;\n        }\n        u_xlat10_9 = textureCubeLodEXT(unity_SpecCube1, u_xlat9.xyz, u_xlat16_42);\n        u_xlat16_42 = u_xlat10_9.w + -1.0;\n        u_xlat16_42 = unity_SpecCube1_HDR.w * u_xlat16_42 + 1.0;\n        u_xlat16_42 = u_xlat16_42 * unity_SpecCube1_HDR.x;\n        u_xlat16_19.xyz = u_xlat10_9.xyz * vec3(u_xlat16_42);\n        u_xlat5.xyz = vec3(u_xlat16_46) * u_xlat10_5.xyz + (-u_xlat16_19.xyz);\n        u_xlat8.xyz = unity_SpecCube0_BoxMin.www * u_xlat5.xyz + u_xlat16_19.xyz;\n        u_xlat16_8.xyz = u_xlat8.xyz;\n    }\n    u_xlat16_19.xyz = u_xlat16_6.xxx * u_xlat16_8.xyz;\n    u_xlat5.xyz = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n    u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39, 0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat14.xyz));\n    u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13.x = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n    u_xlat13.x = clamp(u_xlat13.x, 0.0, 1.0);\n    u_xlat16_42 = u_xlat13.x + u_xlat13.x;\n    u_xlat16_42 = u_xlat13.x * u_xlat16_42;\n    u_xlat16_42 = u_xlat16_42 * u_xlat4.x + -0.5;\n    u_xlat16_46 = (-u_xlat1.x) + 1.0;\n    u_xlat16_8.x = u_xlat16_46 * u_xlat16_46;\n    u_xlat16_8.x = u_xlat16_8.x * u_xlat16_8.x;\n    u_xlat16_46 = u_xlat16_46 * u_xlat16_8.x;\n    u_xlat16_46 = u_xlat16_42 * u_xlat16_46 + 1.0;\n    u_xlat16_8.x = -abs(u_xlat39) + 1.0;\n    u_xlat16_21.x = u_xlat16_8.x * u_xlat16_8.x;\n    u_xlat16_21.x = u_xlat16_21.x * u_xlat16_21.x;\n    u_xlat16_8.x = u_xlat16_8.x * u_xlat16_21.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_8.x + 1.0;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_46;\n    u_xlat26 = u_xlat1.x * u_xlat16_42;\n    u_xlat14.x = u_xlat4.x * u_xlat4.x;\n    u_xlat14.x = max(u_xlat14.x, 0.00200000009);\n    u_xlat27 = (-u_xlat14.x) + 1.0;\n    u_xlat40 = abs(u_xlat39) * u_xlat27 + u_xlat14.x;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14.x;\n    u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat40 + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39 = 0.5 \/ u_xlat39;\n    u_xlat27 = u_xlat14.x * u_xlat14.x;\n    u_xlat40 = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat40 * u_xlat0.x + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 \/ u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14.x * u_xlat4.x;\n    u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_42 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_42!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41 = (-u_xlat16_41) + 1.0;\n    u_xlat16_41 = u_xlat16_41 + _Glossiness;\n    u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);\n    u_xlat16_21.xyz = vec3(u_xlat26) * u_xlat16_7.xyz;\n    u_xlat16_21.xyz = u_xlat17.xyz * u_xlat16_6.xxx + u_xlat16_21.xyz;\n    u_xlat1.xyz = u_xlat16_7.xyz * u_xlat0.xxx;\n    u_xlat16_42 = (-u_xlat13.x) + 1.0;\n    u_xlat16_6.x = u_xlat16_42 * u_xlat16_42;\n    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_6.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_6.x;\n    u_xlat16_7.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n    u_xlat0.xyz = u_xlat1.xyz * u_xlat16_7.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_21.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_19.xyz * vec3(u_xlat39);\n    u_xlat16_6.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n    u_xlat16_2.xyz = u_xlat16_8.xxx * u_xlat16_6.xyz + u_xlat16_2.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat10_1.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_2.xyz = u_xlat10_1.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n    u_xlat0.x = vs_TEXCOORD1.w;\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat13.xyz + unity_FogColor.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0,0],[0,0,["DIRECTIONAL","FOG_LINEAR","LIGHTPROBE_SH","SHADOWS_SCREEN","_EMISSION"],"\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 unity_FogParams;\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nbool u_xlatb1;\nmediump float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat16;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1.w = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    vs_TEXCOORD1.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat1.xyz;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat16 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat1.xyz = vec3(u_xlat16) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat1.y * u_xlat1.y;\n    u_xlat16_2 = u_xlat1.x * u_xlat1.x + (-u_xlat16_2);\n    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2) + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat4.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat0.zw;\n    vs_TEXCOORD7.xy = u_xlat4.zz + u_xlat4.xw;\n    return;\n}\n\n","\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 _LightShadowData;\nuniform \tvec4 unity_ShadowFadeCenterAndType;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tmediump vec4 unity_FogColor;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _ShadowMapTexture;\nUNITY_LOCATION(2) uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(3) uniform mediump sampler2D _EmissionMap;\nUNITY_LOCATION(4) uniform mediump samplerCube unity_SpecCube0;\nUNITY_LOCATION(5) uniform mediump samplerCube unity_SpecCube1;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nin highp vec4 vs_TEXCOORD7;\nin highp vec3 vs_TEXCOORD8;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3 u_xlat1;\nmediump vec3 u_xlat16_1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump float u_xlat16_4;\nvec3 u_xlat5;\nmediump vec4 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nvec3 u_xlat8;\nmediump vec3 u_xlat16_8;\nvec3 u_xlat9;\nmediump vec4 u_xlat16_9;\nvec3 u_xlat10;\nvec3 u_xlat11;\nbvec3 u_xlatb11;\nbvec3 u_xlatb12;\nvec3 u_xlat13;\nvec3 u_xlat14;\nvec3 u_xlat17;\nmediump float u_xlat16_17;\nmediump vec3 u_xlat16_19;\nmediump vec3 u_xlat16_21;\nfloat u_xlat26;\nfloat u_xlat27;\nfloat u_xlat39;\nbool u_xlatb39;\nfloat u_xlat40;\nmediump float u_xlat16_41;\nmediump float u_xlat16_42;\nmediump float u_xlat16_46;\nvoid main()\n{\n    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz * u_xlat16_0.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_41);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat14.xyz = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n    u_xlat4.xyz = (-vs_TEXCOORD8.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat5.x = hlslcc_mtx4x4unity_MatrixV[0].z;\n    u_xlat5.y = hlslcc_mtx4x4unity_MatrixV[1].z;\n    u_xlat5.z = hlslcc_mtx4x4unity_MatrixV[2].z;\n    u_xlat4.x = dot(u_xlat4.xyz, u_xlat5.xyz);\n    u_xlat17.xyz = vs_TEXCOORD8.xyz + (-unity_ShadowFadeCenterAndType.xyz);\n    u_xlat17.x = dot(u_xlat17.xyz, u_xlat17.xyz);\n    u_xlat17.x = sqrt(u_xlat17.x);\n    u_xlat17.x = (-u_xlat4.x) + u_xlat17.x;\n    u_xlat4.x = unity_ShadowFadeCenterAndType.w * u_xlat17.x + u_xlat4.x;\n    u_xlat4.x = u_xlat4.x * _LightShadowData.z + _LightShadowData.w;\n    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);\n    u_xlat17.xy = vs_TEXCOORD7.xy \/ vs_TEXCOORD7.ww;\n    u_xlat16_17 = texture(_ShadowMapTexture, u_xlat17.xy).x;\n    u_xlat16_42 = (-u_xlat16_17) + 1.0;\n    u_xlat16_42 = u_xlat4.x * u_xlat16_42 + u_xlat16_17;\n    u_xlat16_4 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_6.x = (-_OcclusionStrength) + 1.0;\n    u_xlat16_6.x = u_xlat16_4 * _OcclusionStrength + u_xlat16_6.x;\n    u_xlat4.x = (-_Glossiness) + 1.0;\n    u_xlat16_19.x = dot(u_xlat14.xyz, u_xlat0.xyz);\n    u_xlat16_19.x = u_xlat16_19.x + u_xlat16_19.x;\n    u_xlat16_19.xyz = u_xlat0.xyz * (-u_xlat16_19.xxx) + u_xlat14.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat16_42) * _LightColor0.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_8.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_8.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_8.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_8.xyz = u_xlat16_8.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_8.xyz = max(u_xlat16_8.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat17.xyz = log2(u_xlat16_8.xyz);\n    u_xlat17.xyz = u_xlat17.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat17.xyz = exp2(u_xlat17.xyz);\n    u_xlat17.xyz = u_xlat17.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat17.xyz = max(u_xlat17.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb39 = 0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb39){\n        u_xlat39 = dot(u_xlat16_19.xyz, u_xlat16_19.xyz);\n        u_xlat39 = inversesqrt(u_xlat39);\n        u_xlat5.xyz = vec3(u_xlat39) * u_xlat16_19.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n        u_xlat9.xyz = u_xlat9.xyz \/ u_xlat5.xyz;\n        u_xlat10.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMin.xyz;\n        u_xlat10.xyz = u_xlat10.xyz \/ u_xlat5.xyz;\n        u_xlatb11.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n        {\n            vec3 hlslcc_movcTemp = u_xlat9;\n            hlslcc_movcTemp.x = (u_xlatb11.x) ? u_xlat9.x : u_xlat10.x;\n            hlslcc_movcTemp.y = (u_xlatb11.y) ? u_xlat9.y : u_xlat10.y;\n            hlslcc_movcTemp.z = (u_xlatb11.z) ? u_xlat9.z : u_xlat10.z;\n            u_xlat9 = hlslcc_movcTemp;\n        }\n        u_xlat39 = min(u_xlat9.y, u_xlat9.x);\n        u_xlat39 = min(u_xlat9.z, u_xlat39);\n        u_xlat9.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n        u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat39) + u_xlat9.xyz;\n    } else {\n        u_xlat5.xyz = u_xlat16_19.xyz;\n    }\n    u_xlat16_42 = (-u_xlat4.x) * 0.699999988 + 1.70000005;\n    u_xlat16_42 = u_xlat16_42 * u_xlat4.x;\n    u_xlat16_42 = u_xlat16_42 * 6.0;\n    u_xlat16_5 = textureLod(unity_SpecCube0, u_xlat5.xyz, u_xlat16_42);\n    u_xlat16_46 = u_xlat16_5.w + -1.0;\n    u_xlat16_46 = unity_SpecCube0_HDR.w * u_xlat16_46 + 1.0;\n    u_xlat16_46 = u_xlat16_46 * unity_SpecCube0_HDR.x;\n    u_xlat16_8.xyz = u_xlat16_5.xyz * vec3(u_xlat16_46);\n    u_xlatb39 = unity_SpecCube0_BoxMin.w<0.999989986;\n    if(u_xlatb39){\n        u_xlatb39 = 0.0<unity_SpecCube1_ProbePosition.w;\n        if(u_xlatb39){\n            u_xlat39 = dot(u_xlat16_19.xyz, u_xlat16_19.xyz);\n            u_xlat39 = inversesqrt(u_xlat39);\n            u_xlat9.xyz = vec3(u_xlat39) * u_xlat16_19.xyz;\n            u_xlat10.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n            u_xlat10.xyz = u_xlat10.xyz \/ u_xlat9.xyz;\n            u_xlat11.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMin.xyz;\n            u_xlat11.xyz = u_xlat11.xyz \/ u_xlat9.xyz;\n            u_xlatb12.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat9.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp = u_xlat10;\n                hlslcc_movcTemp.x = (u_xlatb12.x) ? u_xlat10.x : u_xlat11.x;\n                hlslcc_movcTemp.y = (u_xlatb12.y) ? u_xlat10.y : u_xlat11.y;\n                hlslcc_movcTemp.z = (u_xlatb12.z) ? u_xlat10.z : u_xlat11.z;\n                u_xlat10 = hlslcc_movcTemp;\n            }\n            u_xlat39 = min(u_xlat10.y, u_xlat10.x);\n            u_xlat39 = min(u_xlat10.z, u_xlat39);\n            u_xlat10.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat9.xyz = u_xlat9.xyz * vec3(u_xlat39) + u_xlat10.xyz;\n        } else {\n            u_xlat9.xyz = u_xlat16_19.xyz;\n        }\n        u_xlat16_9 = textureLod(unity_SpecCube1, u_xlat9.xyz, u_xlat16_42);\n        u_xlat16_42 = u_xlat16_9.w + -1.0;\n        u_xlat16_42 = unity_SpecCube1_HDR.w * u_xlat16_42 + 1.0;\n        u_xlat16_42 = u_xlat16_42 * unity_SpecCube1_HDR.x;\n        u_xlat16_19.xyz = u_xlat16_9.xyz * vec3(u_xlat16_42);\n        u_xlat5.xyz = vec3(u_xlat16_46) * u_xlat16_5.xyz + (-u_xlat16_19.xyz);\n        u_xlat8.xyz = unity_SpecCube0_BoxMin.www * u_xlat5.xyz + u_xlat16_19.xyz;\n        u_xlat16_8.xyz = u_xlat8.xyz;\n    }\n    u_xlat16_19.xyz = u_xlat16_6.xxx * u_xlat16_8.xyz;\n    u_xlat5.xyz = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n    u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39, 0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat14.xyz));\n    u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13.x = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n    u_xlat13.x = clamp(u_xlat13.x, 0.0, 1.0);\n    u_xlat16_42 = u_xlat13.x + u_xlat13.x;\n    u_xlat16_42 = u_xlat13.x * u_xlat16_42;\n    u_xlat16_42 = u_xlat16_42 * u_xlat4.x + -0.5;\n    u_xlat16_46 = (-u_xlat1.x) + 1.0;\n    u_xlat16_8.x = u_xlat16_46 * u_xlat16_46;\n    u_xlat16_8.x = u_xlat16_8.x * u_xlat16_8.x;\n    u_xlat16_46 = u_xlat16_46 * u_xlat16_8.x;\n    u_xlat16_46 = u_xlat16_42 * u_xlat16_46 + 1.0;\n    u_xlat16_8.x = -abs(u_xlat39) + 1.0;\n    u_xlat16_21.x = u_xlat16_8.x * u_xlat16_8.x;\n    u_xlat16_21.x = u_xlat16_21.x * u_xlat16_21.x;\n    u_xlat16_8.x = u_xlat16_8.x * u_xlat16_21.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_8.x + 1.0;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_46;\n    u_xlat26 = u_xlat1.x * u_xlat16_42;\n    u_xlat14.x = u_xlat4.x * u_xlat4.x;\n    u_xlat14.x = max(u_xlat14.x, 0.00200000009);\n    u_xlat27 = (-u_xlat14.x) + 1.0;\n    u_xlat40 = abs(u_xlat39) * u_xlat27 + u_xlat14.x;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14.x;\n    u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat40 + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39 = 0.5 \/ u_xlat39;\n    u_xlat27 = u_xlat14.x * u_xlat14.x;\n    u_xlat40 = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat40 * u_xlat0.x + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 \/ u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14.x * u_xlat4.x;\n    u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_42 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_42!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41 = (-u_xlat16_41) + 1.0;\n    u_xlat16_41 = u_xlat16_41 + _Glossiness;\n    u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);\n    u_xlat16_21.xyz = vec3(u_xlat26) * u_xlat16_7.xyz;\n    u_xlat16_21.xyz = u_xlat17.xyz * u_xlat16_6.xxx + u_xlat16_21.xyz;\n    u_xlat1.xyz = u_xlat16_7.xyz * u_xlat0.xxx;\n    u_xlat16_42 = (-u_xlat13.x) + 1.0;\n    u_xlat16_6.x = u_xlat16_42 * u_xlat16_42;\n    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_6.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_6.x;\n    u_xlat16_7.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n    u_xlat0.xyz = u_xlat1.xyz * u_xlat16_7.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_21.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_19.xyz * vec3(u_xlat39);\n    u_xlat16_6.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n    u_xlat16_2.xyz = u_xlat16_8.xxx * u_xlat16_6.xyz + u_xlat16_2.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat16_1.xyz = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_2.xyz = u_xlat16_1.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n    u_xlat0.x = vs_TEXCOORD1.w;\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat13.xyz + unity_FogColor.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",1,0],[0,0,["DIRECTIONAL","FOG_LINEAR","LIGHTPROBE_SH","SHADOWS_SCREEN","_GLOSSYREFLECTIONS_OFF"],"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 unity_FogParams;\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nbool u_xlatb1;\nmediump float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat16;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1.w = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    vs_TEXCOORD1.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat1.xyz;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat16 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat1.xyz = vec3(u_xlat16) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat1.y * u_xlat1.y;\n    u_xlat16_2 = u_xlat1.x * u_xlat1.x + (-u_xlat16_2);\n    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2) + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat4.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat0.zw;\n    vs_TEXCOORD7.xy = u_xlat4.zz + u_xlat4.xw;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 _LightShadowData;\nuniform \tvec4 unity_ShadowFadeCenterAndType;\nuniform \tmediump vec4 unity_IndirectSpecColor;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tmediump vec4 unity_FogColor;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform lowp sampler2D _OcclusionMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp float u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nvec4 u_xlat3;\nvec3 u_xlat4;\nbool u_xlatb4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nvec3 u_xlat9;\nlowp float u_xlat10_9;\nfloat u_xlat10;\nmediump float u_xlat16_15;\nfloat u_xlat18;\nfloat u_xlat19;\nmediump float u_xlat16_24;\nfloat u_xlat27;\nfloat u_xlat28;\nmediump float u_xlat16_29;\nmediump float u_xlat16_32;\nvoid main()\n{\n    u_xlat0.xyz = vs_TEXCOORD8.xyz + (-unity_ShadowFadeCenterAndType.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat9.xyz = (-vs_TEXCOORD8.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat1.x = hlslcc_mtx4x4unity_MatrixV[0].z;\n    u_xlat1.y = hlslcc_mtx4x4unity_MatrixV[1].z;\n    u_xlat1.z = hlslcc_mtx4x4unity_MatrixV[2].z;\n    u_xlat9.x = dot(u_xlat9.xyz, u_xlat1.xyz);\n    u_xlat0.x = (-u_xlat9.x) + u_xlat0.x;\n    u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat0.x + u_xlat9.x;\n    u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat9.xy = vs_TEXCOORD7.xy \/ vs_TEXCOORD7.ww;\n    u_xlat10_9 = texture2D(_ShadowMapTexture, u_xlat9.xy).x;\n    u_xlat16_2.x = (-u_xlat10_9) + 1.0;\n    u_xlat16_2.x = u_xlat0.x * u_xlat16_2.x + u_xlat10_9;\n    u_xlat16_2.xyz = u_xlat16_2.xxx * _LightColor0.xyz;\n    u_xlat0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat9.xyz = (-vs_TEXCOORD1.xyz) * u_xlat0.xxx + _WorldSpaceLightPos0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat9.xyz, u_xlat9.xyz);\n    u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat9.xyz;\n    u_xlat27 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n    u_xlat3.xyz = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat27 = dot(u_xlat3.xyz, u_xlat0.xyz);\n    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat9.x = (-_Glossiness) + 1.0;\n    u_xlat18 = u_xlat9.x * u_xlat9.x;\n    u_xlat18 = max(u_xlat18, 0.00200000009);\n    u_xlat28 = u_xlat18 * u_xlat18;\n    u_xlat4.x = u_xlat27 * u_xlat28 + (-u_xlat27);\n    u_xlat27 = u_xlat4.x * u_xlat27 + 1.0;\n    u_xlat27 = u_xlat27 * u_xlat27 + 1.00000001e-07;\n    u_xlat28 = u_xlat28 * 0.318309873;\n    u_xlat27 = u_xlat28 \/ u_xlat27;\n    u_xlat1.x = dot(u_xlat3.xyz, (-u_xlat1.xyz));\n    u_xlat10 = (-u_xlat18) + 1.0;\n    u_xlat19 = abs(u_xlat1.x) * u_xlat10 + u_xlat18;\n    u_xlat28 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);\n    u_xlat10 = u_xlat28 * u_xlat10 + u_xlat18;\n    u_xlat18 = u_xlat18 * u_xlat9.x;\n    u_xlat18 = (-u_xlat18) * 0.280000001 + 1.0;\n    u_xlat10 = u_xlat10 * abs(u_xlat1.x);\n    u_xlat16_29 = -abs(u_xlat1.x) + 1.0;\n    u_xlat1.x = u_xlat28 * u_xlat19 + u_xlat10;\n    u_xlat1.x = u_xlat1.x + 9.99999975e-06;\n    u_xlat1.x = 0.5 \/ u_xlat1.x;\n    u_xlat27 = u_xlat27 * u_xlat1.x;\n    u_xlat27 = u_xlat27 * 3.14159274;\n    u_xlat27 = max(u_xlat27, 9.99999975e-05);\n    u_xlat27 = sqrt(u_xlat27);\n    u_xlat27 = u_xlat28 * u_xlat27;\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_5.xyz = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_5.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_5.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_32 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n    u_xlatb4 = u_xlat16_32!=0.0;\n    u_xlat4.x = u_xlatb4 ? 1.0 : float(0.0);\n    u_xlat27 = u_xlat27 * u_xlat4.x;\n    u_xlat4.xyz = u_xlat16_2.xyz * vec3(u_xlat27);\n    u_xlat16_32 = (-u_xlat0.x) + 1.0;\n    u_xlat16_6.x = u_xlat16_32 * u_xlat16_32;\n    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_6.x;\n    u_xlat16_32 = u_xlat16_32 * u_xlat16_6.x;\n    u_xlat16_6.xyz = (-u_xlat16_5.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_32) + u_xlat16_5.xyz;\n    u_xlat4.xyz = u_xlat4.xyz * u_xlat16_6.xyz;\n    u_xlat3.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat3);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat3);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat3);\n    u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat3.xyz = log2(u_xlat16_6.xyz);\n    u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat3.xyz = exp2(u_xlat3.xyz);\n    u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat16_32 = u_xlat0.x + u_xlat0.x;\n    u_xlat16_32 = u_xlat0.x * u_xlat16_32;\n    u_xlat16_32 = u_xlat16_32 * u_xlat9.x + -0.5;\n    u_xlat16_6.x = u_xlat16_29 * u_xlat16_29;\n    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_6.x;\n    u_xlat16_29 = u_xlat16_29 * u_xlat16_6.x;\n    u_xlat16_6.x = u_xlat16_32 * u_xlat16_29 + 1.0;\n    u_xlat16_15 = (-u_xlat28) + 1.0;\n    u_xlat16_24 = u_xlat16_15 * u_xlat16_15;\n    u_xlat16_24 = u_xlat16_24 * u_xlat16_24;\n    u_xlat16_15 = u_xlat16_15 * u_xlat16_24;\n    u_xlat16_32 = u_xlat16_32 * u_xlat16_15 + 1.0;\n    u_xlat16_32 = u_xlat16_6.x * u_xlat16_32;\n    u_xlat0.x = u_xlat28 * u_xlat16_32;\n    u_xlat16_2.xyz = u_xlat0.xxx * u_xlat16_2.xyz;\n    u_xlat10_0 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_32 = (-_OcclusionStrength) + 1.0;\n    u_xlat16_32 = u_xlat10_0 * _OcclusionStrength + u_xlat16_32;\n    u_xlat16_2.xyz = u_xlat3.xyz * vec3(u_xlat16_32) + u_xlat16_2.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat16_32) * unity_IndirectSpecColor.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat18) * u_xlat16_6.xyz;\n    u_xlat16_32 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_7.xyz = u_xlat1.xyz * vec3(u_xlat16_32);\n    u_xlat16_32 = (-u_xlat16_32) + 1.0;\n    u_xlat16_32 = u_xlat16_32 + _Glossiness;\n    u_xlat16_32 = clamp(u_xlat16_32, 0.0, 1.0);\n    u_xlat16_8.xyz = (-u_xlat16_5.xyz) + vec3(u_xlat16_32);\n    u_xlat16_5.xyz = vec3(u_xlat16_29) * u_xlat16_8.xyz + u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_2.xyz + u_xlat4.xyz;\n    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);\n    u_xlat27 = vs_TEXCOORD1.w;\n    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n    u_xlat0.xyz = vec3(u_xlat27) * u_xlat0.xyz + unity_FogColor.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0,0],[0,0,["DIRECTIONAL","FOG_LINEAR","LIGHTPROBE_SH","SHADOWS_SCREEN","_GLOSSYREFLECTIONS_OFF"],"\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 unity_FogParams;\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nbool u_xlatb1;\nmediump float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat16;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1.w = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    vs_TEXCOORD1.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat1.xyz;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat16 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat1.xyz = vec3(u_xlat16) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat1.y * u_xlat1.y;\n    u_xlat16_2 = u_xlat1.x * u_xlat1.x + (-u_xlat16_2);\n    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2) + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat4.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat0.zw;\n    vs_TEXCOORD7.xy = u_xlat4.zz + u_xlat4.xw;\n    return;\n}\n\n","\n#version 300 es\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 _LightShadowData;\nuniform \tvec4 unity_ShadowFadeCenterAndType;\nuniform \tmediump vec4 unity_IndirectSpecColor;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tmediump vec4 unity_FogColor;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _ShadowMapTexture;\nUNITY_LOCATION(2) uniform mediump sampler2D _OcclusionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nin highp vec4 vs_TEXCOORD7;\nin highp vec3 vs_TEXCOORD8;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump float u_xlat16_0;\nvec3 u_xlat1;\nmediump vec3 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nvec4 u_xlat3;\nvec3 u_xlat4;\nbool u_xlatb4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nvec3 u_xlat9;\nmediump float u_xlat16_9;\nfloat u_xlat10;\nmediump float u_xlat16_15;\nfloat u_xlat18;\nfloat u_xlat19;\nmediump float u_xlat16_24;\nfloat u_xlat27;\nfloat u_xlat28;\nmediump float u_xlat16_29;\nmediump float u_xlat16_32;\nvoid main()\n{\n    u_xlat0.xyz = vs_TEXCOORD8.xyz + (-unity_ShadowFadeCenterAndType.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat9.xyz = (-vs_TEXCOORD8.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat1.x = hlslcc_mtx4x4unity_MatrixV[0].z;\n    u_xlat1.y = hlslcc_mtx4x4unity_MatrixV[1].z;\n    u_xlat1.z = hlslcc_mtx4x4unity_MatrixV[2].z;\n    u_xlat9.x = dot(u_xlat9.xyz, u_xlat1.xyz);\n    u_xlat0.x = (-u_xlat9.x) + u_xlat0.x;\n    u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat0.x + u_xlat9.x;\n    u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat9.xy = vs_TEXCOORD7.xy \/ vs_TEXCOORD7.ww;\n    u_xlat16_9 = texture(_ShadowMapTexture, u_xlat9.xy).x;\n    u_xlat16_2.x = (-u_xlat16_9) + 1.0;\n    u_xlat16_2.x = u_xlat0.x * u_xlat16_2.x + u_xlat16_9;\n    u_xlat16_2.xyz = u_xlat16_2.xxx * _LightColor0.xyz;\n    u_xlat0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat9.xyz = (-vs_TEXCOORD1.xyz) * u_xlat0.xxx + _WorldSpaceLightPos0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat9.xyz, u_xlat9.xyz);\n    u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat9.xyz;\n    u_xlat27 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n    u_xlat3.xyz = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat27 = dot(u_xlat3.xyz, u_xlat0.xyz);\n    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat9.x = (-_Glossiness) + 1.0;\n    u_xlat18 = u_xlat9.x * u_xlat9.x;\n    u_xlat18 = max(u_xlat18, 0.00200000009);\n    u_xlat28 = u_xlat18 * u_xlat18;\n    u_xlat4.x = u_xlat27 * u_xlat28 + (-u_xlat27);\n    u_xlat27 = u_xlat4.x * u_xlat27 + 1.0;\n    u_xlat27 = u_xlat27 * u_xlat27 + 1.00000001e-07;\n    u_xlat28 = u_xlat28 * 0.318309873;\n    u_xlat27 = u_xlat28 \/ u_xlat27;\n    u_xlat1.x = dot(u_xlat3.xyz, (-u_xlat1.xyz));\n    u_xlat10 = (-u_xlat18) + 1.0;\n    u_xlat19 = abs(u_xlat1.x) * u_xlat10 + u_xlat18;\n    u_xlat28 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);\n    u_xlat10 = u_xlat28 * u_xlat10 + u_xlat18;\n    u_xlat18 = u_xlat18 * u_xlat9.x;\n    u_xlat18 = (-u_xlat18) * 0.280000001 + 1.0;\n    u_xlat10 = u_xlat10 * abs(u_xlat1.x);\n    u_xlat16_29 = -abs(u_xlat1.x) + 1.0;\n    u_xlat1.x = u_xlat28 * u_xlat19 + u_xlat10;\n    u_xlat1.x = u_xlat1.x + 9.99999975e-06;\n    u_xlat1.x = 0.5 \/ u_xlat1.x;\n    u_xlat27 = u_xlat27 * u_xlat1.x;\n    u_xlat27 = u_xlat27 * 3.14159274;\n    u_xlat27 = max(u_xlat27, 9.99999975e-05);\n    u_xlat27 = sqrt(u_xlat27);\n    u_xlat27 = u_xlat28 * u_xlat27;\n    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_5.xyz = _Color.xyz * u_xlat16_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1.xyz = u_xlat16_1.xyz * _Color.xyz;\n    u_xlat16_5.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_5.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_32 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n    u_xlatb4 = u_xlat16_32!=0.0;\n    u_xlat4.x = u_xlatb4 ? 1.0 : float(0.0);\n    u_xlat27 = u_xlat27 * u_xlat4.x;\n    u_xlat4.xyz = u_xlat16_2.xyz * vec3(u_xlat27);\n    u_xlat16_32 = (-u_xlat0.x) + 1.0;\n    u_xlat16_6.x = u_xlat16_32 * u_xlat16_32;\n    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_6.x;\n    u_xlat16_32 = u_xlat16_32 * u_xlat16_6.x;\n    u_xlat16_6.xyz = (-u_xlat16_5.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_32) + u_xlat16_5.xyz;\n    u_xlat4.xyz = u_xlat4.xyz * u_xlat16_6.xyz;\n    u_xlat3.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat3);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat3);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat3);\n    u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat3.xyz = log2(u_xlat16_6.xyz);\n    u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat3.xyz = exp2(u_xlat3.xyz);\n    u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat16_32 = u_xlat0.x + u_xlat0.x;\n    u_xlat16_32 = u_xlat0.x * u_xlat16_32;\n    u_xlat16_32 = u_xlat16_32 * u_xlat9.x + -0.5;\n    u_xlat16_6.x = u_xlat16_29 * u_xlat16_29;\n    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_6.x;\n    u_xlat16_29 = u_xlat16_29 * u_xlat16_6.x;\n    u_xlat16_6.x = u_xlat16_32 * u_xlat16_29 + 1.0;\n    u_xlat16_15 = (-u_xlat28) + 1.0;\n    u_xlat16_24 = u_xlat16_15 * u_xlat16_15;\n    u_xlat16_24 = u_xlat16_24 * u_xlat16_24;\n    u_xlat16_15 = u_xlat16_15 * u_xlat16_24;\n    u_xlat16_32 = u_xlat16_32 * u_xlat16_15 + 1.0;\n    u_xlat16_32 = u_xlat16_6.x * u_xlat16_32;\n    u_xlat0.x = u_xlat28 * u_xlat16_32;\n    u_xlat16_2.xyz = u_xlat0.xxx * u_xlat16_2.xyz;\n    u_xlat16_0 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_32 = (-_OcclusionStrength) + 1.0;\n    u_xlat16_32 = u_xlat16_0 * _OcclusionStrength + u_xlat16_32;\n    u_xlat16_2.xyz = u_xlat3.xyz * vec3(u_xlat16_32) + u_xlat16_2.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat16_32) * unity_IndirectSpecColor.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat18) * u_xlat16_6.xyz;\n    u_xlat16_32 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_7.xyz = u_xlat1.xyz * vec3(u_xlat16_32);\n    u_xlat16_32 = (-u_xlat16_32) + 1.0;\n    u_xlat16_32 = u_xlat16_32 + _Glossiness;\n    u_xlat16_32 = clamp(u_xlat16_32, 0.0, 1.0);\n    u_xlat16_8.xyz = (-u_xlat16_5.xyz) + vec3(u_xlat16_32);\n    u_xlat16_5.xyz = vec3(u_xlat16_29) * u_xlat16_8.xyz + u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_2.xyz + u_xlat4.xyz;\n    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);\n    u_xlat27 = vs_TEXCOORD1.w;\n    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n    u_xlat0.xyz = vec3(u_xlat27) * u_xlat0.xyz + unity_FogColor.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",1,0]],[],0],[1,0,"FORWARD_DELTA",5,"",0,[4,null],[0,null],[2,null],[[0,"_SrcBlend"],[1,null],[0,null]],[[0,"_SrcBlend"],[1,null],[0,null]],[15,null],[0,null],[0,null],[0,null],[255,null],[255,null],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["LIGHTMODE","FORWARDADD"],["PerformanceChecks","False"],["RenderType","Opaque"],["SHADOWSUPPORT","true"]],["DIRECTIONAL","DIRECTIONAL_COOKIE","FOG_EXP","FOG_EXP2","FOG_LINEAR","LIGHTMAP_SHADOW_MIXING","POINT","POINT_COOKIE","SHADOWS_CUBE","SHADOWS_DEPTH","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","SHADOWS_SOFT","SPOT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_ALPHABLEND_ON","_ALPHAPREMULTIPLY_ON","_ALPHATEST_ON","_DETAIL_MULX2","_METALLICGLOSSMAP","_NORMALMAP","_PARALLAXMAP","_SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A","_SPECULARHIGHLIGHTS_OFF","__","_"],[],[],[],0],[2,0,"ShadowCaster",8,"",0,[4,null],[1,null],[2,null],[[1,null],[0,null],[0,null]],[[1,null],[0,null],[0,null]],[15,null],[0,null],[0,null],[0,null],[255,null],[255,null],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["LIGHTMODE","SHADOWCASTER"],["PerformanceChecks","False"],["RenderType","Opaque"],["SHADOWSUPPORT","true"]],["INSTANCING_ON","SHADOWS_CUBE","SHADOWS_DEPTH","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_ALPHABLEND_ON","_ALPHAPREMULTIPLY_ON","_ALPHATEST_ON","_METALLICGLOSSMAP","_PARALLAXMAP","_SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A","__","_"],[],[[2,0,["SHADOWS_DEPTH"],"\n#version 100\n\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 unity_LightShadowBias;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nfloat u_xlat6;\nfloat u_xlat9;\nbool u_xlatb9;\nvoid main()\n{\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat1;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    u_xlat9 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat2.xyz = vec3(u_xlat9) * u_xlat2.xyz;\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat2.xyz);\n    u_xlat9 = (-u_xlat9) * u_xlat9 + 1.0;\n    u_xlat9 = sqrt(u_xlat9);\n    u_xlat9 = u_xlat9 * unity_LightShadowBias.z;\n    u_xlat0.xyz = (-u_xlat0.xyz) * vec3(u_xlat9) + u_xlat1.xyz;\n    u_xlatb9 = unity_LightShadowBias.z!=0.0;\n    u_xlat0.xyz = (bool(u_xlatb9)) ? u_xlat0.xyz : u_xlat1.xyz;\n    u_xlat2 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat2;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat2;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    u_xlat1.x = unity_LightShadowBias.x \/ u_xlat0.w;\n    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat6 = u_xlat0.z + u_xlat1.x;\n    u_xlat1.x = max((-u_xlat0.w), u_xlat6);\n    gl_Position.xyw = u_xlat0.xyw;\n    u_xlat0.x = (-u_xlat6) + u_xlat1.x;\n    gl_Position.z = unity_LightShadowBias.y * u_xlat0.x + u_xlat6;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\n#define SV_Target0 gl_FragData[0]\nvoid main()\n{\n    SV_Target0 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n",0,0],[2,0,["SHADOWS_DEPTH"],"\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 unity_LightShadowBias;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nfloat u_xlat6;\nfloat u_xlat9;\nbool u_xlatb9;\nvoid main()\n{\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat1;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    u_xlat9 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat2.xyz = vec3(u_xlat9) * u_xlat2.xyz;\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat2.xyz);\n    u_xlat9 = (-u_xlat9) * u_xlat9 + 1.0;\n    u_xlat9 = sqrt(u_xlat9);\n    u_xlat9 = u_xlat9 * unity_LightShadowBias.z;\n    u_xlat0.xyz = (-u_xlat0.xyz) * vec3(u_xlat9) + u_xlat1.xyz;\n    u_xlatb9 = unity_LightShadowBias.z!=0.0;\n    u_xlat0.xyz = (bool(u_xlatb9)) ? u_xlat0.xyz : u_xlat1.xyz;\n    u_xlat2 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat2;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat2;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    u_xlat1.x = unity_LightShadowBias.x \/ u_xlat0.w;\n    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat6 = u_xlat0.z + u_xlat1.x;\n    u_xlat1.x = max((-u_xlat0.w), u_xlat6);\n    gl_Position.xyw = u_xlat0.xyw;\n    u_xlat0.x = (-u_xlat6) + u_xlat1.x;\n    gl_Position.z = unity_LightShadowBias.y * u_xlat0.x + u_xlat6;\n    return;\n}\n\n","\n#version 300 es\n\nprecision highp float;\nprecision highp int;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvoid main()\n{\n    SV_Target0 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n",1,0]],[],0]],[],[["_Color",0,1,1,1,1,"",0],["_MainTex",4,0,0,0,0,"white",0],["_Cutoff",3,0.5,0,1,0,"",0],["_Glossiness",3,0.5,0,1,0,"",0],["_GlossMapScale",3,1,0,1,0,"",0],["_SmoothnessTextureChannel",2,0,0,0,0,"",0],["_Metallic",3,0,0,1,0,"",32],["_MetallicGlossMap",4,0,0,0,0,"white",0],["_SpecularHighlights",2,1,0,0,0,"",0],["_GlossyReflections",2,1,0,0,0,"",0],["_BumpScale",2,1,0,0,0,"",0],["_BumpMap",4,0,0,0,0,"bump",8],["_Parallax",3,0.0199999995529652,0.00499999988824129,0.0799999982118607,0,"",0],["_ParallaxMap",4,0,0,0,0,"black",0],["_OcclusionStrength",3,1,0,1,0,"",0],["_OcclusionMap",4,0,0,0,0,"white",0],["_EmissionColor",0,0,0,0,1,"",0],["_EmissionMap",4,0,0,0,0,"white",0],["_DetailMask",4,0,0,0,0,"white",0],["_DetailAlbedoMap",4,0,0,0,0,"grey",0],["_DetailNormalMapScale",2,1,0,0,0,"",0],["_DetailNormalMap",4,0,0,0,0,"bump",8],["_UVSec",2,0,0,0,0,"",0],["_Mode",2,0,0,0,0,"",1],["_SrcBlend",2,1,0,0,0,"",1],["_DstBlend",2,0,0,0,0,"",1],["_ZWrite",2,1,0,0,0,"",1]],25,68,0,0,0]}