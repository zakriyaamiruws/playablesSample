["\n#version 100\n\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump float _Exposure;\nuniform \tmediump vec3 _GroundColor;\nuniform \tmediump vec3 _SkyTint;\nuniform \tmediump float _AtmosphereThickness;\nattribute highp vec4 in_POSITION0;\nvarying mediump float vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD2;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_5;\nvec4 u_xlat6;\nvec3 u_xlat7;\nfloat u_xlat8;\nvec2 u_xlat14;\nfloat u_xlat16;\nfloat u_xlat24;\nfloat u_xlat26;\nfloat u_xlat28;\nfloat u_xlat29;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat16_1 = log2(vec4(_SkyTint.x, _SkyTint.y, _SkyTint.z, _AtmosphereThickness));\n    u_xlat16_1 = u_xlat16_1 * vec4(0.454545468, 0.454545468, 0.454545468, 2.5);\n    u_xlat16_1 = exp2(u_xlat16_1);\n    u_xlat2.xyz = (-u_xlat16_1.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(0.300000012, 0.300000042, 0.300000012) + vec3(0.5, 0.419999987, 0.324999988);\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n    u_xlat2.xyz = vec3(1.0, 1.0, 1.0) / u_xlat2.xyz;\n    u_xlat16_3.xy = u_xlat16_1.ww * vec2(0.049999997, 0.0314159282);\n    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat4.xyz = vec3(u_xlat24) * u_xlat0.xyz;\n    u_xlatb0 = u_xlat4.y>=0.0;\n    if(u_xlatb0){\n        u_xlat0.x = u_xlat4.y * u_xlat4.y + 0.0506249666;\n        u_xlat0.x = sqrt(u_xlat0.x);\n        u_xlat0.x = (-u_xlat0.y) * u_xlat24 + u_xlat0.x;\n        u_xlat8 = (-u_xlat0.y) * u_xlat24 + 1.0;\n        u_xlat16 = u_xlat8 * 5.25 + -6.80000019;\n        u_xlat16 = u_xlat8 * u_xlat16 + 3.82999992;\n        u_xlat16 = u_xlat8 * u_xlat16 + 0.458999991;\n        u_xlat8 = u_xlat8 * u_xlat16 + -0.00286999997;\n        u_xlat8 = u_xlat8 * 1.44269502;\n        u_xlat0.y = exp2(u_xlat8);\n        u_xlat0.xyz = u_xlat0.xyx * vec3(0.5, 0.246031836, 20.0);\n        u_xlat5.xyz = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat5.xyz = u_xlat5.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat24 = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat24 = sqrt(u_xlat24);\n        u_xlat26 = (-u_xlat24) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat24;\n        u_xlat29 = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat24 = u_xlat29 / u_xlat24;\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat29 = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat29 = u_xlat28 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat28 * u_xlat29 + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat29 + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat24 = (-u_xlat24) + 1.0;\n        u_xlat29 = u_xlat24 * 5.25 + -6.80000019;\n        u_xlat29 = u_xlat24 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat24 * u_xlat29 + 0.458999991;\n        u_xlat24 = u_xlat24 * u_xlat29 + -0.00286999997;\n        u_xlat24 = u_xlat24 * 1.44269502;\n        u_xlat24 = exp2(u_xlat24);\n        u_xlat24 = u_xlat24 * 0.25;\n        u_xlat24 = u_xlat28 * 0.25 + (-u_xlat24);\n        u_xlat24 = u_xlat26 * u_xlat24 + u_xlat0.y;\n        u_xlat24 = max(u_xlat24, 0.0);\n        u_xlat24 = min(u_xlat24, 50.0);\n        u_xlat6.xyz = u_xlat2.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat7.xyz = (-vec3(u_xlat24)) * u_xlat6.xyz;\n        u_xlat7.xyz = u_xlat7.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat7.xyz = exp2(u_xlat7.xyz);\n        u_xlat24 = u_xlat0.z * u_xlat26;\n        u_xlat5.xyz = u_xlat4.xyz * u_xlat0.xxx + u_xlat5.xyz;\n        u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n        u_xlat26 = (-u_xlat0.x) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat0.x;\n        u_xlat5.x = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat0.x = u_xlat5.x / u_xlat0.x;\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat5.x = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat5.x = u_xlat28 * u_xlat5.x + 3.82999992;\n        u_xlat5.x = u_xlat28 * u_xlat5.x + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat5.x + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n        u_xlat5.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat5.x = u_xlat0.x * u_xlat5.x + 3.82999992;\n        u_xlat5.x = u_xlat0.x * u_xlat5.x + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat5.x + -0.00286999997;\n        u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n        u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat28 * 0.25 + (-u_xlat0.x);\n        u_xlat0.x = u_xlat26 * u_xlat0.x + u_xlat0.y;\n        u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x, 50.0);\n        u_xlat5.xyz = u_xlat6.xyz * (-u_xlat0.xxx);\n        u_xlat5.xyz = u_xlat5.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat5.xyz = exp2(u_xlat5.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat26;\n        u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz;\n        u_xlat0.xyz = u_xlat7.xyz * vec3(u_xlat24) + u_xlat0.xyz;\n        u_xlat5.xyz = u_xlat2.xyz * u_xlat16_3.xxx;\n        u_xlat5.xyz = u_xlat0.xyz * u_xlat5.xyz;\n        u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat16_5.xyz = u_xlat5.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n    } else {\n        u_xlat26 = min(u_xlat4.y, -0.00100000005);\n        u_xlat26 = -9.99999975e-05 / u_xlat26;\n        u_xlat6.xyz = vec3(u_xlat26) * u_xlat4.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat28 = dot((-u_xlat4.xyz), u_xlat6.xyz);\n        u_xlat6.x = dot(_WorldSpaceLightPos0.xyz, u_xlat6.xyz);\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat14.x = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat14.x = u_xlat28 * u_xlat14.x + 3.82999992;\n        u_xlat14.x = u_xlat28 * u_xlat14.x + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat14.x + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat6.x = (-u_xlat6.x) + 1.0;\n        u_xlat14.x = u_xlat6.x * 5.25 + -6.80000019;\n        u_xlat14.x = u_xlat6.x * u_xlat14.x + 3.82999992;\n        u_xlat14.x = u_xlat6.x * u_xlat14.x + 0.458999991;\n        u_xlat6.x = u_xlat6.x * u_xlat14.x + -0.00286999997;\n        u_xlat6.x = u_xlat6.x * 1.44269502;\n        u_xlat6.x = exp2(u_xlat6.x);\n        u_xlat14.xy = vec2(u_xlat28) * vec2(0.25, 0.249900013);\n        u_xlat28 = u_xlat6.x * 0.25 + u_xlat14.x;\n        u_xlat6.xy = vec2(u_xlat26) * vec2(0.5, 20.0);\n        u_xlat7.xyz = u_xlat4.xyz * u_xlat6.xxx;\n        u_xlat7.xyz = u_xlat7.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat26 = dot(u_xlat7.xyz, u_xlat7.xyz);\n        u_xlat26 = sqrt(u_xlat26);\n        u_xlat26 = (-u_xlat26) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = u_xlat26 * u_xlat28 + (-u_xlat14.y);\n        u_xlat28 = max(u_xlat28, 0.0);\n        u_xlat28 = min(u_xlat28, 50.0);\n        u_xlat6.xzw = u_xlat2.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat6.xzw = (-vec3(u_xlat28)) * u_xlat6.xzw;\n        u_xlat6.xzw = u_xlat6.xzw * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat6.xzw);\n        u_xlat26 = u_xlat6.y * u_xlat26;\n        u_xlat6.xyz = u_xlat0.xyz * vec3(u_xlat26);\n        u_xlat2.xyz = u_xlat2.xyz * u_xlat16_3.xxx + vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat5.xyz = u_xlat2.xyz * u_xlat6.xyz;\n        u_xlat16_5.xyz = u_xlat5.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat2.x = u_xlat4.y * -50.0;\n    u_xlat16_3.xyz = vec3(_GroundColor.x, _GroundColor.y, _GroundColor.z) * u_xlat16_0.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD1.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n    u_xlat16_3.x = dot(_WorldSpaceLightPos0.xyz, (-u_xlat4.xyz));\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat16_3.x;\n    u_xlat16_3.x = u_xlat16_3.x * 0.75 + 0.75;\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;\n    vs_TEXCOORD2.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n    vs_TEXCOORD0 = u_xlat2.x;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nvarying mediump float vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nmediump float u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0 = vs_TEXCOORD0;\n    u_xlat16_0 = clamp(u_xlat16_0, 0.0, 1.0);\n    u_xlat16_1.xyz = vs_TEXCOORD1.xyz + (-vs_TEXCOORD2.xyz);\n    SV_Target0.xyz = vec3(u_xlat16_0) * u_xlat16_1.xyz + vs_TEXCOORD2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump float _Exposure;\nuniform \tmediump vec3 _GroundColor;\nuniform \tmediump vec3 _SkyTint;\nuniform \tmediump float _AtmosphereThickness;\nin highp vec4 in_POSITION0;\nout mediump float vs_TEXCOORD0;\nout mediump vec3 vs_TEXCOORD1;\nout mediump vec3 vs_TEXCOORD2;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_5;\nvec4 u_xlat6;\nvec3 u_xlat7;\nfloat u_xlat8;\nvec2 u_xlat14;\nfloat u_xlat16;\nfloat u_xlat24;\nfloat u_xlat26;\nfloat u_xlat28;\nfloat u_xlat29;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat16_1 = log2(vec4(_SkyTint.x, _SkyTint.y, _SkyTint.z, _AtmosphereThickness));\n    u_xlat16_1 = u_xlat16_1 * vec4(0.454545468, 0.454545468, 0.454545468, 2.5);\n    u_xlat16_1 = exp2(u_xlat16_1);\n    u_xlat2.xyz = (-u_xlat16_1.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(0.300000012, 0.300000042, 0.300000012) + vec3(0.5, 0.419999987, 0.324999988);\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n    u_xlat2.xyz = vec3(1.0, 1.0, 1.0) / u_xlat2.xyz;\n    u_xlat16_3.xy = u_xlat16_1.ww * vec2(0.049999997, 0.0314159282);\n    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat4.xyz = vec3(u_xlat24) * u_xlat0.xyz;\n    u_xlatb0 = u_xlat4.y>=0.0;\n    if(u_xlatb0){\n        u_xlat0.x = u_xlat4.y * u_xlat4.y + 0.0506249666;\n        u_xlat0.x = sqrt(u_xlat0.x);\n        u_xlat0.x = (-u_xlat0.y) * u_xlat24 + u_xlat0.x;\n        u_xlat8 = (-u_xlat0.y) * u_xlat24 + 1.0;\n        u_xlat16 = u_xlat8 * 5.25 + -6.80000019;\n        u_xlat16 = u_xlat8 * u_xlat16 + 3.82999992;\n        u_xlat16 = u_xlat8 * u_xlat16 + 0.458999991;\n        u_xlat8 = u_xlat8 * u_xlat16 + -0.00286999997;\n        u_xlat8 = u_xlat8 * 1.44269502;\n        u_xlat0.y = exp2(u_xlat8);\n        u_xlat0.xyz = u_xlat0.xyx * vec3(0.5, 0.246031836, 20.0);\n        u_xlat5.xyz = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat5.xyz = u_xlat5.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat24 = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat24 = sqrt(u_xlat24);\n        u_xlat26 = (-u_xlat24) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat24;\n        u_xlat29 = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat24 = u_xlat29 / u_xlat24;\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat29 = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat29 = u_xlat28 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat28 * u_xlat29 + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat29 + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat24 = (-u_xlat24) + 1.0;\n        u_xlat29 = u_xlat24 * 5.25 + -6.80000019;\n        u_xlat29 = u_xlat24 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat24 * u_xlat29 + 0.458999991;\n        u_xlat24 = u_xlat24 * u_xlat29 + -0.00286999997;\n        u_xlat24 = u_xlat24 * 1.44269502;\n        u_xlat24 = exp2(u_xlat24);\n        u_xlat24 = u_xlat24 * 0.25;\n        u_xlat24 = u_xlat28 * 0.25 + (-u_xlat24);\n        u_xlat24 = u_xlat26 * u_xlat24 + u_xlat0.y;\n        u_xlat24 = max(u_xlat24, 0.0);\n        u_xlat24 = min(u_xlat24, 50.0);\n        u_xlat6.xyz = u_xlat2.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat7.xyz = (-vec3(u_xlat24)) * u_xlat6.xyz;\n        u_xlat7.xyz = u_xlat7.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat7.xyz = exp2(u_xlat7.xyz);\n        u_xlat24 = u_xlat0.z * u_xlat26;\n        u_xlat5.xyz = u_xlat4.xyz * u_xlat0.xxx + u_xlat5.xyz;\n        u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n        u_xlat26 = (-u_xlat0.x) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat0.x;\n        u_xlat5.x = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat0.x = u_xlat5.x / u_xlat0.x;\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat5.x = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat5.x = u_xlat28 * u_xlat5.x + 3.82999992;\n        u_xlat5.x = u_xlat28 * u_xlat5.x + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat5.x + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n        u_xlat5.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat5.x = u_xlat0.x * u_xlat5.x + 3.82999992;\n        u_xlat5.x = u_xlat0.x * u_xlat5.x + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat5.x + -0.00286999997;\n        u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n        u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat28 * 0.25 + (-u_xlat0.x);\n        u_xlat0.x = u_xlat26 * u_xlat0.x + u_xlat0.y;\n        u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x, 50.0);\n        u_xlat5.xyz = u_xlat6.xyz * (-u_xlat0.xxx);\n        u_xlat5.xyz = u_xlat5.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat5.xyz = exp2(u_xlat5.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat26;\n        u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz;\n        u_xlat0.xyz = u_xlat7.xyz * vec3(u_xlat24) + u_xlat0.xyz;\n        u_xlat5.xyz = u_xlat2.xyz * u_xlat16_3.xxx;\n        u_xlat5.xyz = u_xlat0.xyz * u_xlat5.xyz;\n        u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat16_5.xyz = u_xlat5.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n    } else {\n        u_xlat26 = min(u_xlat4.y, -0.00100000005);\n        u_xlat26 = -9.99999975e-05 / u_xlat26;\n        u_xlat6.xyz = vec3(u_xlat26) * u_xlat4.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat28 = dot((-u_xlat4.xyz), u_xlat6.xyz);\n        u_xlat6.x = dot(_WorldSpaceLightPos0.xyz, u_xlat6.xyz);\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat14.x = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat14.x = u_xlat28 * u_xlat14.x + 3.82999992;\n        u_xlat14.x = u_xlat28 * u_xlat14.x + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat14.x + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat6.x = (-u_xlat6.x) + 1.0;\n        u_xlat14.x = u_xlat6.x * 5.25 + -6.80000019;\n        u_xlat14.x = u_xlat6.x * u_xlat14.x + 3.82999992;\n        u_xlat14.x = u_xlat6.x * u_xlat14.x + 0.458999991;\n        u_xlat6.x = u_xlat6.x * u_xlat14.x + -0.00286999997;\n        u_xlat6.x = u_xlat6.x * 1.44269502;\n        u_xlat6.x = exp2(u_xlat6.x);\n        u_xlat14.xy = vec2(u_xlat28) * vec2(0.25, 0.249900013);\n        u_xlat28 = u_xlat6.x * 0.25 + u_xlat14.x;\n        u_xlat6.xy = vec2(u_xlat26) * vec2(0.5, 20.0);\n        u_xlat7.xyz = u_xlat4.xyz * u_xlat6.xxx;\n        u_xlat7.xyz = u_xlat7.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat26 = dot(u_xlat7.xyz, u_xlat7.xyz);\n        u_xlat26 = sqrt(u_xlat26);\n        u_xlat26 = (-u_xlat26) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = u_xlat26 * u_xlat28 + (-u_xlat14.y);\n        u_xlat28 = max(u_xlat28, 0.0);\n        u_xlat28 = min(u_xlat28, 50.0);\n        u_xlat6.xzw = u_xlat2.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat6.xzw = (-vec3(u_xlat28)) * u_xlat6.xzw;\n        u_xlat6.xzw = u_xlat6.xzw * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat6.xzw);\n        u_xlat26 = u_xlat6.y * u_xlat26;\n        u_xlat6.xyz = u_xlat0.xyz * vec3(u_xlat26);\n        u_xlat2.xyz = u_xlat2.xyz * u_xlat16_3.xxx + vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat5.xyz = u_xlat2.xyz * u_xlat6.xyz;\n        u_xlat16_5.xyz = u_xlat5.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat2.x = u_xlat4.y * -50.0;\n    u_xlat16_3.xyz = vec3(_GroundColor.x, _GroundColor.y, _GroundColor.z) * u_xlat16_0.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD1.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n    u_xlat16_3.x = dot(_WorldSpaceLightPos0.xyz, (-u_xlat4.xyz));\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat16_3.x;\n    u_xlat16_3.x = u_xlat16_3.x * 0.75 + 0.75;\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;\n    vs_TEXCOORD2.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n    vs_TEXCOORD0 = u_xlat2.x;\n    return;\n}\n\n","\n#version 300 es\n\nprecision highp float;\nprecision highp int;\nin mediump float vs_TEXCOORD0;\nin mediump vec3 vs_TEXCOORD1;\nin mediump vec3 vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump float u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0 = vs_TEXCOORD0;\n    u_xlat16_0 = clamp(u_xlat16_0, 0.0, 1.0);\n    u_xlat16_1.xyz = vs_TEXCOORD1.xyz + (-vs_TEXCOORD2.xyz);\n    SV_Target0.xyz = vec3(u_xlat16_0) * u_xlat16_1.xyz + vs_TEXCOORD2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","\n#version 100\n\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump float _Exposure;\nuniform \tmediump vec3 _GroundColor;\nuniform \tmediump vec3 _SkyTint;\nuniform \tmediump float _AtmosphereThickness;\nattribute highp vec4 in_POSITION0;\nvarying mediump vec3 vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD2;\nvarying mediump vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_5;\nvec4 u_xlat6;\nvec3 u_xlat7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_11;\nvec2 u_xlat14;\nfloat u_xlat16;\nfloat u_xlat24;\nfloat u_xlat26;\nfloat u_xlat28;\nfloat u_xlat29;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat16_1 = log2(vec4(_SkyTint.x, _SkyTint.y, _SkyTint.z, _AtmosphereThickness));\n    u_xlat16_1 = u_xlat16_1 * vec4(0.454545468, 0.454545468, 0.454545468, 2.5);\n    u_xlat16_1 = exp2(u_xlat16_1);\n    u_xlat2.xyz = (-u_xlat16_1.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(0.300000012, 0.300000042, 0.300000012) + vec3(0.5, 0.419999987, 0.324999988);\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n    u_xlat2.xyz = vec3(1.0, 1.0, 1.0) / u_xlat2.xyz;\n    u_xlat16_3.xy = u_xlat16_1.ww * vec2(0.049999997, 0.0314159282);\n    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat4.xyz = vec3(u_xlat24) * u_xlat0.xyz;\n    u_xlatb0 = u_xlat4.y>=0.0;\n    if(u_xlatb0){\n        u_xlat0.x = u_xlat4.y * u_xlat4.y + 0.0506249666;\n        u_xlat0.x = sqrt(u_xlat0.x);\n        u_xlat0.x = (-u_xlat0.y) * u_xlat24 + u_xlat0.x;\n        u_xlat8 = (-u_xlat0.y) * u_xlat24 + 1.0;\n        u_xlat16 = u_xlat8 * 5.25 + -6.80000019;\n        u_xlat16 = u_xlat8 * u_xlat16 + 3.82999992;\n        u_xlat16 = u_xlat8 * u_xlat16 + 0.458999991;\n        u_xlat8 = u_xlat8 * u_xlat16 + -0.00286999997;\n        u_xlat8 = u_xlat8 * 1.44269502;\n        u_xlat0.y = exp2(u_xlat8);\n        u_xlat0.xyz = u_xlat0.xyx * vec3(0.5, 0.246031836, 20.0);\n        u_xlat5.xyz = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat5.xyz = u_xlat5.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat24 = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat24 = sqrt(u_xlat24);\n        u_xlat26 = (-u_xlat24) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat24;\n        u_xlat29 = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat24 = u_xlat29 / u_xlat24;\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat29 = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat29 = u_xlat28 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat28 * u_xlat29 + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat29 + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat24 = (-u_xlat24) + 1.0;\n        u_xlat29 = u_xlat24 * 5.25 + -6.80000019;\n        u_xlat29 = u_xlat24 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat24 * u_xlat29 + 0.458999991;\n        u_xlat24 = u_xlat24 * u_xlat29 + -0.00286999997;\n        u_xlat24 = u_xlat24 * 1.44269502;\n        u_xlat24 = exp2(u_xlat24);\n        u_xlat24 = u_xlat24 * 0.25;\n        u_xlat24 = u_xlat28 * 0.25 + (-u_xlat24);\n        u_xlat24 = u_xlat26 * u_xlat24 + u_xlat0.y;\n        u_xlat24 = max(u_xlat24, 0.0);\n        u_xlat24 = min(u_xlat24, 50.0);\n        u_xlat6.xyz = u_xlat2.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat7.xyz = (-vec3(u_xlat24)) * u_xlat6.xyz;\n        u_xlat7.xyz = u_xlat7.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat7.xyz = exp2(u_xlat7.xyz);\n        u_xlat24 = u_xlat0.z * u_xlat26;\n        u_xlat5.xyz = u_xlat4.xyz * u_xlat0.xxx + u_xlat5.xyz;\n        u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n        u_xlat26 = (-u_xlat0.x) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat0.x;\n        u_xlat5.x = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat0.x = u_xlat5.x / u_xlat0.x;\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat5.x = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat5.x = u_xlat28 * u_xlat5.x + 3.82999992;\n        u_xlat5.x = u_xlat28 * u_xlat5.x + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat5.x + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n        u_xlat5.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat5.x = u_xlat0.x * u_xlat5.x + 3.82999992;\n        u_xlat5.x = u_xlat0.x * u_xlat5.x + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat5.x + -0.00286999997;\n        u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n        u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat28 * 0.25 + (-u_xlat0.x);\n        u_xlat0.x = u_xlat26 * u_xlat0.x + u_xlat0.y;\n        u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x, 50.0);\n        u_xlat5.xyz = u_xlat6.xyz * (-u_xlat0.xxx);\n        u_xlat5.xyz = u_xlat5.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat5.xyz = exp2(u_xlat5.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat26;\n        u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz;\n        u_xlat0.xyz = u_xlat7.xyz * vec3(u_xlat24) + u_xlat0.xyz;\n        u_xlat5.xyz = u_xlat2.xyz * u_xlat16_3.xxx;\n        u_xlat5.xyz = u_xlat0.xyz * u_xlat5.xyz;\n        u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat16_5.xyz = u_xlat5.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n    } else {\n        u_xlat26 = min(u_xlat4.y, -0.00100000005);\n        u_xlat26 = -9.99999975e-05 / u_xlat26;\n        u_xlat6.xyz = vec3(u_xlat26) * u_xlat4.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat28 = dot((-u_xlat4.xyz), u_xlat6.xyz);\n        u_xlat6.x = dot(_WorldSpaceLightPos0.xyz, u_xlat6.xyz);\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat14.x = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat14.x = u_xlat28 * u_xlat14.x + 3.82999992;\n        u_xlat14.x = u_xlat28 * u_xlat14.x + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat14.x + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat6.x = (-u_xlat6.x) + 1.0;\n        u_xlat14.x = u_xlat6.x * 5.25 + -6.80000019;\n        u_xlat14.x = u_xlat6.x * u_xlat14.x + 3.82999992;\n        u_xlat14.x = u_xlat6.x * u_xlat14.x + 0.458999991;\n        u_xlat6.x = u_xlat6.x * u_xlat14.x + -0.00286999997;\n        u_xlat6.x = u_xlat6.x * 1.44269502;\n        u_xlat6.x = exp2(u_xlat6.x);\n        u_xlat14.xy = vec2(u_xlat28) * vec2(0.25, 0.249900013);\n        u_xlat28 = u_xlat6.x * 0.25 + u_xlat14.x;\n        u_xlat6.xy = vec2(u_xlat26) * vec2(0.5, 20.0);\n        u_xlat7.xyz = u_xlat4.xyz * u_xlat6.xxx;\n        u_xlat7.xyz = u_xlat7.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat26 = dot(u_xlat7.xyz, u_xlat7.xyz);\n        u_xlat26 = sqrt(u_xlat26);\n        u_xlat26 = (-u_xlat26) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = u_xlat26 * u_xlat28 + (-u_xlat14.y);\n        u_xlat28 = max(u_xlat28, 0.0);\n        u_xlat28 = min(u_xlat28, 50.0);\n        u_xlat6.xzw = u_xlat2.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat6.xzw = (-vec3(u_xlat28)) * u_xlat6.xzw;\n        u_xlat6.xzw = u_xlat6.xzw * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat6.xzw);\n        u_xlat26 = u_xlat6.y * u_xlat26;\n        u_xlat6.xyz = u_xlat0.xyz * vec3(u_xlat26);\n        u_xlat2.xyz = u_xlat2.xyz * u_xlat16_3.xxx + vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat5.xyz = u_xlat2.xyz * u_xlat6.xyz;\n        u_xlat16_5.xyz = u_xlat5.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat16_3.xyz = vec3(_GroundColor.x, _GroundColor.y, _GroundColor.z) * u_xlat16_0.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD1.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n    u_xlat16_3.x = dot(_WorldSpaceLightPos0.xyz, (-u_xlat4.xyz));\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat16_3.x;\n    u_xlat16_3.x = u_xlat16_3.x * 0.75 + 0.75;\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;\n    vs_TEXCOORD2.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n    u_xlat16_3.x = dot(_LightColor0.xyz, _LightColor0.xyz);\n    u_xlat16_3.x = sqrt(u_xlat16_3.x);\n    u_xlat16_3.x = max(u_xlat16_3.x, 0.25);\n    u_xlat16_3.x = min(u_xlat16_3.x, 1.0);\n    u_xlat16_11.xyz = u_xlat16_0.xyz * vec3(8000.0, 8000.0, 8000.0);\n    u_xlat16_11.xyz = clamp(u_xlat16_11.xyz, 0.0, 1.0);\n    u_xlat16_11.xyz = u_xlat16_11.xyz * _LightColor0.xyz;\n    u_xlat16_11.xyz = u_xlat16_11.xyz * vec3(27.0, 27.0, 27.0);\n    vs_TEXCOORD3.xyz = u_xlat16_11.xyz / u_xlat16_3.xxx;\n    vs_TEXCOORD0.xyz = (-u_xlat4.xyz);\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tmediump float _SunSize;\nvarying mediump vec3 vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD2;\nvarying mediump vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nmediump vec3 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nbool u_xlatb2;\nmediump vec3 u_xlat16_3;\nvoid main()\n{\n    u_xlat16_0.xyz = vs_TEXCOORD0.xyz + _WorldSpaceLightPos0.xyz;\n    u_xlat16_0.x = dot(u_xlat16_0.xyz, u_xlat16_0.xyz);\n    u_xlat16_0.x = sqrt(u_xlat16_0.x);\n    u_xlat16_3.x = float(1.0) / _SunSize;\n    u_xlat16_0.x = u_xlat16_3.x * u_xlat16_0.x;\n    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);\n    u_xlat16_3.x = u_xlat16_0.x * -2.0 + 3.0;\n    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;\n    u_xlat16_0.x = (-u_xlat16_3.x) * u_xlat16_0.x + 1.0;\n    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;\n    u_xlat16_3.x = vs_TEXCOORD0.y * 50.0;\n    u_xlat16_3.x = clamp(u_xlat16_3.x, 0.0, 1.0);\n    u_xlat16_1.xyz = vs_TEXCOORD1.xyz + (-vs_TEXCOORD2.xyz);\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD3.xyz * u_xlat16_0.xxx + u_xlat16_3.xyz;\n    u_xlatb2 = vs_TEXCOORD0.y<0.0;\n    SV_Target0.xyz = (bool(u_xlatb2)) ? u_xlat16_1.xyz : u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump float _Exposure;\nuniform \tmediump vec3 _GroundColor;\nuniform \tmediump vec3 _SkyTint;\nuniform \tmediump float _AtmosphereThickness;\nin highp vec4 in_POSITION0;\nout mediump vec3 vs_TEXCOORD0;\nout mediump vec3 vs_TEXCOORD1;\nout mediump vec3 vs_TEXCOORD2;\nout mediump vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_5;\nvec4 u_xlat6;\nvec3 u_xlat7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_11;\nvec2 u_xlat14;\nfloat u_xlat16;\nfloat u_xlat24;\nfloat u_xlat26;\nfloat u_xlat28;\nfloat u_xlat29;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat16_1 = log2(vec4(_SkyTint.x, _SkyTint.y, _SkyTint.z, _AtmosphereThickness));\n    u_xlat16_1 = u_xlat16_1 * vec4(0.454545468, 0.454545468, 0.454545468, 2.5);\n    u_xlat16_1 = exp2(u_xlat16_1);\n    u_xlat2.xyz = (-u_xlat16_1.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(0.300000012, 0.300000042, 0.300000012) + vec3(0.5, 0.419999987, 0.324999988);\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n    u_xlat2.xyz = vec3(1.0, 1.0, 1.0) / u_xlat2.xyz;\n    u_xlat16_3.xy = u_xlat16_1.ww * vec2(0.049999997, 0.0314159282);\n    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat4.xyz = vec3(u_xlat24) * u_xlat0.xyz;\n    u_xlatb0 = u_xlat4.y>=0.0;\n    if(u_xlatb0){\n        u_xlat0.x = u_xlat4.y * u_xlat4.y + 0.0506249666;\n        u_xlat0.x = sqrt(u_xlat0.x);\n        u_xlat0.x = (-u_xlat0.y) * u_xlat24 + u_xlat0.x;\n        u_xlat8 = (-u_xlat0.y) * u_xlat24 + 1.0;\n        u_xlat16 = u_xlat8 * 5.25 + -6.80000019;\n        u_xlat16 = u_xlat8 * u_xlat16 + 3.82999992;\n        u_xlat16 = u_xlat8 * u_xlat16 + 0.458999991;\n        u_xlat8 = u_xlat8 * u_xlat16 + -0.00286999997;\n        u_xlat8 = u_xlat8 * 1.44269502;\n        u_xlat0.y = exp2(u_xlat8);\n        u_xlat0.xyz = u_xlat0.xyx * vec3(0.5, 0.246031836, 20.0);\n        u_xlat5.xyz = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat5.xyz = u_xlat5.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat24 = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat24 = sqrt(u_xlat24);\n        u_xlat26 = (-u_xlat24) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat24;\n        u_xlat29 = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat24 = u_xlat29 / u_xlat24;\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat29 = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat29 = u_xlat28 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat28 * u_xlat29 + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat29 + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat24 = (-u_xlat24) + 1.0;\n        u_xlat29 = u_xlat24 * 5.25 + -6.80000019;\n        u_xlat29 = u_xlat24 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat24 * u_xlat29 + 0.458999991;\n        u_xlat24 = u_xlat24 * u_xlat29 + -0.00286999997;\n        u_xlat24 = u_xlat24 * 1.44269502;\n        u_xlat24 = exp2(u_xlat24);\n        u_xlat24 = u_xlat24 * 0.25;\n        u_xlat24 = u_xlat28 * 0.25 + (-u_xlat24);\n        u_xlat24 = u_xlat26 * u_xlat24 + u_xlat0.y;\n        u_xlat24 = max(u_xlat24, 0.0);\n        u_xlat24 = min(u_xlat24, 50.0);\n        u_xlat6.xyz = u_xlat2.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat7.xyz = (-vec3(u_xlat24)) * u_xlat6.xyz;\n        u_xlat7.xyz = u_xlat7.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat7.xyz = exp2(u_xlat7.xyz);\n        u_xlat24 = u_xlat0.z * u_xlat26;\n        u_xlat5.xyz = u_xlat4.xyz * u_xlat0.xxx + u_xlat5.xyz;\n        u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n        u_xlat26 = (-u_xlat0.x) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat0.x;\n        u_xlat5.x = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat0.x = u_xlat5.x / u_xlat0.x;\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat5.x = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat5.x = u_xlat28 * u_xlat5.x + 3.82999992;\n        u_xlat5.x = u_xlat28 * u_xlat5.x + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat5.x + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n        u_xlat5.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat5.x = u_xlat0.x * u_xlat5.x + 3.82999992;\n        u_xlat5.x = u_xlat0.x * u_xlat5.x + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat5.x + -0.00286999997;\n        u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n        u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat28 * 0.25 + (-u_xlat0.x);\n        u_xlat0.x = u_xlat26 * u_xlat0.x + u_xlat0.y;\n        u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x, 50.0);\n        u_xlat5.xyz = u_xlat6.xyz * (-u_xlat0.xxx);\n        u_xlat5.xyz = u_xlat5.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat5.xyz = exp2(u_xlat5.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat26;\n        u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz;\n        u_xlat0.xyz = u_xlat7.xyz * vec3(u_xlat24) + u_xlat0.xyz;\n        u_xlat5.xyz = u_xlat2.xyz * u_xlat16_3.xxx;\n        u_xlat5.xyz = u_xlat0.xyz * u_xlat5.xyz;\n        u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat16_5.xyz = u_xlat5.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n    } else {\n        u_xlat26 = min(u_xlat4.y, -0.00100000005);\n        u_xlat26 = -9.99999975e-05 / u_xlat26;\n        u_xlat6.xyz = vec3(u_xlat26) * u_xlat4.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat28 = dot((-u_xlat4.xyz), u_xlat6.xyz);\n        u_xlat6.x = dot(_WorldSpaceLightPos0.xyz, u_xlat6.xyz);\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat14.x = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat14.x = u_xlat28 * u_xlat14.x + 3.82999992;\n        u_xlat14.x = u_xlat28 * u_xlat14.x + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat14.x + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat6.x = (-u_xlat6.x) + 1.0;\n        u_xlat14.x = u_xlat6.x * 5.25 + -6.80000019;\n        u_xlat14.x = u_xlat6.x * u_xlat14.x + 3.82999992;\n        u_xlat14.x = u_xlat6.x * u_xlat14.x + 0.458999991;\n        u_xlat6.x = u_xlat6.x * u_xlat14.x + -0.00286999997;\n        u_xlat6.x = u_xlat6.x * 1.44269502;\n        u_xlat6.x = exp2(u_xlat6.x);\n        u_xlat14.xy = vec2(u_xlat28) * vec2(0.25, 0.249900013);\n        u_xlat28 = u_xlat6.x * 0.25 + u_xlat14.x;\n        u_xlat6.xy = vec2(u_xlat26) * vec2(0.5, 20.0);\n        u_xlat7.xyz = u_xlat4.xyz * u_xlat6.xxx;\n        u_xlat7.xyz = u_xlat7.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat26 = dot(u_xlat7.xyz, u_xlat7.xyz);\n        u_xlat26 = sqrt(u_xlat26);\n        u_xlat26 = (-u_xlat26) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = u_xlat26 * u_xlat28 + (-u_xlat14.y);\n        u_xlat28 = max(u_xlat28, 0.0);\n        u_xlat28 = min(u_xlat28, 50.0);\n        u_xlat6.xzw = u_xlat2.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat6.xzw = (-vec3(u_xlat28)) * u_xlat6.xzw;\n        u_xlat6.xzw = u_xlat6.xzw * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat6.xzw);\n        u_xlat26 = u_xlat6.y * u_xlat26;\n        u_xlat6.xyz = u_xlat0.xyz * vec3(u_xlat26);\n        u_xlat2.xyz = u_xlat2.xyz * u_xlat16_3.xxx + vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat5.xyz = u_xlat2.xyz * u_xlat6.xyz;\n        u_xlat16_5.xyz = u_xlat5.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat16_3.xyz = vec3(_GroundColor.x, _GroundColor.y, _GroundColor.z) * u_xlat16_0.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD1.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n    u_xlat16_3.x = dot(_WorldSpaceLightPos0.xyz, (-u_xlat4.xyz));\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat16_3.x;\n    u_xlat16_3.x = u_xlat16_3.x * 0.75 + 0.75;\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;\n    vs_TEXCOORD2.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n    u_xlat16_3.x = dot(_LightColor0.xyz, _LightColor0.xyz);\n    u_xlat16_3.x = sqrt(u_xlat16_3.x);\n    u_xlat16_3.x = max(u_xlat16_3.x, 0.25);\n    u_xlat16_3.x = min(u_xlat16_3.x, 1.0);\n    u_xlat16_11.xyz = u_xlat16_0.xyz * vec3(8000.0, 8000.0, 8000.0);\n    u_xlat16_11.xyz = clamp(u_xlat16_11.xyz, 0.0, 1.0);\n    u_xlat16_11.xyz = u_xlat16_11.xyz * _LightColor0.xyz;\n    u_xlat16_11.xyz = u_xlat16_11.xyz * vec3(27.0, 27.0, 27.0);\n    vs_TEXCOORD3.xyz = u_xlat16_11.xyz / u_xlat16_3.xxx;\n    vs_TEXCOORD0.xyz = (-u_xlat4.xyz);\n    return;\n}\n\n","\n#version 300 es\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tmediump float _SunSize;\nin mediump vec3 vs_TEXCOORD0;\nin mediump vec3 vs_TEXCOORD1;\nin mediump vec3 vs_TEXCOORD2;\nin mediump vec3 vs_TEXCOORD3;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump vec3 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nbool u_xlatb2;\nmediump vec3 u_xlat16_3;\nvoid main()\n{\n    u_xlat16_0.xyz = vs_TEXCOORD0.xyz + _WorldSpaceLightPos0.xyz;\n    u_xlat16_0.x = dot(u_xlat16_0.xyz, u_xlat16_0.xyz);\n    u_xlat16_0.x = sqrt(u_xlat16_0.x);\n    u_xlat16_3.x = float(1.0) / _SunSize;\n    u_xlat16_0.x = u_xlat16_3.x * u_xlat16_0.x;\n    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);\n    u_xlat16_3.x = u_xlat16_0.x * -2.0 + 3.0;\n    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;\n    u_xlat16_0.x = (-u_xlat16_3.x) * u_xlat16_0.x + 1.0;\n    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;\n    u_xlat16_3.x = vs_TEXCOORD0.y * 50.0;\n    u_xlat16_3.x = clamp(u_xlat16_3.x, 0.0, 1.0);\n    u_xlat16_1.xyz = vs_TEXCOORD1.xyz + (-vs_TEXCOORD2.xyz);\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD3.xyz * u_xlat16_0.xxx + u_xlat16_3.xyz;\n    u_xlatb2 = vs_TEXCOORD0.y<0.0;\n    SV_Target0.xyz = (bool(u_xlatb2)) ? u_xlat16_1.xyz : u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","\n#version 100\n\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump float _Exposure;\nuniform \tmediump vec3 _GroundColor;\nuniform \tmediump vec3 _SkyTint;\nuniform \tmediump float _AtmosphereThickness;\nattribute highp vec4 in_POSITION0;\nvarying highp vec3 vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD2;\nvarying mediump vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_5;\nvec4 u_xlat6;\nvec3 u_xlat7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_11;\nvec3 u_xlat14;\nfloat u_xlat16;\nfloat u_xlat22;\nfloat u_xlat24;\nfloat u_xlat26;\nfloat u_xlat28;\nfloat u_xlat29;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat16_1 = log2(vec4(_SkyTint.x, _SkyTint.y, _SkyTint.z, _AtmosphereThickness));\n    u_xlat16_1 = u_xlat16_1 * vec4(0.454545468, 0.454545468, 0.454545468, 2.5);\n    u_xlat16_1 = exp2(u_xlat16_1);\n    u_xlat2.xyz = (-u_xlat16_1.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(0.300000012, 0.300000042, 0.300000012) + vec3(0.5, 0.419999987, 0.324999988);\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n    u_xlat2.xyz = vec3(1.0, 1.0, 1.0) / u_xlat2.xyz;\n    u_xlat16_3.xy = u_xlat16_1.ww * vec2(0.049999997, 0.0314159282);\n    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat4.xyz = vec3(u_xlat24) * u_xlat0.xyz;\n    u_xlatb0 = u_xlat4.y>=0.0;\n    if(u_xlatb0){\n        u_xlat0.x = u_xlat4.y * u_xlat4.y + 0.0506249666;\n        u_xlat0.x = sqrt(u_xlat0.x);\n        u_xlat0.x = (-u_xlat0.y) * u_xlat24 + u_xlat0.x;\n        u_xlat8 = (-u_xlat0.y) * u_xlat24 + 1.0;\n        u_xlat16 = u_xlat8 * 5.25 + -6.80000019;\n        u_xlat16 = u_xlat8 * u_xlat16 + 3.82999992;\n        u_xlat16 = u_xlat8 * u_xlat16 + 0.458999991;\n        u_xlat8 = u_xlat8 * u_xlat16 + -0.00286999997;\n        u_xlat8 = u_xlat8 * 1.44269502;\n        u_xlat0.y = exp2(u_xlat8);\n        u_xlat0.xyz = u_xlat0.xyx * vec3(0.5, 0.246031836, 20.0);\n        u_xlat5.xyz = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat5.xyz = u_xlat5.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat24 = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat24 = sqrt(u_xlat24);\n        u_xlat26 = (-u_xlat24) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat24;\n        u_xlat29 = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat24 = u_xlat29 / u_xlat24;\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat29 = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat29 = u_xlat28 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat28 * u_xlat29 + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat29 + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat24 = (-u_xlat24) + 1.0;\n        u_xlat29 = u_xlat24 * 5.25 + -6.80000019;\n        u_xlat29 = u_xlat24 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat24 * u_xlat29 + 0.458999991;\n        u_xlat24 = u_xlat24 * u_xlat29 + -0.00286999997;\n        u_xlat24 = u_xlat24 * 1.44269502;\n        u_xlat24 = exp2(u_xlat24);\n        u_xlat24 = u_xlat24 * 0.25;\n        u_xlat24 = u_xlat28 * 0.25 + (-u_xlat24);\n        u_xlat24 = u_xlat26 * u_xlat24 + u_xlat0.y;\n        u_xlat24 = max(u_xlat24, 0.0);\n        u_xlat24 = min(u_xlat24, 50.0);\n        u_xlat6.xyz = u_xlat2.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat7.xyz = (-vec3(u_xlat24)) * u_xlat6.xyz;\n        u_xlat7.xyz = u_xlat7.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat7.xyz = exp2(u_xlat7.xyz);\n        u_xlat24 = u_xlat0.z * u_xlat26;\n        u_xlat5.xyz = u_xlat4.xyz * u_xlat0.xxx + u_xlat5.xyz;\n        u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n        u_xlat26 = (-u_xlat0.x) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat0.x;\n        u_xlat5.x = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat0.x = u_xlat5.x / u_xlat0.x;\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat5.x = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat5.x = u_xlat28 * u_xlat5.x + 3.82999992;\n        u_xlat5.x = u_xlat28 * u_xlat5.x + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat5.x + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n        u_xlat5.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat5.x = u_xlat0.x * u_xlat5.x + 3.82999992;\n        u_xlat5.x = u_xlat0.x * u_xlat5.x + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat5.x + -0.00286999997;\n        u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n        u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat28 * 0.25 + (-u_xlat0.x);\n        u_xlat0.x = u_xlat26 * u_xlat0.x + u_xlat0.y;\n        u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x, 50.0);\n        u_xlat5.xyz = u_xlat6.xyz * (-u_xlat0.xxx);\n        u_xlat5.xyz = u_xlat5.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat5.xyz = exp2(u_xlat5.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat26;\n        u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz;\n        u_xlat0.xyz = u_xlat7.xyz * vec3(u_xlat24) + u_xlat0.xyz;\n        u_xlat5.xyz = u_xlat2.xyz * u_xlat16_3.xxx;\n        u_xlat5.xyz = u_xlat0.xyz * u_xlat5.xyz;\n        u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat16_5.xyz = u_xlat5.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n    } else {\n        u_xlat28 = min(u_xlat4.y, -0.00100000005);\n        u_xlat28 = -9.99999975e-05 / u_xlat28;\n        u_xlat6.xyz = vec3(u_xlat28) * u_xlat4.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat6.w = dot((-u_xlat4.xyz), u_xlat6.xyz);\n        u_xlat6.x = dot(_WorldSpaceLightPos0.xyz, u_xlat6.xyz);\n        u_xlat6.xy = (-u_xlat6.xw) + vec2(1.0, 1.0);\n        u_xlat22 = u_xlat6.y * 5.25 + -6.80000019;\n        u_xlat22 = u_xlat6.y * u_xlat22 + 3.82999992;\n        u_xlat22 = u_xlat6.y * u_xlat22 + 0.458999991;\n        u_xlat14.x = u_xlat6.y * u_xlat22 + -0.00286999997;\n        u_xlat14.x = u_xlat14.x * 1.44269502;\n        u_xlat6.y = exp2(u_xlat14.x);\n        u_xlat22 = u_xlat6.x * 5.25 + -6.80000019;\n        u_xlat22 = u_xlat6.x * u_xlat22 + 3.82999992;\n        u_xlat22 = u_xlat6.x * u_xlat22 + 0.458999991;\n        u_xlat6.x = u_xlat6.x * u_xlat22 + -0.00286999997;\n        u_xlat6.xyz = u_xlat6.xyy * vec3(1.44269502, 0.25, 0.249900013);\n        u_xlat6.x = exp2(u_xlat6.x);\n        u_xlat6.x = u_xlat6.x * 0.25 + u_xlat6.y;\n        u_xlat14.xz = vec2(u_xlat28) * vec2(0.5, 20.0);\n        u_xlat7.xyz = u_xlat4.xyz * u_xlat14.xxx;\n        u_xlat7.xyz = u_xlat7.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat28 = dot(u_xlat7.xyz, u_xlat7.xyz);\n        u_xlat28 = sqrt(u_xlat28);\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat28 = u_xlat28 * 230.831207;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat6.x = u_xlat28 * u_xlat6.x + (-u_xlat6.z);\n        u_xlat6.x = max(u_xlat6.x, 0.0);\n        u_xlat6.x = min(u_xlat6.x, 50.0);\n        u_xlat7.xyz = u_xlat2.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat6.xyz = (-u_xlat6.xxx) * u_xlat7.xyz;\n        u_xlat6.xyz = u_xlat6.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat6.xyz);\n        u_xlat28 = u_xlat14.z * u_xlat28;\n        u_xlat6.xyz = u_xlat0.xyz * vec3(u_xlat28);\n        u_xlat7.xyz = u_xlat2.xyz * u_xlat16_3.xxx + vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat5.xyz = u_xlat6.xyz * u_xlat7.xyz;\n        u_xlat16_5.xyz = u_xlat5.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat16_3.xyz = vec3(_GroundColor.x, _GroundColor.y, _GroundColor.z) * u_xlat16_0.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD1.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n    u_xlat16_3.x = dot(_WorldSpaceLightPos0.xyz, (-u_xlat4.xyz));\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat16_3.x;\n    u_xlat16_3.x = u_xlat16_3.x * 0.75 + 0.75;\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;\n    vs_TEXCOORD2.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n    u_xlat16_3.x = dot(_LightColor0.xyz, _LightColor0.xyz);\n    u_xlat16_3.x = sqrt(u_xlat16_3.x);\n    u_xlat16_3.x = max(u_xlat16_3.x, 0.25);\n    u_xlat16_3.x = min(u_xlat16_3.x, 1.0);\n    u_xlat16_0.xyz = u_xlat16_0.xyz;\n    u_xlat16_0.xyz = clamp(u_xlat16_0.xyz, 0.0, 1.0);\n    u_xlat16_11.xyz = u_xlat16_0.xyz * _LightColor0.xyz;\n    u_xlat16_11.xyz = u_xlat16_11.xyz * vec3(15.0, 15.0, 15.0);\n    vs_TEXCOORD3.xyz = u_xlat16_11.xyz / u_xlat16_3.xxx;\n    vs_TEXCOORD0.xyz = (-u_xlat4.xyz);\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tmediump float _SunSize;\nuniform \tmediump float _SunSizeConvergence;\nvarying highp vec3 vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD2;\nvarying mediump vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nmediump vec2 u_xlat16_0;\nvec3 u_xlat1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump float u_xlat16_6;\nvoid main()\n{\n    u_xlat16_0.x = log2(_SunSize);\n    u_xlat16_0.x = u_xlat16_0.x * 0.649999976;\n    u_xlat16_0.x = exp2(u_xlat16_0.x);\n    u_xlat1.x = dot(vs_TEXCOORD0.xyz, vs_TEXCOORD0.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat1.xyz = u_xlat1.xxx * vs_TEXCOORD0.xyz;\n    u_xlat16_3.x = dot(_WorldSpaceLightPos0.xyz, (-u_xlat1.xyz));\n    u_xlat16_3.x = clamp(u_xlat16_3.x, 0.0, 1.0);\n    u_xlat16_3.x = log2(u_xlat16_3.x);\n    u_xlat16_3.x = u_xlat16_3.x * _SunSizeConvergence;\n    u_xlat16_3.x = exp2(u_xlat16_3.x);\n    u_xlat16_6 = (-u_xlat16_3.x) * 1.98000002 + 1.98010004;\n    u_xlat16_0.y = u_xlat16_3.x * u_xlat16_3.x + 1.0;\n    u_xlat16_0.xy = u_xlat16_0.xy * vec2(10.0, 0.0100164423);\n    u_xlat16_6 = log2(u_xlat16_6);\n    u_xlat16_0.x = u_xlat16_6 * u_xlat16_0.x;\n    u_xlat16_0.x = exp2(u_xlat16_0.x);\n    u_xlat16_0.x = max(u_xlat16_0.x, 9.99999975e-05);\n    u_xlat16_0.x = u_xlat16_0.y / u_xlat16_0.x;\n    u_xlat16_3.x = u_xlat1.y * 50.0;\n    u_xlat16_3.x = clamp(u_xlat16_3.x, 0.0, 1.0);\n    u_xlatb1 = u_xlat1.y<0.0;\n    u_xlat16_2.xyz = vs_TEXCOORD1.xyz + (-vs_TEXCOORD2.xyz);\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_2.xyz + vs_TEXCOORD2.xyz;\n    u_xlat16_2.xyz = vs_TEXCOORD3.xyz * u_xlat16_0.xxx + u_xlat16_3.xyz;\n    SV_Target0.xyz = (bool(u_xlatb1)) ? u_xlat16_2.xyz : u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump float _Exposure;\nuniform \tmediump vec3 _GroundColor;\nuniform \tmediump vec3 _SkyTint;\nuniform \tmediump float _AtmosphereThickness;\nin highp vec4 in_POSITION0;\nout highp vec3 vs_TEXCOORD0;\nout mediump vec3 vs_TEXCOORD1;\nout mediump vec3 vs_TEXCOORD2;\nout mediump vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_5;\nvec4 u_xlat6;\nvec3 u_xlat7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_11;\nvec3 u_xlat14;\nfloat u_xlat16;\nfloat u_xlat22;\nfloat u_xlat24;\nfloat u_xlat26;\nfloat u_xlat28;\nfloat u_xlat29;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat16_1 = log2(vec4(_SkyTint.x, _SkyTint.y, _SkyTint.z, _AtmosphereThickness));\n    u_xlat16_1 = u_xlat16_1 * vec4(0.454545468, 0.454545468, 0.454545468, 2.5);\n    u_xlat16_1 = exp2(u_xlat16_1);\n    u_xlat2.xyz = (-u_xlat16_1.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(0.300000012, 0.300000042, 0.300000012) + vec3(0.5, 0.419999987, 0.324999988);\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n    u_xlat2.xyz = vec3(1.0, 1.0, 1.0) / u_xlat2.xyz;\n    u_xlat16_3.xy = u_xlat16_1.ww * vec2(0.049999997, 0.0314159282);\n    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat4.xyz = vec3(u_xlat24) * u_xlat0.xyz;\n    u_xlatb0 = u_xlat4.y>=0.0;\n    if(u_xlatb0){\n        u_xlat0.x = u_xlat4.y * u_xlat4.y + 0.0506249666;\n        u_xlat0.x = sqrt(u_xlat0.x);\n        u_xlat0.x = (-u_xlat0.y) * u_xlat24 + u_xlat0.x;\n        u_xlat8 = (-u_xlat0.y) * u_xlat24 + 1.0;\n        u_xlat16 = u_xlat8 * 5.25 + -6.80000019;\n        u_xlat16 = u_xlat8 * u_xlat16 + 3.82999992;\n        u_xlat16 = u_xlat8 * u_xlat16 + 0.458999991;\n        u_xlat8 = u_xlat8 * u_xlat16 + -0.00286999997;\n        u_xlat8 = u_xlat8 * 1.44269502;\n        u_xlat0.y = exp2(u_xlat8);\n        u_xlat0.xyz = u_xlat0.xyx * vec3(0.5, 0.246031836, 20.0);\n        u_xlat5.xyz = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat5.xyz = u_xlat5.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat24 = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat24 = sqrt(u_xlat24);\n        u_xlat26 = (-u_xlat24) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat24;\n        u_xlat29 = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat24 = u_xlat29 / u_xlat24;\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat29 = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat29 = u_xlat28 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat28 * u_xlat29 + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat29 + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat24 = (-u_xlat24) + 1.0;\n        u_xlat29 = u_xlat24 * 5.25 + -6.80000019;\n        u_xlat29 = u_xlat24 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat24 * u_xlat29 + 0.458999991;\n        u_xlat24 = u_xlat24 * u_xlat29 + -0.00286999997;\n        u_xlat24 = u_xlat24 * 1.44269502;\n        u_xlat24 = exp2(u_xlat24);\n        u_xlat24 = u_xlat24 * 0.25;\n        u_xlat24 = u_xlat28 * 0.25 + (-u_xlat24);\n        u_xlat24 = u_xlat26 * u_xlat24 + u_xlat0.y;\n        u_xlat24 = max(u_xlat24, 0.0);\n        u_xlat24 = min(u_xlat24, 50.0);\n        u_xlat6.xyz = u_xlat2.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat7.xyz = (-vec3(u_xlat24)) * u_xlat6.xyz;\n        u_xlat7.xyz = u_xlat7.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat7.xyz = exp2(u_xlat7.xyz);\n        u_xlat24 = u_xlat0.z * u_xlat26;\n        u_xlat5.xyz = u_xlat4.xyz * u_xlat0.xxx + u_xlat5.xyz;\n        u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n        u_xlat26 = (-u_xlat0.x) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat0.x;\n        u_xlat5.x = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat0.x = u_xlat5.x / u_xlat0.x;\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat5.x = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat5.x = u_xlat28 * u_xlat5.x + 3.82999992;\n        u_xlat5.x = u_xlat28 * u_xlat5.x + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat5.x + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n        u_xlat5.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat5.x = u_xlat0.x * u_xlat5.x + 3.82999992;\n        u_xlat5.x = u_xlat0.x * u_xlat5.x + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat5.x + -0.00286999997;\n        u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n        u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat28 * 0.25 + (-u_xlat0.x);\n        u_xlat0.x = u_xlat26 * u_xlat0.x + u_xlat0.y;\n        u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x, 50.0);\n        u_xlat5.xyz = u_xlat6.xyz * (-u_xlat0.xxx);\n        u_xlat5.xyz = u_xlat5.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat5.xyz = exp2(u_xlat5.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat26;\n        u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz;\n        u_xlat0.xyz = u_xlat7.xyz * vec3(u_xlat24) + u_xlat0.xyz;\n        u_xlat5.xyz = u_xlat2.xyz * u_xlat16_3.xxx;\n        u_xlat5.xyz = u_xlat0.xyz * u_xlat5.xyz;\n        u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat16_5.xyz = u_xlat5.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n    } else {\n        u_xlat28 = min(u_xlat4.y, -0.00100000005);\n        u_xlat28 = -9.99999975e-05 / u_xlat28;\n        u_xlat6.xyz = vec3(u_xlat28) * u_xlat4.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat6.w = dot((-u_xlat4.xyz), u_xlat6.xyz);\n        u_xlat6.x = dot(_WorldSpaceLightPos0.xyz, u_xlat6.xyz);\n        u_xlat6.xy = (-u_xlat6.xw) + vec2(1.0, 1.0);\n        u_xlat22 = u_xlat6.y * 5.25 + -6.80000019;\n        u_xlat22 = u_xlat6.y * u_xlat22 + 3.82999992;\n        u_xlat22 = u_xlat6.y * u_xlat22 + 0.458999991;\n        u_xlat14.x = u_xlat6.y * u_xlat22 + -0.00286999997;\n        u_xlat14.x = u_xlat14.x * 1.44269502;\n        u_xlat6.y = exp2(u_xlat14.x);\n        u_xlat22 = u_xlat6.x * 5.25 + -6.80000019;\n        u_xlat22 = u_xlat6.x * u_xlat22 + 3.82999992;\n        u_xlat22 = u_xlat6.x * u_xlat22 + 0.458999991;\n        u_xlat6.x = u_xlat6.x * u_xlat22 + -0.00286999997;\n        u_xlat6.xyz = u_xlat6.xyy * vec3(1.44269502, 0.25, 0.249900013);\n        u_xlat6.x = exp2(u_xlat6.x);\n        u_xlat6.x = u_xlat6.x * 0.25 + u_xlat6.y;\n        u_xlat14.xz = vec2(u_xlat28) * vec2(0.5, 20.0);\n        u_xlat7.xyz = u_xlat4.xyz * u_xlat14.xxx;\n        u_xlat7.xyz = u_xlat7.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat28 = dot(u_xlat7.xyz, u_xlat7.xyz);\n        u_xlat28 = sqrt(u_xlat28);\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat28 = u_xlat28 * 230.831207;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat6.x = u_xlat28 * u_xlat6.x + (-u_xlat6.z);\n        u_xlat6.x = max(u_xlat6.x, 0.0);\n        u_xlat6.x = min(u_xlat6.x, 50.0);\n        u_xlat7.xyz = u_xlat2.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat6.xyz = (-u_xlat6.xxx) * u_xlat7.xyz;\n        u_xlat6.xyz = u_xlat6.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat6.xyz);\n        u_xlat28 = u_xlat14.z * u_xlat28;\n        u_xlat6.xyz = u_xlat0.xyz * vec3(u_xlat28);\n        u_xlat7.xyz = u_xlat2.xyz * u_xlat16_3.xxx + vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat5.xyz = u_xlat6.xyz * u_xlat7.xyz;\n        u_xlat16_5.xyz = u_xlat5.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat16_3.xyz = vec3(_GroundColor.x, _GroundColor.y, _GroundColor.z) * u_xlat16_0.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD1.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n    u_xlat16_3.x = dot(_WorldSpaceLightPos0.xyz, (-u_xlat4.xyz));\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat16_3.x;\n    u_xlat16_3.x = u_xlat16_3.x * 0.75 + 0.75;\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;\n    vs_TEXCOORD2.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n    u_xlat16_3.x = dot(_LightColor0.xyz, _LightColor0.xyz);\n    u_xlat16_3.x = sqrt(u_xlat16_3.x);\n    u_xlat16_3.x = max(u_xlat16_3.x, 0.25);\n    u_xlat16_3.x = min(u_xlat16_3.x, 1.0);\n    u_xlat16_0.xyz = u_xlat16_0.xyz;\n    u_xlat16_0.xyz = clamp(u_xlat16_0.xyz, 0.0, 1.0);\n    u_xlat16_11.xyz = u_xlat16_0.xyz * _LightColor0.xyz;\n    u_xlat16_11.xyz = u_xlat16_11.xyz * vec3(15.0, 15.0, 15.0);\n    vs_TEXCOORD3.xyz = u_xlat16_11.xyz / u_xlat16_3.xxx;\n    vs_TEXCOORD0.xyz = (-u_xlat4.xyz);\n    return;\n}\n\n","\n#version 300 es\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tmediump float _SunSize;\nuniform \tmediump float _SunSizeConvergence;\nin highp vec3 vs_TEXCOORD0;\nin mediump vec3 vs_TEXCOORD1;\nin mediump vec3 vs_TEXCOORD2;\nin mediump vec3 vs_TEXCOORD3;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump vec2 u_xlat16_0;\nvec3 u_xlat1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump float u_xlat16_6;\nvoid main()\n{\n    u_xlat16_0.x = log2(_SunSize);\n    u_xlat16_0.x = u_xlat16_0.x * 0.649999976;\n    u_xlat16_0.x = exp2(u_xlat16_0.x);\n    u_xlat1.x = dot(vs_TEXCOORD0.xyz, vs_TEXCOORD0.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat1.xyz = u_xlat1.xxx * vs_TEXCOORD0.xyz;\n    u_xlat16_3.x = dot(_WorldSpaceLightPos0.xyz, (-u_xlat1.xyz));\n    u_xlat16_3.x = clamp(u_xlat16_3.x, 0.0, 1.0);\n    u_xlat16_3.x = log2(u_xlat16_3.x);\n    u_xlat16_3.x = u_xlat16_3.x * _SunSizeConvergence;\n    u_xlat16_3.x = exp2(u_xlat16_3.x);\n    u_xlat16_6 = (-u_xlat16_3.x) * 1.98000002 + 1.98010004;\n    u_xlat16_0.y = u_xlat16_3.x * u_xlat16_3.x + 1.0;\n    u_xlat16_0.xy = u_xlat16_0.xy * vec2(10.0, 0.0100164423);\n    u_xlat16_6 = log2(u_xlat16_6);\n    u_xlat16_0.x = u_xlat16_6 * u_xlat16_0.x;\n    u_xlat16_0.x = exp2(u_xlat16_0.x);\n    u_xlat16_0.x = max(u_xlat16_0.x, 9.99999975e-05);\n    u_xlat16_0.x = u_xlat16_0.y / u_xlat16_0.x;\n    u_xlat16_3.x = u_xlat1.y * 50.0;\n    u_xlat16_3.x = clamp(u_xlat16_3.x, 0.0, 1.0);\n    u_xlatb1 = u_xlat1.y<0.0;\n    u_xlat16_2.xyz = vs_TEXCOORD1.xyz + (-vs_TEXCOORD2.xyz);\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_2.xyz + vs_TEXCOORD2.xyz;\n    u_xlat16_2.xyz = vs_TEXCOORD3.xyz * u_xlat16_0.xxx + u_xlat16_3.xyz;\n    SV_Target0.xyz = (bool(u_xlatb1)) ? u_xlat16_2.xyz : u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","\n#version 100\n\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump float _Exposure;\nuniform \tmediump vec3 _GroundColor;\nuniform \tmediump vec3 _SkyTint;\nuniform \tmediump float _AtmosphereThickness;\nattribute highp vec4 in_POSITION0;\nvarying mediump float vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD2;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_5;\nvec4 u_xlat6;\nvec3 u_xlat7;\nfloat u_xlat8;\nvec2 u_xlat14;\nfloat u_xlat16;\nfloat u_xlat24;\nfloat u_xlat26;\nfloat u_xlat28;\nfloat u_xlat29;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat16_1 = log2(vec4(_SkyTint.x, _SkyTint.y, _SkyTint.z, _AtmosphereThickness));\n    u_xlat16_1 = u_xlat16_1 * vec4(0.454545468, 0.454545468, 0.454545468, 2.5);\n    u_xlat16_1 = exp2(u_xlat16_1);\n    u_xlat2.xyz = (-u_xlat16_1.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(0.300000012, 0.300000042, 0.300000012) + vec3(0.5, 0.419999987, 0.324999988);\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n    u_xlat2.xyz = vec3(1.0, 1.0, 1.0) / u_xlat2.xyz;\n    u_xlat16_3.xy = u_xlat16_1.ww * vec2(0.049999997, 0.0314159282);\n    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat4.xyz = vec3(u_xlat24) * u_xlat0.xyz;\n    u_xlatb0 = u_xlat4.y>=0.0;\n    if(u_xlatb0){\n        u_xlat0.x = u_xlat4.y * u_xlat4.y + 0.0506249666;\n        u_xlat0.x = sqrt(u_xlat0.x);\n        u_xlat0.x = (-u_xlat0.y) * u_xlat24 + u_xlat0.x;\n        u_xlat8 = (-u_xlat0.y) * u_xlat24 + 1.0;\n        u_xlat16 = u_xlat8 * 5.25 + -6.80000019;\n        u_xlat16 = u_xlat8 * u_xlat16 + 3.82999992;\n        u_xlat16 = u_xlat8 * u_xlat16 + 0.458999991;\n        u_xlat8 = u_xlat8 * u_xlat16 + -0.00286999997;\n        u_xlat8 = u_xlat8 * 1.44269502;\n        u_xlat0.y = exp2(u_xlat8);\n        u_xlat0.xyz = u_xlat0.xyx * vec3(0.5, 0.246031836, 20.0);\n        u_xlat5.xyz = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat5.xyz = u_xlat5.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat24 = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat24 = sqrt(u_xlat24);\n        u_xlat26 = (-u_xlat24) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat24;\n        u_xlat29 = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat24 = u_xlat29 / u_xlat24;\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat29 = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat29 = u_xlat28 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat28 * u_xlat29 + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat29 + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat24 = (-u_xlat24) + 1.0;\n        u_xlat29 = u_xlat24 * 5.25 + -6.80000019;\n        u_xlat29 = u_xlat24 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat24 * u_xlat29 + 0.458999991;\n        u_xlat24 = u_xlat24 * u_xlat29 + -0.00286999997;\n        u_xlat24 = u_xlat24 * 1.44269502;\n        u_xlat24 = exp2(u_xlat24);\n        u_xlat24 = u_xlat24 * 0.25;\n        u_xlat24 = u_xlat28 * 0.25 + (-u_xlat24);\n        u_xlat24 = u_xlat26 * u_xlat24 + u_xlat0.y;\n        u_xlat24 = max(u_xlat24, 0.0);\n        u_xlat24 = min(u_xlat24, 50.0);\n        u_xlat6.xyz = u_xlat2.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat7.xyz = (-vec3(u_xlat24)) * u_xlat6.xyz;\n        u_xlat7.xyz = u_xlat7.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat7.xyz = exp2(u_xlat7.xyz);\n        u_xlat24 = u_xlat0.z * u_xlat26;\n        u_xlat5.xyz = u_xlat4.xyz * u_xlat0.xxx + u_xlat5.xyz;\n        u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n        u_xlat26 = (-u_xlat0.x) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat0.x;\n        u_xlat5.x = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat0.x = u_xlat5.x / u_xlat0.x;\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat5.x = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat5.x = u_xlat28 * u_xlat5.x + 3.82999992;\n        u_xlat5.x = u_xlat28 * u_xlat5.x + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat5.x + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n        u_xlat5.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat5.x = u_xlat0.x * u_xlat5.x + 3.82999992;\n        u_xlat5.x = u_xlat0.x * u_xlat5.x + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat5.x + -0.00286999997;\n        u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n        u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat28 * 0.25 + (-u_xlat0.x);\n        u_xlat0.x = u_xlat26 * u_xlat0.x + u_xlat0.y;\n        u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x, 50.0);\n        u_xlat5.xyz = u_xlat6.xyz * (-u_xlat0.xxx);\n        u_xlat5.xyz = u_xlat5.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat5.xyz = exp2(u_xlat5.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat26;\n        u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz;\n        u_xlat0.xyz = u_xlat7.xyz * vec3(u_xlat24) + u_xlat0.xyz;\n        u_xlat5.xyz = u_xlat2.xyz * u_xlat16_3.xxx;\n        u_xlat5.xyz = u_xlat0.xyz * u_xlat5.xyz;\n        u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat16_5.xyz = u_xlat5.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n    } else {\n        u_xlat26 = min(u_xlat4.y, -0.00100000005);\n        u_xlat26 = -9.99999975e-05 / u_xlat26;\n        u_xlat6.xyz = vec3(u_xlat26) * u_xlat4.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat28 = dot((-u_xlat4.xyz), u_xlat6.xyz);\n        u_xlat6.x = dot(_WorldSpaceLightPos0.xyz, u_xlat6.xyz);\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat14.x = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat14.x = u_xlat28 * u_xlat14.x + 3.82999992;\n        u_xlat14.x = u_xlat28 * u_xlat14.x + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat14.x + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat6.x = (-u_xlat6.x) + 1.0;\n        u_xlat14.x = u_xlat6.x * 5.25 + -6.80000019;\n        u_xlat14.x = u_xlat6.x * u_xlat14.x + 3.82999992;\n        u_xlat14.x = u_xlat6.x * u_xlat14.x + 0.458999991;\n        u_xlat6.x = u_xlat6.x * u_xlat14.x + -0.00286999997;\n        u_xlat6.x = u_xlat6.x * 1.44269502;\n        u_xlat6.x = exp2(u_xlat6.x);\n        u_xlat14.xy = vec2(u_xlat28) * vec2(0.25, 0.249900013);\n        u_xlat28 = u_xlat6.x * 0.25 + u_xlat14.x;\n        u_xlat6.xy = vec2(u_xlat26) * vec2(0.5, 20.0);\n        u_xlat7.xyz = u_xlat4.xyz * u_xlat6.xxx;\n        u_xlat7.xyz = u_xlat7.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat26 = dot(u_xlat7.xyz, u_xlat7.xyz);\n        u_xlat26 = sqrt(u_xlat26);\n        u_xlat26 = (-u_xlat26) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = u_xlat26 * u_xlat28 + (-u_xlat14.y);\n        u_xlat28 = max(u_xlat28, 0.0);\n        u_xlat28 = min(u_xlat28, 50.0);\n        u_xlat6.xzw = u_xlat2.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat6.xzw = (-vec3(u_xlat28)) * u_xlat6.xzw;\n        u_xlat6.xzw = u_xlat6.xzw * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat6.xzw);\n        u_xlat26 = u_xlat6.y * u_xlat26;\n        u_xlat6.xyz = u_xlat0.xyz * vec3(u_xlat26);\n        u_xlat2.xyz = u_xlat2.xyz * u_xlat16_3.xxx + vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat5.xyz = u_xlat2.xyz * u_xlat6.xyz;\n        u_xlat16_5.xyz = u_xlat5.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat2.x = u_xlat4.y * -50.0;\n    u_xlat16_3.xyz = vec3(_GroundColor.x, _GroundColor.y, _GroundColor.z) * u_xlat16_0.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD1.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n    u_xlat16_3.x = dot(_WorldSpaceLightPos0.xyz, (-u_xlat4.xyz));\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat16_3.x;\n    u_xlat16_3.x = u_xlat16_3.x * 0.75 + 0.75;\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;\n    vs_TEXCOORD2.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n    vs_TEXCOORD0 = u_xlat2.x;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nvarying mediump float vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nmediump float u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0 = vs_TEXCOORD0;\n    u_xlat16_0 = clamp(u_xlat16_0, 0.0, 1.0);\n    u_xlat16_1.xyz = vs_TEXCOORD1.xyz + (-vs_TEXCOORD2.xyz);\n    SV_Target0.xyz = vec3(u_xlat16_0) * u_xlat16_1.xyz + vs_TEXCOORD2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump float _Exposure;\nuniform \tmediump vec3 _GroundColor;\nuniform \tmediump vec3 _SkyTint;\nuniform \tmediump float _AtmosphereThickness;\nin highp vec4 in_POSITION0;\nout mediump float vs_TEXCOORD0;\nout mediump vec3 vs_TEXCOORD1;\nout mediump vec3 vs_TEXCOORD2;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_5;\nvec4 u_xlat6;\nvec3 u_xlat7;\nfloat u_xlat8;\nvec2 u_xlat14;\nfloat u_xlat16;\nfloat u_xlat24;\nfloat u_xlat26;\nfloat u_xlat28;\nfloat u_xlat29;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat16_1 = log2(vec4(_SkyTint.x, _SkyTint.y, _SkyTint.z, _AtmosphereThickness));\n    u_xlat16_1 = u_xlat16_1 * vec4(0.454545468, 0.454545468, 0.454545468, 2.5);\n    u_xlat16_1 = exp2(u_xlat16_1);\n    u_xlat2.xyz = (-u_xlat16_1.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(0.300000012, 0.300000042, 0.300000012) + vec3(0.5, 0.419999987, 0.324999988);\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n    u_xlat2.xyz = vec3(1.0, 1.0, 1.0) / u_xlat2.xyz;\n    u_xlat16_3.xy = u_xlat16_1.ww * vec2(0.049999997, 0.0314159282);\n    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat4.xyz = vec3(u_xlat24) * u_xlat0.xyz;\n    u_xlatb0 = u_xlat4.y>=0.0;\n    if(u_xlatb0){\n        u_xlat0.x = u_xlat4.y * u_xlat4.y + 0.0506249666;\n        u_xlat0.x = sqrt(u_xlat0.x);\n        u_xlat0.x = (-u_xlat0.y) * u_xlat24 + u_xlat0.x;\n        u_xlat8 = (-u_xlat0.y) * u_xlat24 + 1.0;\n        u_xlat16 = u_xlat8 * 5.25 + -6.80000019;\n        u_xlat16 = u_xlat8 * u_xlat16 + 3.82999992;\n        u_xlat16 = u_xlat8 * u_xlat16 + 0.458999991;\n        u_xlat8 = u_xlat8 * u_xlat16 + -0.00286999997;\n        u_xlat8 = u_xlat8 * 1.44269502;\n        u_xlat0.y = exp2(u_xlat8);\n        u_xlat0.xyz = u_xlat0.xyx * vec3(0.5, 0.246031836, 20.0);\n        u_xlat5.xyz = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat5.xyz = u_xlat5.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat24 = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat24 = sqrt(u_xlat24);\n        u_xlat26 = (-u_xlat24) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat24;\n        u_xlat29 = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat24 = u_xlat29 / u_xlat24;\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat29 = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat29 = u_xlat28 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat28 * u_xlat29 + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat29 + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat24 = (-u_xlat24) + 1.0;\n        u_xlat29 = u_xlat24 * 5.25 + -6.80000019;\n        u_xlat29 = u_xlat24 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat24 * u_xlat29 + 0.458999991;\n        u_xlat24 = u_xlat24 * u_xlat29 + -0.00286999997;\n        u_xlat24 = u_xlat24 * 1.44269502;\n        u_xlat24 = exp2(u_xlat24);\n        u_xlat24 = u_xlat24 * 0.25;\n        u_xlat24 = u_xlat28 * 0.25 + (-u_xlat24);\n        u_xlat24 = u_xlat26 * u_xlat24 + u_xlat0.y;\n        u_xlat24 = max(u_xlat24, 0.0);\n        u_xlat24 = min(u_xlat24, 50.0);\n        u_xlat6.xyz = u_xlat2.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat7.xyz = (-vec3(u_xlat24)) * u_xlat6.xyz;\n        u_xlat7.xyz = u_xlat7.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat7.xyz = exp2(u_xlat7.xyz);\n        u_xlat24 = u_xlat0.z * u_xlat26;\n        u_xlat5.xyz = u_xlat4.xyz * u_xlat0.xxx + u_xlat5.xyz;\n        u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n        u_xlat26 = (-u_xlat0.x) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat0.x;\n        u_xlat5.x = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat0.x = u_xlat5.x / u_xlat0.x;\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat5.x = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat5.x = u_xlat28 * u_xlat5.x + 3.82999992;\n        u_xlat5.x = u_xlat28 * u_xlat5.x + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat5.x + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n        u_xlat5.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat5.x = u_xlat0.x * u_xlat5.x + 3.82999992;\n        u_xlat5.x = u_xlat0.x * u_xlat5.x + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat5.x + -0.00286999997;\n        u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n        u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat28 * 0.25 + (-u_xlat0.x);\n        u_xlat0.x = u_xlat26 * u_xlat0.x + u_xlat0.y;\n        u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x, 50.0);\n        u_xlat5.xyz = u_xlat6.xyz * (-u_xlat0.xxx);\n        u_xlat5.xyz = u_xlat5.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat5.xyz = exp2(u_xlat5.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat26;\n        u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz;\n        u_xlat0.xyz = u_xlat7.xyz * vec3(u_xlat24) + u_xlat0.xyz;\n        u_xlat5.xyz = u_xlat2.xyz * u_xlat16_3.xxx;\n        u_xlat5.xyz = u_xlat0.xyz * u_xlat5.xyz;\n        u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat16_5.xyz = u_xlat5.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n    } else {\n        u_xlat26 = min(u_xlat4.y, -0.00100000005);\n        u_xlat26 = -9.99999975e-05 / u_xlat26;\n        u_xlat6.xyz = vec3(u_xlat26) * u_xlat4.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat28 = dot((-u_xlat4.xyz), u_xlat6.xyz);\n        u_xlat6.x = dot(_WorldSpaceLightPos0.xyz, u_xlat6.xyz);\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat14.x = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat14.x = u_xlat28 * u_xlat14.x + 3.82999992;\n        u_xlat14.x = u_xlat28 * u_xlat14.x + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat14.x + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat6.x = (-u_xlat6.x) + 1.0;\n        u_xlat14.x = u_xlat6.x * 5.25 + -6.80000019;\n        u_xlat14.x = u_xlat6.x * u_xlat14.x + 3.82999992;\n        u_xlat14.x = u_xlat6.x * u_xlat14.x + 0.458999991;\n        u_xlat6.x = u_xlat6.x * u_xlat14.x + -0.00286999997;\n        u_xlat6.x = u_xlat6.x * 1.44269502;\n        u_xlat6.x = exp2(u_xlat6.x);\n        u_xlat14.xy = vec2(u_xlat28) * vec2(0.25, 0.249900013);\n        u_xlat28 = u_xlat6.x * 0.25 + u_xlat14.x;\n        u_xlat6.xy = vec2(u_xlat26) * vec2(0.5, 20.0);\n        u_xlat7.xyz = u_xlat4.xyz * u_xlat6.xxx;\n        u_xlat7.xyz = u_xlat7.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat26 = dot(u_xlat7.xyz, u_xlat7.xyz);\n        u_xlat26 = sqrt(u_xlat26);\n        u_xlat26 = (-u_xlat26) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = u_xlat26 * u_xlat28 + (-u_xlat14.y);\n        u_xlat28 = max(u_xlat28, 0.0);\n        u_xlat28 = min(u_xlat28, 50.0);\n        u_xlat6.xzw = u_xlat2.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat6.xzw = (-vec3(u_xlat28)) * u_xlat6.xzw;\n        u_xlat6.xzw = u_xlat6.xzw * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat6.xzw);\n        u_xlat26 = u_xlat6.y * u_xlat26;\n        u_xlat6.xyz = u_xlat0.xyz * vec3(u_xlat26);\n        u_xlat2.xyz = u_xlat2.xyz * u_xlat16_3.xxx + vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat5.xyz = u_xlat2.xyz * u_xlat6.xyz;\n        u_xlat16_5.xyz = u_xlat5.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat2.x = u_xlat4.y * -50.0;\n    u_xlat16_3.xyz = vec3(_GroundColor.x, _GroundColor.y, _GroundColor.z) * u_xlat16_0.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD1.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n    u_xlat16_3.x = dot(_WorldSpaceLightPos0.xyz, (-u_xlat4.xyz));\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat16_3.x;\n    u_xlat16_3.x = u_xlat16_3.x * 0.75 + 0.75;\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;\n    vs_TEXCOORD2.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n    vs_TEXCOORD0 = u_xlat2.x;\n    return;\n}\n\n","\n#version 300 es\n\nprecision highp float;\nprecision highp int;\nin mediump float vs_TEXCOORD0;\nin mediump vec3 vs_TEXCOORD1;\nin mediump vec3 vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump float u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0 = vs_TEXCOORD0;\n    u_xlat16_0 = clamp(u_xlat16_0, 0.0, 1.0);\n    u_xlat16_1.xyz = vs_TEXCOORD1.xyz + (-vs_TEXCOORD2.xyz);\n    SV_Target0.xyz = vec3(u_xlat16_0) * u_xlat16_1.xyz + vs_TEXCOORD2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","\n#version 100\n\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump float _Exposure;\nuniform \tmediump vec3 _GroundColor;\nuniform \tmediump vec3 _SkyTint;\nuniform \tmediump float _AtmosphereThickness;\nattribute highp vec4 in_POSITION0;\nvarying mediump float vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD2;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_5;\nvec4 u_xlat6;\nvec3 u_xlat7;\nfloat u_xlat8;\nvec2 u_xlat14;\nfloat u_xlat16;\nfloat u_xlat24;\nfloat u_xlat26;\nfloat u_xlat28;\nfloat u_xlat29;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat16_1 = log2(vec4(_SkyTint.x, _SkyTint.y, _SkyTint.z, _AtmosphereThickness));\n    u_xlat16_1 = u_xlat16_1 * vec4(0.454545468, 0.454545468, 0.454545468, 2.5);\n    u_xlat16_1 = exp2(u_xlat16_1);\n    u_xlat2.xyz = (-u_xlat16_1.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(0.300000012, 0.300000042, 0.300000012) + vec3(0.5, 0.419999987, 0.324999988);\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n    u_xlat2.xyz = vec3(1.0, 1.0, 1.0) / u_xlat2.xyz;\n    u_xlat16_3.xy = u_xlat16_1.ww * vec2(0.049999997, 0.0314159282);\n    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat4.xyz = vec3(u_xlat24) * u_xlat0.xyz;\n    u_xlatb0 = u_xlat4.y>=0.0;\n    if(u_xlatb0){\n        u_xlat0.x = u_xlat4.y * u_xlat4.y + 0.0506249666;\n        u_xlat0.x = sqrt(u_xlat0.x);\n        u_xlat0.x = (-u_xlat0.y) * u_xlat24 + u_xlat0.x;\n        u_xlat8 = (-u_xlat0.y) * u_xlat24 + 1.0;\n        u_xlat16 = u_xlat8 * 5.25 + -6.80000019;\n        u_xlat16 = u_xlat8 * u_xlat16 + 3.82999992;\n        u_xlat16 = u_xlat8 * u_xlat16 + 0.458999991;\n        u_xlat8 = u_xlat8 * u_xlat16 + -0.00286999997;\n        u_xlat8 = u_xlat8 * 1.44269502;\n        u_xlat0.y = exp2(u_xlat8);\n        u_xlat0.xyz = u_xlat0.xyx * vec3(0.5, 0.246031836, 20.0);\n        u_xlat5.xyz = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat5.xyz = u_xlat5.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat24 = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat24 = sqrt(u_xlat24);\n        u_xlat26 = (-u_xlat24) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat24;\n        u_xlat29 = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat24 = u_xlat29 / u_xlat24;\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat29 = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat29 = u_xlat28 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat28 * u_xlat29 + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat29 + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat24 = (-u_xlat24) + 1.0;\n        u_xlat29 = u_xlat24 * 5.25 + -6.80000019;\n        u_xlat29 = u_xlat24 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat24 * u_xlat29 + 0.458999991;\n        u_xlat24 = u_xlat24 * u_xlat29 + -0.00286999997;\n        u_xlat24 = u_xlat24 * 1.44269502;\n        u_xlat24 = exp2(u_xlat24);\n        u_xlat24 = u_xlat24 * 0.25;\n        u_xlat24 = u_xlat28 * 0.25 + (-u_xlat24);\n        u_xlat24 = u_xlat26 * u_xlat24 + u_xlat0.y;\n        u_xlat24 = max(u_xlat24, 0.0);\n        u_xlat24 = min(u_xlat24, 50.0);\n        u_xlat6.xyz = u_xlat2.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat7.xyz = (-vec3(u_xlat24)) * u_xlat6.xyz;\n        u_xlat7.xyz = u_xlat7.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat7.xyz = exp2(u_xlat7.xyz);\n        u_xlat24 = u_xlat0.z * u_xlat26;\n        u_xlat5.xyz = u_xlat4.xyz * u_xlat0.xxx + u_xlat5.xyz;\n        u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n        u_xlat26 = (-u_xlat0.x) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat0.x;\n        u_xlat5.x = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat0.x = u_xlat5.x / u_xlat0.x;\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat5.x = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat5.x = u_xlat28 * u_xlat5.x + 3.82999992;\n        u_xlat5.x = u_xlat28 * u_xlat5.x + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat5.x + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n        u_xlat5.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat5.x = u_xlat0.x * u_xlat5.x + 3.82999992;\n        u_xlat5.x = u_xlat0.x * u_xlat5.x + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat5.x + -0.00286999997;\n        u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n        u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat28 * 0.25 + (-u_xlat0.x);\n        u_xlat0.x = u_xlat26 * u_xlat0.x + u_xlat0.y;\n        u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x, 50.0);\n        u_xlat5.xyz = u_xlat6.xyz * (-u_xlat0.xxx);\n        u_xlat5.xyz = u_xlat5.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat5.xyz = exp2(u_xlat5.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat26;\n        u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz;\n        u_xlat0.xyz = u_xlat7.xyz * vec3(u_xlat24) + u_xlat0.xyz;\n        u_xlat5.xyz = u_xlat2.xyz * u_xlat16_3.xxx;\n        u_xlat5.xyz = u_xlat0.xyz * u_xlat5.xyz;\n        u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat16_5.xyz = u_xlat5.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n    } else {\n        u_xlat26 = min(u_xlat4.y, -0.00100000005);\n        u_xlat26 = -9.99999975e-05 / u_xlat26;\n        u_xlat6.xyz = vec3(u_xlat26) * u_xlat4.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat28 = dot((-u_xlat4.xyz), u_xlat6.xyz);\n        u_xlat6.x = dot(_WorldSpaceLightPos0.xyz, u_xlat6.xyz);\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat14.x = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat14.x = u_xlat28 * u_xlat14.x + 3.82999992;\n        u_xlat14.x = u_xlat28 * u_xlat14.x + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat14.x + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat6.x = (-u_xlat6.x) + 1.0;\n        u_xlat14.x = u_xlat6.x * 5.25 + -6.80000019;\n        u_xlat14.x = u_xlat6.x * u_xlat14.x + 3.82999992;\n        u_xlat14.x = u_xlat6.x * u_xlat14.x + 0.458999991;\n        u_xlat6.x = u_xlat6.x * u_xlat14.x + -0.00286999997;\n        u_xlat6.x = u_xlat6.x * 1.44269502;\n        u_xlat6.x = exp2(u_xlat6.x);\n        u_xlat14.xy = vec2(u_xlat28) * vec2(0.25, 0.249900013);\n        u_xlat28 = u_xlat6.x * 0.25 + u_xlat14.x;\n        u_xlat6.xy = vec2(u_xlat26) * vec2(0.5, 20.0);\n        u_xlat7.xyz = u_xlat4.xyz * u_xlat6.xxx;\n        u_xlat7.xyz = u_xlat7.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat26 = dot(u_xlat7.xyz, u_xlat7.xyz);\n        u_xlat26 = sqrt(u_xlat26);\n        u_xlat26 = (-u_xlat26) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = u_xlat26 * u_xlat28 + (-u_xlat14.y);\n        u_xlat28 = max(u_xlat28, 0.0);\n        u_xlat28 = min(u_xlat28, 50.0);\n        u_xlat6.xzw = u_xlat2.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat6.xzw = (-vec3(u_xlat28)) * u_xlat6.xzw;\n        u_xlat6.xzw = u_xlat6.xzw * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat6.xzw);\n        u_xlat26 = u_xlat6.y * u_xlat26;\n        u_xlat6.xyz = u_xlat0.xyz * vec3(u_xlat26);\n        u_xlat2.xyz = u_xlat2.xyz * u_xlat16_3.xxx + vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat5.xyz = u_xlat2.xyz * u_xlat6.xyz;\n        u_xlat16_5.xyz = u_xlat5.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat2.x = u_xlat4.y * -50.0;\n    u_xlat16_3.xyz = vec3(_GroundColor.x, _GroundColor.y, _GroundColor.z) * u_xlat16_0.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD1.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n    u_xlat16_3.x = dot(_WorldSpaceLightPos0.xyz, (-u_xlat4.xyz));\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat16_3.x;\n    u_xlat16_3.x = u_xlat16_3.x * 0.75 + 0.75;\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;\n    vs_TEXCOORD2.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n    vs_TEXCOORD0 = u_xlat2.x;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nvarying mediump float vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nmediump float u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0 = vs_TEXCOORD0;\n    u_xlat16_0 = clamp(u_xlat16_0, 0.0, 1.0);\n    u_xlat16_1.xyz = vs_TEXCOORD1.xyz + (-vs_TEXCOORD2.xyz);\n    SV_Target0.xyz = vec3(u_xlat16_0) * u_xlat16_1.xyz + vs_TEXCOORD2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump float _Exposure;\nuniform \tmediump vec3 _GroundColor;\nuniform \tmediump vec3 _SkyTint;\nuniform \tmediump float _AtmosphereThickness;\nin highp vec4 in_POSITION0;\nout mediump float vs_TEXCOORD0;\nout mediump vec3 vs_TEXCOORD1;\nout mediump vec3 vs_TEXCOORD2;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_5;\nvec4 u_xlat6;\nvec3 u_xlat7;\nfloat u_xlat8;\nvec2 u_xlat14;\nfloat u_xlat16;\nfloat u_xlat24;\nfloat u_xlat26;\nfloat u_xlat28;\nfloat u_xlat29;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat16_1 = log2(vec4(_SkyTint.x, _SkyTint.y, _SkyTint.z, _AtmosphereThickness));\n    u_xlat16_1 = u_xlat16_1 * vec4(0.454545468, 0.454545468, 0.454545468, 2.5);\n    u_xlat16_1 = exp2(u_xlat16_1);\n    u_xlat2.xyz = (-u_xlat16_1.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(0.300000012, 0.300000042, 0.300000012) + vec3(0.5, 0.419999987, 0.324999988);\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n    u_xlat2.xyz = vec3(1.0, 1.0, 1.0) / u_xlat2.xyz;\n    u_xlat16_3.xy = u_xlat16_1.ww * vec2(0.049999997, 0.0314159282);\n    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat4.xyz = vec3(u_xlat24) * u_xlat0.xyz;\n    u_xlatb0 = u_xlat4.y>=0.0;\n    if(u_xlatb0){\n        u_xlat0.x = u_xlat4.y * u_xlat4.y + 0.0506249666;\n        u_xlat0.x = sqrt(u_xlat0.x);\n        u_xlat0.x = (-u_xlat0.y) * u_xlat24 + u_xlat0.x;\n        u_xlat8 = (-u_xlat0.y) * u_xlat24 + 1.0;\n        u_xlat16 = u_xlat8 * 5.25 + -6.80000019;\n        u_xlat16 = u_xlat8 * u_xlat16 + 3.82999992;\n        u_xlat16 = u_xlat8 * u_xlat16 + 0.458999991;\n        u_xlat8 = u_xlat8 * u_xlat16 + -0.00286999997;\n        u_xlat8 = u_xlat8 * 1.44269502;\n        u_xlat0.y = exp2(u_xlat8);\n        u_xlat0.xyz = u_xlat0.xyx * vec3(0.5, 0.246031836, 20.0);\n        u_xlat5.xyz = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat5.xyz = u_xlat5.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat24 = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat24 = sqrt(u_xlat24);\n        u_xlat26 = (-u_xlat24) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat24;\n        u_xlat29 = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat24 = u_xlat29 / u_xlat24;\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat29 = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat29 = u_xlat28 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat28 * u_xlat29 + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat29 + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat24 = (-u_xlat24) + 1.0;\n        u_xlat29 = u_xlat24 * 5.25 + -6.80000019;\n        u_xlat29 = u_xlat24 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat24 * u_xlat29 + 0.458999991;\n        u_xlat24 = u_xlat24 * u_xlat29 + -0.00286999997;\n        u_xlat24 = u_xlat24 * 1.44269502;\n        u_xlat24 = exp2(u_xlat24);\n        u_xlat24 = u_xlat24 * 0.25;\n        u_xlat24 = u_xlat28 * 0.25 + (-u_xlat24);\n        u_xlat24 = u_xlat26 * u_xlat24 + u_xlat0.y;\n        u_xlat24 = max(u_xlat24, 0.0);\n        u_xlat24 = min(u_xlat24, 50.0);\n        u_xlat6.xyz = u_xlat2.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat7.xyz = (-vec3(u_xlat24)) * u_xlat6.xyz;\n        u_xlat7.xyz = u_xlat7.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat7.xyz = exp2(u_xlat7.xyz);\n        u_xlat24 = u_xlat0.z * u_xlat26;\n        u_xlat5.xyz = u_xlat4.xyz * u_xlat0.xxx + u_xlat5.xyz;\n        u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n        u_xlat26 = (-u_xlat0.x) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat0.x;\n        u_xlat5.x = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat0.x = u_xlat5.x / u_xlat0.x;\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat5.x = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat5.x = u_xlat28 * u_xlat5.x + 3.82999992;\n        u_xlat5.x = u_xlat28 * u_xlat5.x + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat5.x + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n        u_xlat5.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat5.x = u_xlat0.x * u_xlat5.x + 3.82999992;\n        u_xlat5.x = u_xlat0.x * u_xlat5.x + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat5.x + -0.00286999997;\n        u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n        u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat28 * 0.25 + (-u_xlat0.x);\n        u_xlat0.x = u_xlat26 * u_xlat0.x + u_xlat0.y;\n        u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x, 50.0);\n        u_xlat5.xyz = u_xlat6.xyz * (-u_xlat0.xxx);\n        u_xlat5.xyz = u_xlat5.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat5.xyz = exp2(u_xlat5.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat26;\n        u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz;\n        u_xlat0.xyz = u_xlat7.xyz * vec3(u_xlat24) + u_xlat0.xyz;\n        u_xlat5.xyz = u_xlat2.xyz * u_xlat16_3.xxx;\n        u_xlat5.xyz = u_xlat0.xyz * u_xlat5.xyz;\n        u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat16_5.xyz = u_xlat5.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n    } else {\n        u_xlat26 = min(u_xlat4.y, -0.00100000005);\n        u_xlat26 = -9.99999975e-05 / u_xlat26;\n        u_xlat6.xyz = vec3(u_xlat26) * u_xlat4.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat28 = dot((-u_xlat4.xyz), u_xlat6.xyz);\n        u_xlat6.x = dot(_WorldSpaceLightPos0.xyz, u_xlat6.xyz);\n        u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat14.x = u_xlat28 * 5.25 + -6.80000019;\n        u_xlat14.x = u_xlat28 * u_xlat14.x + 3.82999992;\n        u_xlat14.x = u_xlat28 * u_xlat14.x + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat14.x + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat6.x = (-u_xlat6.x) + 1.0;\n        u_xlat14.x = u_xlat6.x * 5.25 + -6.80000019;\n        u_xlat14.x = u_xlat6.x * u_xlat14.x + 3.82999992;\n        u_xlat14.x = u_xlat6.x * u_xlat14.x + 0.458999991;\n        u_xlat6.x = u_xlat6.x * u_xlat14.x + -0.00286999997;\n        u_xlat6.x = u_xlat6.x * 1.44269502;\n        u_xlat6.x = exp2(u_xlat6.x);\n        u_xlat14.xy = vec2(u_xlat28) * vec2(0.25, 0.249900013);\n        u_xlat28 = u_xlat6.x * 0.25 + u_xlat14.x;\n        u_xlat6.xy = vec2(u_xlat26) * vec2(0.5, 20.0);\n        u_xlat7.xyz = u_xlat4.xyz * u_xlat6.xxx;\n        u_xlat7.xyz = u_xlat7.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat26 = dot(u_xlat7.xyz, u_xlat7.xyz);\n        u_xlat26 = sqrt(u_xlat26);\n        u_xlat26 = (-u_xlat26) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = u_xlat26 * u_xlat28 + (-u_xlat14.y);\n        u_xlat28 = max(u_xlat28, 0.0);\n        u_xlat28 = min(u_xlat28, 50.0);\n        u_xlat6.xzw = u_xlat2.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat6.xzw = (-vec3(u_xlat28)) * u_xlat6.xzw;\n        u_xlat6.xzw = u_xlat6.xzw * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat6.xzw);\n        u_xlat26 = u_xlat6.y * u_xlat26;\n        u_xlat6.xyz = u_xlat0.xyz * vec3(u_xlat26);\n        u_xlat2.xyz = u_xlat2.xyz * u_xlat16_3.xxx + vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat5.xyz = u_xlat2.xyz * u_xlat6.xyz;\n        u_xlat16_5.xyz = u_xlat5.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat2.x = u_xlat4.y * -50.0;\n    u_xlat16_3.xyz = vec3(_GroundColor.x, _GroundColor.y, _GroundColor.z) * u_xlat16_0.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD1.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n    u_xlat16_3.x = dot(_WorldSpaceLightPos0.xyz, (-u_xlat4.xyz));\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat16_3.x;\n    u_xlat16_3.x = u_xlat16_3.x * 0.75 + 0.75;\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;\n    vs_TEXCOORD2.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n    vs_TEXCOORD0 = u_xlat2.x;\n    return;\n}\n\n","\n#version 300 es\n\nprecision highp float;\nprecision highp int;\nin mediump float vs_TEXCOORD0;\nin mediump vec3 vs_TEXCOORD1;\nin mediump vec3 vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump float u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0 = vs_TEXCOORD0;\n    u_xlat16_0 = clamp(u_xlat16_0, 0.0, 1.0);\n    u_xlat16_1.xyz = vs_TEXCOORD1.xyz + (-vs_TEXCOORD2.xyz);\n    SV_Target0.xyz = vec3(u_xlat16_0) * u_xlat16_1.xyz + vs_TEXCOORD2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"]